
CUDoom_46.elf:     file format elf32-littlenios2
CUDoom_46.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000801b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000f640 memsz 0x0000f640 flags r-x
    LOAD off    0x00010660 vaddr 0x0008f660 paddr 0x000912fc align 2**12
         filesz 0x00001c9c memsz 0x00001c9c flags rw-
    LOAD off    0x00012f98 vaddr 0x00092f98 paddr 0x00092f98 align 2**12
         filesz 0x00000000 memsz 0x0000f06c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000ef90  000801b4  000801b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000051c  0008f144  0008f144  00010144  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c9c  0008f660  000912fc  00010660  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000f06c  00092f98  00092f98  00012f98  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  000122fc  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000d78  00000000  00000000  00012320  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000014b4  00000000  00000000  00013098  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023497  00000000  00000000  0001454c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00007ec3  00000000  00000000  000379e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001597f  00000000  00000000  0003f8a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000019f4  00000000  00000000  00055228  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002504  00000000  00000000  00056c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000d484  00000000  00000000  00059120  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000665a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000a20  00000000  00000000  000665d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006a0c7  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  0006a0ca  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0006a0cf  2**0
                  CONTENTS, READONLY
 20 .stderr_dev   0000000b  00000000  00000000  0006a0d0  2**0
                  CONTENTS, READONLY
 21 .stdin_dev    0000000b  00000000  00000000  0006a0db  2**0
                  CONTENTS, READONLY
 22 .stdout_dev   0000000b  00000000  00000000  0006a0e6  2**0
                  CONTENTS, READONLY
 23 .sopc_system_name 00000008  00000000  00000000  0006a0f1  2**0
                  CONTENTS, READONLY
 24 .quartus_project_dir 00000034  00000000  00000000  0006a0f9  2**0
                  CONTENTS, READONLY
 25 .jdi          000040c8  00000000  00000000  0006a12d  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     00023bb9  00000000  00000000  0006e1f5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
000801b4 l    d  .text	00000000 .text
0008f144 l    d  .rodata	00000000 .rodata
0008f660 l    d  .rwdata	00000000 .rwdata
00092f98 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000801fc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
0008f1c8 l     O .rodata	00000108 two_over_pi
0008f148 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
0008f2d0 l     O .rodata	00000010 init_jk
0008f2e0 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 dp-bit.c
0008313c l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00083d6c l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0008455c l     F .text	00000058 __sprint_r
0008f4a2 l     O .rodata	00000010 blanks.3452
0008f492 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000865c0 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00087fbc l     F .text	00000058 std
000880c8 l     F .text	00000008 __fp_lock
000880d0 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0008f8a0 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 locale.c
000912c8 l     O .rwdata	00000004 charset
0008f4d8 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0008f620 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0008c8c8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008c928 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008ca28 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008cb48 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008cc28 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008cd84 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0008cfb0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000912ec l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0008d24c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0009025c l     O .rwdata	00001060 jtag_uart_0
0008d324 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008d564 l     F .text	00000228 altera_avalon_jtag_uart_irq
0008d78c l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008e054 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008e478 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0008e5b4 l     F .text	000000dc alt_file_locked
0008e818 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0008ef2c l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0008f0e0 l     F .text	00000040 alt_sim_halt
00089d78 g     F .text	00000094 _mprec_log10
00089e64 g     F .text	00000088 __any_on
0008b5e4 g     F .text	00000070 _isatty_r
0008f5f8 g     O .rodata	00000028 __mprec_tinytens
0008cde4 g     F .text	0000006c alt_main
000a1d74 g     O .bss	00000100 alt_irq
00082cfc g     F .text	00000018 fabs
0008b654 g     F .text	00000078 _lseek_r
000912fc g       *ABS*	00000000 __flash_rwdata_start
00083a04 g     F .text	00000088 __eqdf2
000a2004 g       *ABS*	00000000 __alt_heap_start
000844e4 g     F .text	00000044 printf
0008b03c g     F .text	00000068 __sseek
00088024 g     F .text	000000a4 __sinit
00088cfc g     F .text	00000084 _setlocale_r
00088124 g     F .text	00000068 __sfmoreglue
00092ff4 g     O .bss	00003660 dirsine
0008ce70 g     F .text	00000020 __malloc_unlock
00080998 g     F .text	000000f8 DrawTexture
000897f4 g     F .text	000000e0 memmove
00088114 g     F .text	00000010 _cleanup
00089eec g     F .text	000000bc _Balloc
00083a8c g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00080000 g     F .entry	0000001c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
0008b570 g     F .text	00000074 _fstat_r
00092fb0 g     O .bss	00000004 errno
00082d14 g     F .text	00000224 floor
00092fb8 g     O .bss	00000004 alt_argv
000992bc g       *ABS*	00000000 _gp
000900dc g     O .rwdata	00000180 alt_fd_list
00080e14 g     F .text	00000828 __ieee754_rem_pio2
0008ea3c g     F .text	00000094 alt_find_dev
00089754 g     F .text	000000a0 memcpy
0008f660 g     O .rwdata	00000240 worldMap
00088108 g     F .text	0000000c _cleanup_r
00083b9c g     F .text	000000f8 __floatsidf
0008e53c g     F .text	00000078 alt_io_redirect
0008c5b0 g     F .text	00000088 __ltdf2
0008f144 g       *ABS*	00000000 __DTOR_END__
00080914 g     F .text	00000028 intToDouble
0008ea1c g     F .text	00000020 altera_nios2_irq_init
00089cc8 g     F .text	000000b0 __ratio
0008d9a4 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00084528 g     F .text	00000034 _printf_r
00083ea8 g     F .text	00000008 __udivsi3
0008ca88 g     F .text	000000c0 isatty
0008f508 g     O .rodata	000000c8 __mprec_tens
00088cd8 g     F .text	00000008 __locale_charset
0008163c g     F .text	0000052c __kernel_cos
0008eca8 g     F .text	00000090 alt_icache_flush
00092fa4 g     O .bss	00000004 __malloc_top_pad
000912c4 g     O .rwdata	00000004 __mb_cur_max
00088ce0 g     F .text	0000000c _localeconv_r
0008a5e4 g     F .text	0000003c __i2b
000886bc g     F .text	0000049c __sfvwrite_r
0008afc4 g     F .text	00000070 _sbrk_r
0008b6cc g     F .text	00000078 _read_r
0008fca0 g     O .rwdata	0000000c __lc_ctype
000912e4 g     O .rwdata	00000004 alt_max_fd
000842e4 g     F .text	00000138 __unpack_d
0008b44c g     F .text	00000110 _fclose_r
00087f88 g     F .text	00000034 fflush
00092fa8 g     O .bss	00000004 __malloc_max_sbrked_mem
000829e4 g     F .text	00000318 __kernel_sin
000835cc g     F .text	00000074 __adddf3
00089ba8 g     F .text	00000120 __b2d
0008bd20 g     F .text	000005b0 __umoddi3
0008cc94 g     F .text	000000f0 lseek
000912c0 g     O .rwdata	00000004 _global_impure_ptr
0008a960 g     F .text	000005f4 _realloc_r
000a2004 g       *ABS*	00000000 __bss_end
0008e380 g     F .text	000000f8 alt_iic_isr_register
0008e910 g     F .text	0000010c alt_tick
0008b744 g     F .text	000005dc __udivdi3
0008f5d0 g     O .rodata	00000028 __mprec_bigtens
0008a840 g     F .text	00000120 __s2b
0008c638 g     F .text	00000194 __floatunsidf
00089ac8 g     F .text	00000060 __mcmp
000880f0 g     F .text	00000018 __fp_lock_all
0008e338 g     F .text	00000048 alt_ic_irq_enabled
0008e878 g     F .text	00000098 alt_alarm_stop
00092fc0 g     O .bss	00000004 alt_irq_active
000800ec g     F .exceptions	000000c8 alt_irq_handler
000900b4 g     O .rwdata	00000028 alt_dev_null
00081b68 g     F .text	00000e7c __kernel_rem_pio2
0008df5c g     F .text	00000044 alt_dcache_flush_all
00089994 g     F .text	00000070 __hi0bits
00083c94 g     F .text	000000d8 __fixdfsi
000912fc g       *ABS*	00000000 __ram_rwdata_end
00096654 g     O .bss	00003660 sine
000912dc g     O .rwdata	00000008 alt_dev_list
0008d12c g     F .text	00000120 write
0008f660 g       *ABS*	00000000 __ram_rodata_end
0008c954 g     F .text	000000d4 fstat
0008a720 g     F .text	00000120 __pow5mult
00092f98 g     O .bss	00000004 __nlocale_changed
00083eb0 g     F .text	00000008 __umodsi3
000a2004 g       *ABS*	00000000 end
0008d4a4 g     F .text	000000c0 altera_avalon_jtag_uart_init
0008f140 g       *ABS*	00000000 __CTOR_LIST__
00100000 g       *ABS*	00000000 __alt_stack_pointer
00083f50 g     F .text	00000080 __clzsi2
0008dbc8 g     F .text	00000240 altera_avalon_jtag_uart_write
00080b40 g     F .text	00000168 cos
00088014 g     F .text	00000004 __sfp_lock_acquire
00089670 g     F .text	000000e4 memchr
000845b4 g     F .text	00001eac ___vfprintf_internal_r
000883a8 g     F .text	00000314 _free_r
0008ef30 g     F .text	000001b0 __call_exitprocs
00092f9c g     O .bss	00000004 __mlocale_changed
000912d0 g     O .rwdata	00000004 __malloc_sbrk_base
000801b4 g     F .text	0000004c _start
00092fc4 g     O .bss	00000004 _alt_tick_rate
00080ca8 g     F .text	0000016c sin
0008a2b0 g     F .text	0000014c __lshift
00092fc8 g     O .bss	00000004 _alt_nticks
0008ce90 g     F .text	00000120 read
0008d2e0 g     F .text	00000044 alt_sys_init
0008edf8 g     F .text	00000134 __register_exitproc
0008a3fc g     F .text	000001e8 __multiply
0008d83c g     F .text	00000074 altera_avalon_jtag_uart_close
00099cb4 g     O .bss	00003660 cosine
0008f660 g       *ABS*	00000000 __ram_rwdata_start
0008f144 g       *ABS*	00000000 __ram_rodata_start
00092fcc g     O .bss	00000028 __malloc_current_mallinfo
00089fa8 g     F .text	0000017c __d2b
0008d35c g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0008ebf0 g     F .text	000000b8 alt_get_fd
0008441c g     F .text	000000c8 __fpcmp_parts_d
0008b3dc g     F .text	00000070 _close_r
0008ed84 g     F .text	00000074 memcmp
0008d40c g     F .text	00000048 altera_avalon_jtag_uart_close_fd
000a2004 g       *ABS*	00000000 __alt_stack_base
0008d454 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00086484 g     F .text	0000013c __swsetup_r
0008c2d0 g     F .text	00000258 __divdf3
0008818c g     F .text	000000f0 __sfp
00089e0c g     F .text	00000058 __copybits
0008fcac g     O .rwdata	00000408 __malloc_av_
00088020 g     F .text	00000004 __sinit_lock_release
00083640 g     F .text	000003c4 __muldf3
0008b120 g     F .text	00000060 __sread
0008ead0 g     F .text	00000120 alt_find_file
0008dfa0 g     F .text	000000b4 alt_dev_llist_insert
0008ce50 g     F .text	00000020 __malloc_lock
0008d070 g     F .text	000000bc sbrk
00087d8c g     F .text	000001fc _fflush_r
0008b328 g     F .text	000000b4 _calloc_r
00092f98 g       *ABS*	00000000 __bss_start
00080000 g       *ABS*	00000000 __alt_mem_de2_sram_controller_0
000898d4 g     F .text	00000098 memset
00080200 g     F .text	000006d8 main
00092fbc g     O .bss	00000004 alt_envp
00092fac g     O .bss	00000004 __malloc_max_total_mem
0008d3b4 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0008b034 g     F .text	00000008 __sclose
00100000 g       *ABS*	00000000 __alt_heap_limit
0008b55c g     F .text	00000014 fclose
000a1e74 g     O .bss	00000190 _atexit0
000867d8 g     F .text	000015b4 _dtoa_r
00088f30 g     F .text	00000740 _malloc_r
000912e8 g     O .rwdata	00000004 alt_errno
00088c20 g     F .text	000000b8 _fwalk
00083de8 g     F .text	00000060 __divsi3
0008f320 g     O .rodata	00000014 __thenan_df
0008827c g     F .text	0000012c _malloc_trim_r
0008f144 g       *ABS*	00000000 __CTOR_END__
0008b180 g     F .text	000000bc strcmp
0008f144 g       *ABS*	00000000 __flash_rodata_start
0008f144 g       *ABS*	00000000 __DTOR_LIST__
00083118 g     F .text	00000024 copysign
0008c528 g     F .text	00000088 __nedf2
0008d2ac g     F .text	00000034 alt_irq_init
0008d010 g     F .text	00000060 alt_release_fd
0008f334 g     O .rodata	00000100 __clz_tab
00092fa0 g     O .bss	00000004 _PathLocale
0008ed38 g     F .text	00000014 atexit
0008b2b0 g     F .text	00000078 _write_r
00088d80 g     F .text	0000001c setlocale
000912bc g     O .rwdata	00000004 _impure_ptr
00092fb4 g     O .bss	00000004 alt_argc
00082f38 g     F .text	000001e0 scalbn
0008e118 g     F .text	00000064 _do_dtors
00080020 g       .exceptions	00000000 alt_irq_entry
00089b28 g     F .text	00000080 __ulp
0008af54 g     F .text	00000040 __isinfd
000808d8 g     F .text	0000003c absVal
000880d8 g     F .text	00000018 __fp_unlock_all
000912d4 g     O .rwdata	00000008 alt_fs_list
0008093c g     F .text	0000005c doubleToInt
00080020 g       *ABS*	00000000 __ram_exceptions_start
00088cec g     F .text	00000010 localeconv
0008e1ac g     F .text	00000050 alt_ic_isr_register
000912fc g       *ABS*	00000000 _edata
000a2004 g       *ABS*	00000000 _end
000801b4 g       *ABS*	00000000 __ram_exceptions_end
0008d8b0 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0009d314 g     O .bss	00000a00 stoparray
0008e298 g     F .text	000000a0 alt_ic_irq_disable
0008b0a4 g     F .text	0000007c __swrite
000912cc g     O .rwdata	00000004 __malloc_trim_threshold
0008ed4c g     F .text	00000038 exit
00088b58 g     F .text	000000c8 _fwalk_reent
0008a124 g     F .text	0000018c __mdiff
00083e48 g     F .text	00000060 __modsi3
00100000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00088018 g     F .text	00000004 __sfp_lock_release
0008f120 g     F .text	00000020 _exit
0008af94 g     F .text	00000030 __isnand
0008de08 g     F .text	00000154 alt_alarm_start
00083eb8 g     F .text	00000098 __muldi3
00088d9c g     F .text	00000194 __smakebuf_r
0008b23c g     F .text	00000074 strlen
0008e690 g     F .text	00000188 open
00083b14 g     F .text	00000088 __gedf2
0008e17c g     F .text	00000030 alt_icache_flush_all
000912f0 g     O .rwdata	00000004 alt_priority_mask
0008e1fc g     F .text	0000009c alt_ic_irq_enable
00086460 g     F .text	00000024 __vfprintf_internal
0008354c g     F .text	00000080 __subdf3
00080a90 g     F .text	000000b0 DrawAccelerate
00089a04 g     F .text	000000c4 __lo0bits
000912f4 g     O .rwdata	00000008 alt_alarm_list
0008e0b4 g     F .text	00000064 _do_ctors
0009dd14 g     O .bss	00000a00 startarray
0008c7cc g     F .text	000000fc close
0008cba8 g     F .text	00000080 alt_load
00083fd0 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
0009e714 g     O .bss	00003660 dircosine
0008801c g     F .text	00000004 __sinit_lock_acquire
0008a620 g     F .text	00000100 __multadd
0008996c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   80000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   80004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   80008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   8000c:	00bffd16 	blt	zero,r2,80004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80010:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80014:	08406d14 	ori	at,at,436
    jmp r1
   80018:	0800683a 	jmp	at
   8001c:	00000000 	call	0 <__alt_mem_de2_sram_controller_0-0x80000>

Disassembly of section .exceptions:

00080020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
   80044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800ec0 	call	800ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000306 	br	80098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   8008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   80094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   80098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   8009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
   800c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
   800e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800e8:	ef80083a 	eret

000800ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800ec:	defff904 	addi	sp,sp,-28
   800f0:	dfc00615 	stw	ra,24(sp)
   800f4:	df000515 	stw	fp,20(sp)
   800f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   800fc:	0005313a 	rdctl	r2,ipending
   80100:	e0bffc15 	stw	r2,-16(fp)

  return active;
   80104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   80108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   8010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80110:	00800044 	movi	r2,1
   80114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   80118:	e0ffff17 	ldw	r3,-4(fp)
   8011c:	e0bffe17 	ldw	r2,-8(fp)
   80120:	1884703a 	and	r2,r3,r2
   80124:	1005003a 	cmpeq	r2,r2,zero
   80128:	1000161e 	bne	r2,zero,80184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8012c:	e0bffd17 	ldw	r2,-12(fp)
   80130:	00c002b4 	movhi	r3,10
   80134:	18c75d04 	addi	r3,r3,7540
   80138:	100490fa 	slli	r2,r2,3
   8013c:	10c5883a 	add	r2,r2,r3
   80140:	11400017 	ldw	r5,0(r2)
   80144:	e0bffd17 	ldw	r2,-12(fp)
   80148:	00c002b4 	movhi	r3,10
   8014c:	18c75d04 	addi	r3,r3,7540
   80150:	100490fa 	slli	r2,r2,3
   80154:	10c5883a 	add	r2,r2,r3
   80158:	10800104 	addi	r2,r2,4
   8015c:	11000017 	ldw	r4,0(r2)
   80160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80164:	0005313a 	rdctl	r2,ipending
   80168:	e0bffb15 	stw	r2,-20(fp)

  return active;
   8016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
   80170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   80174:	e0bfff17 	ldw	r2,-4(fp)
   80178:	1004c03a 	cmpne	r2,r2,zero
   8017c:	103fe31e 	bne	r2,zero,8010c <alt_irq_handler+0x20>
   80180:	00000706 	br	801a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   80184:	e0bffe17 	ldw	r2,-8(fp)
   80188:	1085883a 	add	r2,r2,r2
   8018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   80190:	e0bffd17 	ldw	r2,-12(fp)
   80194:	10800044 	addi	r2,r2,1
   80198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   8019c:	003fde06 	br	80118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   801a0:	e037883a 	mov	sp,fp
   801a4:	dfc00117 	ldw	ra,4(sp)
   801a8:	df000017 	ldw	fp,0(sp)
   801ac:	dec00204 	addi	sp,sp,8
   801b0:	f800283a 	ret

Disassembly of section .text:

000801b4 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   801b4:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   801b8:	10000033 	initd	0(r2)
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   801bc:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   801c0:	00bffd16 	blt	zero,r2,801b8 <_start+0x4>
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   801c4:	06c00434 	movhi	sp,16
    ori sp, sp, %lo(__alt_stack_pointer)
   801c8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
   801cc:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   801d0:	d6a4af14 	ori	gp,gp,37564
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   801d4:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   801d8:	108be614 	ori	r2,r2,12184

    movhi r3, %hi(__bss_end)
   801dc:	00c002b4 	movhi	r3,10
    ori r3, r3, %lo(__bss_end)
   801e0:	18c80114 	ori	r3,r3,8196

    beq r2, r3, 1f
   801e4:	10c00326 	beq	r2,r3,801f4 <_start+0x40>

0:
    stw zero, (r2)
   801e8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   801ec:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   801f0:	10fffd36 	bltu	r2,r3,801e8 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   801f4:	008cba80 	call	8cba8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   801f8:	008cde40 	call	8cde4 <alt_main>

000801fc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   801fc:	003fff06 	br	801fc <alt_after_alt_main>

00080200 <main>:
int cosine[lookupLength];
//int inv_sine[lookupLength];
//int inv_cosine[lookupLength];

int main()
{
   80200:	deffe904 	addi	sp,sp,-92
   80204:	dfc01615 	stw	ra,88(sp)
   80208:	df001515 	stw	fp,84(sp)
   8020c:	dc001415 	stw	r16,80(sp)
   80210:	df001404 	addi	fp,sp,80

	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 0);
   80214:	00800434 	movhi	r2,16
   80218:	10840004 	addi	r2,r2,4096
   8021c:	10000035 	stwio	zero,0(r2)
	int dir = 0;
   80220:	e03fff15 	stw	zero,-4(fp)
	int posX = doubleToInt(22.0), posY = doubleToInt(11.5);  //x and y start position
   80224:	0009883a 	mov	r4,zero
   80228:	01500db4 	movhi	r5,16438
   8022c:	008093c0 	call	8093c <doubleToInt>
   80230:	e0bffe15 	stw	r2,-8(fp)
   80234:	0009883a 	mov	r4,zero
   80238:	015009f4 	movhi	r5,16423
   8023c:	008093c0 	call	8093c <doubleToInt>
   80240:	e0bffd15 	stw	r2,-12(fp)
 // int posX = 22, posY = 11;  //x and y start position
  int x =0;
   80244:	e03ffc15 	stw	zero,-16(fp)

  double sine_temp;
  double cosine_temp;

    for(x = 0; x < lookupLength ; x++)
   80248:	e03ffc15 	stw	zero,-16(fp)
   8024c:	00009906 	br	804b4 <main+0x2b4>
    {
            //calculate ray position and direction

        sine_temp = sin(x*RAD + HALF_RAD);
   80250:	e13ffc17 	ldw	r4,-16(fp)
   80254:	0083b9c0 	call	83b9c <__floatsidf>
   80258:	100b883a 	mov	r5,r2
   8025c:	180d883a 	mov	r6,r3
   80260:	2809883a 	mov	r4,r5
   80264:	300b883a 	mov	r5,r6
   80268:	01b5ed74 	movhi	r6,55221
   8026c:	31b85344 	addi	r6,r6,-7859
   80270:	01cfd7b4 	movhi	r7,16222
   80274:	39e53784 	addi	r7,r7,-27426
   80278:	00836400 	call	83640 <__muldf3>
   8027c:	1009883a 	mov	r4,r2
   80280:	180b883a 	mov	r5,r3
   80284:	2005883a 	mov	r2,r4
   80288:	2807883a 	mov	r3,r5
   8028c:	1009883a 	mov	r4,r2
   80290:	180b883a 	mov	r5,r3
   80294:	01b5ed74 	movhi	r6,55221
   80298:	31b85344 	addi	r6,r6,-7859
   8029c:	01cfd3b4 	movhi	r7,16206
   802a0:	39e53784 	addi	r7,r7,-27426
   802a4:	00835cc0 	call	835cc <__adddf3>
   802a8:	1009883a 	mov	r4,r2
   802ac:	180b883a 	mov	r5,r3
   802b0:	2005883a 	mov	r2,r4
   802b4:	2807883a 	mov	r3,r5
   802b8:	1009883a 	mov	r4,r2
   802bc:	180b883a 	mov	r5,r3
   802c0:	0080ca80 	call	80ca8 <sin>
   802c4:	1009883a 	mov	r4,r2
   802c8:	180b883a 	mov	r5,r3
   802cc:	e13ffa15 	stw	r4,-24(fp)
   802d0:	e17ffb15 	stw	r5,-20(fp)
        cosine_temp = cos(x*RAD + HALF_RAD);
   802d4:	e13ffc17 	ldw	r4,-16(fp)
   802d8:	0083b9c0 	call	83b9c <__floatsidf>
   802dc:	100b883a 	mov	r5,r2
   802e0:	180d883a 	mov	r6,r3
   802e4:	2809883a 	mov	r4,r5
   802e8:	300b883a 	mov	r5,r6
   802ec:	01b5ed74 	movhi	r6,55221
   802f0:	31b85344 	addi	r6,r6,-7859
   802f4:	01cfd7b4 	movhi	r7,16222
   802f8:	39e53784 	addi	r7,r7,-27426
   802fc:	00836400 	call	83640 <__muldf3>
   80300:	1009883a 	mov	r4,r2
   80304:	180b883a 	mov	r5,r3
   80308:	2005883a 	mov	r2,r4
   8030c:	2807883a 	mov	r3,r5
   80310:	1009883a 	mov	r4,r2
   80314:	180b883a 	mov	r5,r3
   80318:	01b5ed74 	movhi	r6,55221
   8031c:	31b85344 	addi	r6,r6,-7859
   80320:	01cfd3b4 	movhi	r7,16206
   80324:	39e53784 	addi	r7,r7,-27426
   80328:	00835cc0 	call	835cc <__adddf3>
   8032c:	1009883a 	mov	r4,r2
   80330:	180b883a 	mov	r5,r3
   80334:	2005883a 	mov	r2,r4
   80338:	2807883a 	mov	r3,r5
   8033c:	1009883a 	mov	r4,r2
   80340:	180b883a 	mov	r5,r3
   80344:	0080b400 	call	80b40 <cos>
   80348:	1009883a 	mov	r4,r2
   8034c:	180b883a 	mov	r5,r3
   80350:	e13ff815 	stw	r4,-32(fp)
   80354:	e17ff915 	stw	r5,-28(fp)

        dirsine[x] = doubleToInt(sin(x*RAD));
   80358:	e43ffc17 	ldw	r16,-16(fp)
   8035c:	e13ffc17 	ldw	r4,-16(fp)
   80360:	0083b9c0 	call	83b9c <__floatsidf>
   80364:	100b883a 	mov	r5,r2
   80368:	180d883a 	mov	r6,r3
   8036c:	2809883a 	mov	r4,r5
   80370:	300b883a 	mov	r5,r6
   80374:	01b5ed74 	movhi	r6,55221
   80378:	31b85344 	addi	r6,r6,-7859
   8037c:	01cfd7b4 	movhi	r7,16222
   80380:	39e53784 	addi	r7,r7,-27426
   80384:	00836400 	call	83640 <__muldf3>
   80388:	1009883a 	mov	r4,r2
   8038c:	180b883a 	mov	r5,r3
   80390:	2005883a 	mov	r2,r4
   80394:	2807883a 	mov	r3,r5
   80398:	1009883a 	mov	r4,r2
   8039c:	180b883a 	mov	r5,r3
   803a0:	0080ca80 	call	80ca8 <sin>
   803a4:	100b883a 	mov	r5,r2
   803a8:	180d883a 	mov	r6,r3
   803ac:	2809883a 	mov	r4,r5
   803b0:	300b883a 	mov	r5,r6
   803b4:	008093c0 	call	8093c <doubleToInt>
   803b8:	1009883a 	mov	r4,r2
   803bc:	00c00274 	movhi	r3,9
   803c0:	18cbfd04 	addi	r3,r3,12276
   803c4:	8405883a 	add	r2,r16,r16
   803c8:	1085883a 	add	r2,r2,r2
   803cc:	10c5883a 	add	r2,r2,r3
   803d0:	11000015 	stw	r4,0(r2)
        dircosine[x] = doubleToInt(cos(x*RAD));
   803d4:	e43ffc17 	ldw	r16,-16(fp)
   803d8:	e13ffc17 	ldw	r4,-16(fp)
   803dc:	0083b9c0 	call	83b9c <__floatsidf>
   803e0:	100b883a 	mov	r5,r2
   803e4:	180d883a 	mov	r6,r3
   803e8:	2809883a 	mov	r4,r5
   803ec:	300b883a 	mov	r5,r6
   803f0:	01b5ed74 	movhi	r6,55221
   803f4:	31b85344 	addi	r6,r6,-7859
   803f8:	01cfd7b4 	movhi	r7,16222
   803fc:	39e53784 	addi	r7,r7,-27426
   80400:	00836400 	call	83640 <__muldf3>
   80404:	1009883a 	mov	r4,r2
   80408:	180b883a 	mov	r5,r3
   8040c:	2005883a 	mov	r2,r4
   80410:	2807883a 	mov	r3,r5
   80414:	1009883a 	mov	r4,r2
   80418:	180b883a 	mov	r5,r3
   8041c:	0080b400 	call	80b40 <cos>
   80420:	100b883a 	mov	r5,r2
   80424:	180d883a 	mov	r6,r3
   80428:	2809883a 	mov	r4,r5
   8042c:	300b883a 	mov	r5,r6
   80430:	008093c0 	call	8093c <doubleToInt>
   80434:	1009883a 	mov	r4,r2
   80438:	00c002b4 	movhi	r3,10
   8043c:	18f9c504 	addi	r3,r3,-6380
   80440:	8405883a 	add	r2,r16,r16
   80444:	1085883a 	add	r2,r2,r2
   80448:	10c5883a 	add	r2,r2,r3
   8044c:	11000015 	stw	r4,0(r2)
        sine[x] = doubleToInt(sine_temp);
   80450:	e43ffc17 	ldw	r16,-16(fp)
   80454:	e13ffa17 	ldw	r4,-24(fp)
   80458:	e17ffb17 	ldw	r5,-20(fp)
   8045c:	008093c0 	call	8093c <doubleToInt>
   80460:	1009883a 	mov	r4,r2
   80464:	00c00274 	movhi	r3,9
   80468:	18d99504 	addi	r3,r3,26196
   8046c:	8405883a 	add	r2,r16,r16
   80470:	1085883a 	add	r2,r2,r2
   80474:	10c5883a 	add	r2,r2,r3
   80478:	11000015 	stw	r4,0(r2)
        cosine[x] = doubleToInt(cosine_temp);
   8047c:	e43ffc17 	ldw	r16,-16(fp)
   80480:	e13ff817 	ldw	r4,-32(fp)
   80484:	e17ff917 	ldw	r5,-28(fp)
   80488:	008093c0 	call	8093c <doubleToInt>
   8048c:	1009883a 	mov	r4,r2
   80490:	00c002b4 	movhi	r3,10
   80494:	18e72d04 	addi	r3,r3,-25420
   80498:	8405883a 	add	r2,r16,r16
   8049c:	1085883a 	add	r2,r2,r2
   804a0:	10c5883a 	add	r2,r2,r3
   804a4:	11000015 	stw	r4,0(r2)
  int x =0;

  double sine_temp;
  double cosine_temp;

    for(x = 0; x < lookupLength ; x++)
   804a8:	e0bffc17 	ldw	r2,-16(fp)
   804ac:	10800044 	addi	r2,r2,1
   804b0:	e0bffc15 	stw	r2,-16(fp)
   804b4:	e0bffc17 	ldw	r2,-16(fp)
   804b8:	10836610 	cmplti	r2,r2,3480
   804bc:	103f641e 	bne	r2,zero,80250 <main+0x50>
  int k;
  int k2;
  //char key[] = { 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d',
//		  'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d', 'd','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d'};

  unsigned char code = 0;
   804c0:	e03ff205 	stb	zero,-56(fp)
  //char key[] = {'d'};
  k2 = 0;
   804c4:	e03ff315 	stw	zero,-52(fp)
  //start the main loop
  //for (k2 = 0; k2 < sizeof(key); k2++)

  int hardwareData = 0;
   804c8:	e03ff115 	stw	zero,-60(fp)
   804cc:	00000006 	br	804d0 <main+0x2d0>
//		code = IORD_8DIRECT(DE2_PS2_0_BASE, 1);
		//printf("%c, %x, %d\n", code, code, code);

		/* Get received byte */

	  code = 'k';
   804d0:	00801ac4 	movi	r2,107
   804d4:	e0bff205 	stb	r2,-56(fp)

	  hardwareData = IORD_RAM_DATA(NIOSINTERFACE_1_0_BASE, 1);
   804d8:	00800434 	movhi	r2,16
   804dc:	10840104 	addi	r2,r2,4100
   804e0:	10800037 	ldwio	r2,0(r2)
   804e4:	e0bff115 	stw	r2,-60(fp)
	  printf("%d\n", hardwareData >> 4);
   804e8:	e0bff117 	ldw	r2,-60(fp)
   804ec:	100bd13a 	srai	r5,r2,4
   804f0:	01000274 	movhi	r4,9
   804f4:	213c5104 	addi	r4,r4,-3772
   804f8:	00844e40 	call	844e4 <printf>


//	 hardwareData = IORD_16DIRECT(NIOSINTERFACE_0_BASE, 1);
//	 printf("%d\n", hardwareData);

     x = 1;
   804fc:	00800044 	movi	r2,1
   80500:	e0bffc15 	stw	r2,-16(fp)
    for(k = -screenWidth/2; k < (screenWidth/2 - 1); k++)
   80504:	00bfb004 	movi	r2,-320
   80508:	e0bff415 	stw	r2,-48(fp)
   8050c:	00005806 	br	80670 <main+0x470>
    {
        angle = dir + k;
   80510:	e0ffff17 	ldw	r3,-4(fp)
   80514:	e0bff417 	ldw	r2,-48(fp)
   80518:	1885883a 	add	r2,r3,r2
   8051c:	e0bff715 	stw	r2,-36(fp)

        if ( angle < 0)
   80520:	e0bff717 	ldw	r2,-36(fp)
   80524:	1004403a 	cmpge	r2,r2,zero
   80528:	1000031e 	bne	r2,zero,80538 <main+0x338>
                angle += lookupLength;
   8052c:	e0bff717 	ldw	r2,-36(fp)
   80530:	10836604 	addi	r2,r2,3480
   80534:	e0bff715 	stw	r2,-36(fp)

        if (angle >= lookupLength)
   80538:	e0bff717 	ldw	r2,-36(fp)
   8053c:	10836610 	cmplti	r2,r2,3480
   80540:	1000031e 	bne	r2,zero,80550 <main+0x350>
                angle -= lookupLength;
   80544:	e0bff717 	ldw	r2,-36(fp)
   80548:	10bc9a04 	addi	r2,r2,-3480
   8054c:	e0bff715 	stw	r2,-36(fp)

        fish_angle = k;
   80550:	e0bff417 	ldw	r2,-48(fp)
   80554:	e0bff615 	stw	r2,-40(fp)

        if ( fish_angle < 0)
   80558:	e0bff617 	ldw	r2,-40(fp)
   8055c:	1004403a 	cmpge	r2,r2,zero
   80560:	1000031e 	bne	r2,zero,80570 <main+0x370>
            fish_angle += lookupLength;
   80564:	e0bff617 	ldw	r2,-40(fp)
   80568:	10836604 	addi	r2,r2,3480
   8056c:	e0bff615 	stw	r2,-40(fp)

        if (fish_angle >= lookupLength)
   80570:	e0bff617 	ldw	r2,-40(fp)
   80574:	10836610 	cmplti	r2,r2,3480
   80578:	1000031e 	bne	r2,zero,80588 <main+0x388>
             fish_angle -= lookupLength;
   8057c:	e0bff617 	ldw	r2,-40(fp)
   80580:	10bc9a04 	addi	r2,r2,-3480
   80584:	e0bff615 	stw	r2,-40(fp)


      //calculate ray position and direction
      //double cameraX = 2*x/double(w)-1; //x-coordinate in camera space
      int rayDirX = cosine[angle]>>4;
   80588:	e0bff717 	ldw	r2,-36(fp)
   8058c:	00c002b4 	movhi	r3,10
   80590:	18e72d04 	addi	r3,r3,-25420
   80594:	1085883a 	add	r2,r2,r2
   80598:	1085883a 	add	r2,r2,r2
   8059c:	10c5883a 	add	r2,r2,r3
   805a0:	10800017 	ldw	r2,0(r2)
   805a4:	1005d13a 	srai	r2,r2,4
   805a8:	e0bff015 	stw	r2,-64(fp)
      int rayDirY = sine[angle]>>4;
   805ac:	e0bff717 	ldw	r2,-36(fp)
   805b0:	00c00274 	movhi	r3,9
   805b4:	18d99504 	addi	r3,r3,26196
   805b8:	1085883a 	add	r2,r2,r2
   805bc:	1085883a 	add	r2,r2,r2
   805c0:	10c5883a 	add	r2,r2,r3
   805c4:	10800017 	ldw	r2,0(r2)
   805c8:	1005d13a 	srai	r2,r2,4
   805cc:	e0bfef15 	stw	r2,-68(fp)
      int count_step = cosine[fish_angle]>>4;
   805d0:	e0bff617 	ldw	r2,-40(fp)
   805d4:	00c002b4 	movhi	r3,10
   805d8:	18e72d04 	addi	r3,r3,-25420
   805dc:	1085883a 	add	r2,r2,r2
   805e0:	1085883a 	add	r2,r2,r2
   805e4:	10c5883a 	add	r2,r2,r3
   805e8:	10800017 	ldw	r2,0(r2)
   805ec:	1005d13a 	srai	r2,r2,4
   805f0:	e0bfee15 	stw	r2,-72(fp)

 //     hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
 //     printf("%d\n", hardwareData);

     hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
   805f4:	00800434 	movhi	r2,16
   805f8:	10840044 	addi	r2,r2,4097
   805fc:	10800037 	ldwio	r2,0(r2)
   80600:	e0bff115 	stw	r2,-60(fp)
	 while (!(hardwareData & 1)){
   80604:	00000406 	br	80618 <main+0x418>
		 hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
   80608:	00800434 	movhi	r2,16
   8060c:	10840044 	addi	r2,r2,4097
   80610:	10800037 	ldwio	r2,0(r2)
   80614:	e0bff115 	stw	r2,-60(fp)

 //     hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
 //     printf("%d\n", hardwareData);

     hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
	 while (!(hardwareData & 1)){
   80618:	e0bff117 	ldw	r2,-60(fp)
   8061c:	1080004c 	andi	r2,r2,1
   80620:	1005003a 	cmpeq	r2,r2,zero
   80624:	103ff81e 	bne	r2,zero,80608 <main+0x408>
		 hardwareData = IORD_32DIRECT(NIOSINTERFACE_1_0_BASE, 1);
	  }

      DrawAccelerate(posX, posY, count_step, rayDirX, rayDirY, x);
   80628:	e0fffc17 	ldw	r3,-16(fp)
   8062c:	e0bfef17 	ldw	r2,-68(fp)
   80630:	d8800015 	stw	r2,0(sp)
   80634:	d8c00115 	stw	r3,4(sp)
   80638:	e13ffe17 	ldw	r4,-8(fp)
   8063c:	e17ffd17 	ldw	r5,-12(fp)
   80640:	e1bfee17 	ldw	r6,-72(fp)
   80644:	e1fff017 	ldw	r7,-64(fp)
   80648:	0080a900 	call	80a90 <DrawAccelerate>
      IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 0);
   8064c:	00800434 	movhi	r2,16
   80650:	10840004 	addi	r2,r2,4096
   80654:	10000035 	stwio	zero,0(r2)
      //draw the pixels of the stripe as a vertical line
      //DrawColumn(x, color, drawStart, drawEnd, side);
      //DrawColumn(x, color, lineHeight, side);
      //verLine(x, drawStart, drawEnd, color);

      x++;
   80658:	e0bffc17 	ldw	r2,-16(fp)
   8065c:	10800044 	addi	r2,r2,1
   80660:	e0bffc15 	stw	r2,-16(fp)

//	 hardwareData = IORD_16DIRECT(NIOSINTERFACE_0_BASE, 1);
//	 printf("%d\n", hardwareData);

     x = 1;
    for(k = -screenWidth/2; k < (screenWidth/2 - 1); k++)
   80664:	e0bff417 	ldw	r2,-48(fp)
   80668:	10800044 	addi	r2,r2,1
   8066c:	e0bff415 	stw	r2,-48(fp)
   80670:	e0bff417 	ldw	r2,-48(fp)
   80674:	10804fd0 	cmplti	r2,r2,319
   80678:	103fa51e 	bne	r2,zero,80510 <main+0x310>
    }



    //move forward if no wall in front of you
    if (code =='u')
   8067c:	e0bff203 	ldbu	r2,-56(fp)
   80680:	10801d58 	cmpnei	r2,r2,117
   80684:	10003c1e 	bne	r2,zero,80778 <main+0x578>
    {
        move = dircosine[dir]>>4;
   80688:	e0bfff17 	ldw	r2,-4(fp)
   8068c:	00c002b4 	movhi	r3,10
   80690:	18f9c504 	addi	r3,r3,-6380
   80694:	1085883a 	add	r2,r2,r2
   80698:	1085883a 	add	r2,r2,r2
   8069c:	10c5883a 	add	r2,r2,r3
   806a0:	10800017 	ldw	r2,0(r2)
   806a4:	1005d13a 	srai	r2,r2,4
   806a8:	e0bff515 	stw	r2,-44(fp)
        if(worldMap[(posX + move)>>posShift][posY>>posShift] == 0)
   806ac:	e0fffe17 	ldw	r3,-8(fp)
   806b0:	e0bff517 	ldw	r2,-44(fp)
   806b4:	1885883a 	add	r2,r3,r2
   806b8:	1009d5ba 	srai	r4,r2,22
   806bc:	e0bffd17 	ldw	r2,-12(fp)
   806c0:	100bd5ba 	srai	r5,r2,22
   806c4:	00c00274 	movhi	r3,9
   806c8:	18fd9804 	addi	r3,r3,-2464
   806cc:	20800624 	muli	r2,r4,24
   806d0:	10c5883a 	add	r2,r2,r3
   806d4:	1145883a 	add	r2,r2,r5
   806d8:	10800003 	ldbu	r2,0(r2)
   806dc:	10803fcc 	andi	r2,r2,255
   806e0:	1080201c 	xori	r2,r2,128
   806e4:	10bfe004 	addi	r2,r2,-128
   806e8:	1004c03a 	cmpne	r2,r2,zero
   806ec:	1000041e 	bne	r2,zero,80700 <main+0x500>
                posX += move;
   806f0:	e0bffe17 	ldw	r2,-8(fp)
   806f4:	e0fff517 	ldw	r3,-44(fp)
   806f8:	10c5883a 	add	r2,r2,r3
   806fc:	e0bffe15 	stw	r2,-8(fp)

        move = dirsine[dir]>>4;
   80700:	e0bfff17 	ldw	r2,-4(fp)
   80704:	00c00274 	movhi	r3,9
   80708:	18cbfd04 	addi	r3,r3,12276
   8070c:	1085883a 	add	r2,r2,r2
   80710:	1085883a 	add	r2,r2,r2
   80714:	10c5883a 	add	r2,r2,r3
   80718:	10800017 	ldw	r2,0(r2)
   8071c:	1005d13a 	srai	r2,r2,4
   80720:	e0bff515 	stw	r2,-44(fp)
        if(worldMap[posX>>posShift][(posY+move)>>posShift] == 0)
   80724:	e0bffe17 	ldw	r2,-8(fp)
   80728:	100bd5ba 	srai	r5,r2,22
   8072c:	e0fffd17 	ldw	r3,-12(fp)
   80730:	e0bff517 	ldw	r2,-44(fp)
   80734:	1885883a 	add	r2,r3,r2
   80738:	1009d5ba 	srai	r4,r2,22
   8073c:	00c00274 	movhi	r3,9
   80740:	18fd9804 	addi	r3,r3,-2464
   80744:	28800624 	muli	r2,r5,24
   80748:	10c5883a 	add	r2,r2,r3
   8074c:	1105883a 	add	r2,r2,r4
   80750:	10800003 	ldbu	r2,0(r2)
   80754:	10803fcc 	andi	r2,r2,255
   80758:	1080201c 	xori	r2,r2,128
   8075c:	10bfe004 	addi	r2,r2,-128
   80760:	1004c03a 	cmpne	r2,r2,zero
   80764:	1000041e 	bne	r2,zero,80778 <main+0x578>
                posY += move;
   80768:	e0bffd17 	ldw	r2,-12(fp)
   8076c:	e0fff517 	ldw	r3,-44(fp)
   80770:	10c5883a 	add	r2,r2,r3
   80774:	e0bffd15 	stw	r2,-12(fp)
    }
    //move backwards if no wall behind you
    if (code =='r')
   80778:	e0bff203 	ldbu	r2,-56(fp)
   8077c:	10801c98 	cmpnei	r2,r2,114
   80780:	10003c1e 	bne	r2,zero,80874 <main+0x674>
    {
        move = dircosine[dir]>>4;
   80784:	e0bfff17 	ldw	r2,-4(fp)
   80788:	00c002b4 	movhi	r3,10
   8078c:	18f9c504 	addi	r3,r3,-6380
   80790:	1085883a 	add	r2,r2,r2
   80794:	1085883a 	add	r2,r2,r2
   80798:	10c5883a 	add	r2,r2,r3
   8079c:	10800017 	ldw	r2,0(r2)
   807a0:	1005d13a 	srai	r2,r2,4
   807a4:	e0bff515 	stw	r2,-44(fp)
        if(worldMap[(posX - move)>>posShift][posY>>posShift] == 0)
   807a8:	e0fffe17 	ldw	r3,-8(fp)
   807ac:	e0bff517 	ldw	r2,-44(fp)
   807b0:	1885c83a 	sub	r2,r3,r2
   807b4:	1009d5ba 	srai	r4,r2,22
   807b8:	e0bffd17 	ldw	r2,-12(fp)
   807bc:	100bd5ba 	srai	r5,r2,22
   807c0:	00c00274 	movhi	r3,9
   807c4:	18fd9804 	addi	r3,r3,-2464
   807c8:	20800624 	muli	r2,r4,24
   807cc:	10c5883a 	add	r2,r2,r3
   807d0:	1145883a 	add	r2,r2,r5
   807d4:	10800003 	ldbu	r2,0(r2)
   807d8:	10803fcc 	andi	r2,r2,255
   807dc:	1080201c 	xori	r2,r2,128
   807e0:	10bfe004 	addi	r2,r2,-128
   807e4:	1004c03a 	cmpne	r2,r2,zero
   807e8:	1000041e 	bne	r2,zero,807fc <main+0x5fc>
                posX -= move;
   807ec:	e0bffe17 	ldw	r2,-8(fp)
   807f0:	e0fff517 	ldw	r3,-44(fp)
   807f4:	10c5c83a 	sub	r2,r2,r3
   807f8:	e0bffe15 	stw	r2,-8(fp)

        move = dirsine[dir]>>4;
   807fc:	e0bfff17 	ldw	r2,-4(fp)
   80800:	00c00274 	movhi	r3,9
   80804:	18cbfd04 	addi	r3,r3,12276
   80808:	1085883a 	add	r2,r2,r2
   8080c:	1085883a 	add	r2,r2,r2
   80810:	10c5883a 	add	r2,r2,r3
   80814:	10800017 	ldw	r2,0(r2)
   80818:	1005d13a 	srai	r2,r2,4
   8081c:	e0bff515 	stw	r2,-44(fp)
        if(worldMap[posX>>posShift][(posY - move)>>posShift] == 0)
   80820:	e0bffe17 	ldw	r2,-8(fp)
   80824:	100bd5ba 	srai	r5,r2,22
   80828:	e0fffd17 	ldw	r3,-12(fp)
   8082c:	e0bff517 	ldw	r2,-44(fp)
   80830:	1885c83a 	sub	r2,r3,r2
   80834:	1009d5ba 	srai	r4,r2,22
   80838:	00c00274 	movhi	r3,9
   8083c:	18fd9804 	addi	r3,r3,-2464
   80840:	28800624 	muli	r2,r5,24
   80844:	10c5883a 	add	r2,r2,r3
   80848:	1105883a 	add	r2,r2,r4
   8084c:	10800003 	ldbu	r2,0(r2)
   80850:	10803fcc 	andi	r2,r2,255
   80854:	1080201c 	xori	r2,r2,128
   80858:	10bfe004 	addi	r2,r2,-128
   8085c:	1004c03a 	cmpne	r2,r2,zero
   80860:	1000041e 	bne	r2,zero,80874 <main+0x674>
                posY -= move;
   80864:	e0bffd17 	ldw	r2,-12(fp)
   80868:	e0fff517 	ldw	r3,-44(fp)
   8086c:	10c5c83a 	sub	r2,r2,r3
   80870:	e0bffd15 	stw	r2,-12(fp)
    }
    //rotate to the right
    if (code == 't')
   80874:	e0bff203 	ldbu	r2,-56(fp)
   80878:	10801d18 	cmpnei	r2,r2,116
   8087c:	1000091e 	bne	r2,zero,808a4 <main+0x6a4>
    {
      //both camera direction and camera plane must be rotated
       dir += 1;
   80880:	e0bfff17 	ldw	r2,-4(fp)
   80884:	10800044 	addi	r2,r2,1
   80888:	e0bfff15 	stw	r2,-4(fp)

       if(dir >= lookupLength)
   8088c:	e0bfff17 	ldw	r2,-4(fp)
   80890:	10836610 	cmplti	r2,r2,3480
   80894:	1000031e 	bne	r2,zero,808a4 <main+0x6a4>
           dir -= lookupLength;
   80898:	e0bfff17 	ldw	r2,-4(fp)
   8089c:	10bc9a04 	addi	r2,r2,-3480
   808a0:	e0bfff15 	stw	r2,-4(fp)
    }
    //rotate to the left
    if (code =='k')
   808a4:	e0bff203 	ldbu	r2,-56(fp)
   808a8:	10801ad8 	cmpnei	r2,r2,107
   808ac:	103f081e 	bne	r2,zero,804d0 <main+0x2d0>
    {
      //both camera direction and camera plane must be rotated
        dir -= 1;
   808b0:	e0bfff17 	ldw	r2,-4(fp)
   808b4:	10bfffc4 	addi	r2,r2,-1
   808b8:	e0bfff15 	stw	r2,-4(fp)

        if (dir <0)
   808bc:	e0bfff17 	ldw	r2,-4(fp)
   808c0:	1004403a 	cmpge	r2,r2,zero
   808c4:	103f021e 	bne	r2,zero,804d0 <main+0x2d0>
            dir += lookupLength;
   808c8:	e0bfff17 	ldw	r2,-4(fp)
   808cc:	10836604 	addi	r2,r2,3480
   808d0:	e0bfff15 	stw	r2,-4(fp)
    }


  }
   808d4:	003efe06 	br	804d0 <main+0x2d0>

000808d8 <absVal>:

    return 0;
}

int absVal(int v)
{
   808d8:	defffe04 	addi	sp,sp,-8
   808dc:	df000115 	stw	fp,4(sp)
   808e0:	df000104 	addi	fp,sp,4
   808e4:	e13fff15 	stw	r4,-4(fp)
  return v * ((v>0) - (v<0));
   808e8:	e0bfff17 	ldw	r2,-4(fp)
   808ec:	10c00048 	cmpgei	r3,r2,1
   808f0:	e0bfff17 	ldw	r2,-4(fp)
   808f4:	1004d7fa 	srli	r2,r2,31
   808f8:	1887c83a 	sub	r3,r3,r2
   808fc:	e0bfff17 	ldw	r2,-4(fp)
   80900:	1885383a 	mul	r2,r3,r2
}
   80904:	e037883a 	mov	sp,fp
   80908:	df000017 	ldw	fp,0(sp)
   8090c:	dec00104 	addi	sp,sp,4
   80910:	f800283a 	ret

00080914 <intToDouble>:

int intToDouble(int a)
{
   80914:	defffe04 	addi	sp,sp,-8
   80918:	df000115 	stw	fp,4(sp)
   8091c:	df000104 	addi	fp,sp,4
   80920:	e13fff15 	stw	r4,-4(fp)

    return a>>posShift;
   80924:	e0bfff17 	ldw	r2,-4(fp)
   80928:	1005d5ba 	srai	r2,r2,22

}
   8092c:	e037883a 	mov	sp,fp
   80930:	df000017 	ldw	fp,0(sp)
   80934:	dec00104 	addi	sp,sp,4
   80938:	f800283a 	ret

0008093c <doubleToInt>:


int doubleToInt(double a)
{
   8093c:	defffc04 	addi	sp,sp,-16
   80940:	dfc00315 	stw	ra,12(sp)
   80944:	df000215 	stw	fp,8(sp)
   80948:	df000204 	addi	fp,sp,8
   8094c:	e13ffe15 	stw	r4,-8(fp)
   80950:	e17fff15 	stw	r5,-4(fp)
    return (int)(a*(1<<posShift));
   80954:	e13ffe17 	ldw	r4,-8(fp)
   80958:	e17fff17 	ldw	r5,-4(fp)
   8095c:	000d883a 	mov	r6,zero
   80960:	01d05434 	movhi	r7,16720
   80964:	00836400 	call	83640 <__muldf3>
   80968:	1009883a 	mov	r4,r2
   8096c:	180b883a 	mov	r5,r3
   80970:	2005883a 	mov	r2,r4
   80974:	2807883a 	mov	r3,r5
   80978:	1009883a 	mov	r4,r2
   8097c:	180b883a 	mov	r5,r3
   80980:	0083c940 	call	83c94 <__fixdfsi>
}
   80984:	e037883a 	mov	sp,fp
   80988:	dfc00117 	ldw	ra,4(sp)
   8098c:	df000017 	ldw	fp,0(sp)
   80990:	dec00204 	addi	sp,sp,8
   80994:	f800283a 	ret

00080998 <DrawTexture>:


void DrawTexture(unsigned int columnIndex, unsigned int texX, unsigned int rowStart, unsigned int rowEnd, unsigned int side, unsigned int texNum, unsigned int invLineHeight , unsigned int line_minus_h)
{
   80998:	defffb04 	addi	sp,sp,-20
   8099c:	df000415 	stw	fp,16(sp)
   809a0:	df000404 	addi	fp,sp,16
   809a4:	e13ffc15 	stw	r4,-16(fp)
   809a8:	e17ffd15 	stw	r5,-12(fp)
   809ac:	e1bffe15 	stw	r6,-8(fp)
   809b0:	e1ffff15 	stw	r7,-4(fp)

	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 8, (columnIndex  << 22));
   809b4:	e0bffc17 	ldw	r2,-16(fp)
   809b8:	100495ba 	slli	r2,r2,22
   809bc:	1007883a 	mov	r3,r2
   809c0:	00800434 	movhi	r2,16
   809c4:	10840804 	addi	r2,r2,4128
   809c8:	10c00035 	stwio	r3,0(r2)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 1, ((texNum & 3) + (texX <<2) + (rowEnd<< 8) + (rowStart<<17)+ ((invLineHeight & 0x3F)<<26)));
   809cc:	e0800217 	ldw	r2,8(fp)
   809d0:	10c000cc 	andi	r3,r2,3
   809d4:	e0bffd17 	ldw	r2,-12(fp)
   809d8:	1085883a 	add	r2,r2,r2
   809dc:	1085883a 	add	r2,r2,r2
   809e0:	1887883a 	add	r3,r3,r2
   809e4:	e0bfff17 	ldw	r2,-4(fp)
   809e8:	1004923a 	slli	r2,r2,8
   809ec:	1887883a 	add	r3,r3,r2
   809f0:	e0bffe17 	ldw	r2,-8(fp)
   809f4:	1004947a 	slli	r2,r2,17
   809f8:	1887883a 	add	r3,r3,r2
   809fc:	e0800317 	ldw	r2,12(fp)
   80a00:	10800fcc 	andi	r2,r2,63
   80a04:	100496ba 	slli	r2,r2,26
   80a08:	1885883a 	add	r2,r3,r2
   80a0c:	1007883a 	mov	r3,r2
   80a10:	00800434 	movhi	r2,16
   80a14:	10840104 	addi	r2,r2,4100
   80a18:	10c00035 	stwio	r3,0(r2)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 2, ((invLineHeight & 0x3FFFF) >> 6) + ((line_minus_h & 0x3FFFF) << 12 ) + (side << 31));
   80a1c:	e0c00317 	ldw	r3,12(fp)
   80a20:	00800134 	movhi	r2,4
   80a24:	10bfffc4 	addi	r2,r2,-1
   80a28:	1884703a 	and	r2,r3,r2
   80a2c:	1008d1ba 	srli	r4,r2,6
   80a30:	e0c00417 	ldw	r3,16(fp)
   80a34:	00800134 	movhi	r2,4
   80a38:	10bfffc4 	addi	r2,r2,-1
   80a3c:	1884703a 	and	r2,r3,r2
   80a40:	1004933a 	slli	r2,r2,12
   80a44:	2087883a 	add	r3,r4,r2
   80a48:	e0800117 	ldw	r2,4(fp)
   80a4c:	100497fa 	slli	r2,r2,31
   80a50:	1885883a 	add	r2,r3,r2
   80a54:	1007883a 	mov	r3,r2
   80a58:	00800434 	movhi	r2,16
   80a5c:	10840204 	addi	r2,r2,4104
   80a60:	10c00035 	stwio	r3,0(r2)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 1);
   80a64:	00c00434 	movhi	r3,16
   80a68:	18c40004 	addi	r3,r3,4096
   80a6c:	00800044 	movi	r2,1
   80a70:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 0);
   80a74:	00800434 	movhi	r2,16
   80a78:	10840004 	addi	r2,r2,4096
   80a7c:	10000035 	stwio	zero,0(r2)

	//startarray[columnIndex] = (color + (endRow<< 8));
	//stoparray[columnIndex] = (side << 10) + (endRow >> (9 - 1)) + (startRow << 1);
}
   80a80:	e037883a 	mov	sp,fp
   80a84:	df000017 	ldw	fp,0(sp)
   80a88:	dec00104 	addi	sp,sp,4
   80a8c:	f800283a 	ret

00080a90 <DrawAccelerate>:

void DrawAccelerate(int posX, int posY, int countstep, int rayDirX, int rayDirY, unsigned int columnIndex)
{
   80a90:	defffb04 	addi	sp,sp,-20
   80a94:	df000415 	stw	fp,16(sp)
   80a98:	df000404 	addi	fp,sp,16
   80a9c:	e13ffc15 	stw	r4,-16(fp)
   80aa0:	e17ffd15 	stw	r5,-12(fp)
   80aa4:	e1bffe15 	stw	r6,-8(fp)
   80aa8:	e1ffff15 	stw	r7,-4(fp)

	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 8, (columnIndex << 22));
   80aac:	e0800217 	ldw	r2,8(fp)
   80ab0:	100495ba 	slli	r2,r2,22
   80ab4:	1007883a 	mov	r3,r2
   80ab8:	00800434 	movhi	r2,16
   80abc:	10840804 	addi	r2,r2,4128
   80ac0:	10c00035 	stwio	r3,0(r2)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 1, posX);
   80ac4:	00c00434 	movhi	r3,16
   80ac8:	18c40104 	addi	r3,r3,4100
   80acc:	e0bffc17 	ldw	r2,-16(fp)
   80ad0:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 2, posY );
   80ad4:	00c00434 	movhi	r3,16
   80ad8:	18c40204 	addi	r3,r3,4104
   80adc:	e0bffd17 	ldw	r2,-12(fp)
   80ae0:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 3, countstep );
   80ae4:	00c00434 	movhi	r3,16
   80ae8:	18c40304 	addi	r3,r3,4108
   80aec:	e0bffe17 	ldw	r2,-8(fp)
   80af0:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 4, rayDirX);
   80af4:	00c00434 	movhi	r3,16
   80af8:	18c40404 	addi	r3,r3,4112
   80afc:	e0bfff17 	ldw	r2,-4(fp)
   80b00:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 5, rayDirY );
   80b04:	00c00434 	movhi	r3,16
   80b08:	18c40504 	addi	r3,r3,4116
   80b0c:	e0800117 	ldw	r2,4(fp)
   80b10:	18800035 	stwio	r2,0(r3)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 0);
   80b14:	00800434 	movhi	r2,16
   80b18:	10840004 	addi	r2,r2,4096
   80b1c:	10000035 	stwio	zero,0(r2)
	IOWR_RAM_DATA(NIOSINTERFACE_1_0_BASE, 0, 0xFFFFFFFF);
   80b20:	00c00434 	movhi	r3,16
   80b24:	18c40004 	addi	r3,r3,4096
   80b28:	00bfffc4 	movi	r2,-1
   80b2c:	18800035 	stwio	r2,0(r3)


	//startarray[columnIndex] = (color + (endRow<< 8));
	//stoparray[columnIndex] = (side << 10) + (endRow >> (9 - 1)) + (startRow << 1);
}
   80b30:	e037883a 	mov	sp,fp
   80b34:	df000017 	ldw	fp,0(sp)
   80b38:	dec00104 	addi	sp,sp,4
   80b3c:	f800283a 	ret

00080b40 <cos>:
   80b40:	00a00034 	movhi	r2,32768
   80b44:	10bfffc4 	addi	r2,r2,-1
   80b48:	defffa04 	addi	sp,sp,-24
   80b4c:	114c703a 	and	r6,r2,r5
   80b50:	008ffa74 	movhi	r2,16361
   80b54:	10887ec4 	addi	r2,r2,8699
   80b58:	dfc00515 	stw	ra,20(sp)
   80b5c:	2011883a 	mov	r8,r4
   80b60:	1180210e 	bge	r2,r6,80be8 <cos+0xa8>
   80b64:	009ffc34 	movhi	r2,32752
   80b68:	10bfffc4 	addi	r2,r2,-1
   80b6c:	11800a0e 	bge	r2,r6,80b98 <cos+0x58>
   80b70:	280f883a 	mov	r7,r5
   80b74:	400d883a 	mov	r6,r8
   80b78:	008354c0 	call	8354c <__subdf3>
   80b7c:	100d883a 	mov	r6,r2
   80b80:	180f883a 	mov	r7,r3
   80b84:	3005883a 	mov	r2,r6
   80b88:	3807883a 	mov	r3,r7
   80b8c:	dfc00517 	ldw	ra,20(sp)
   80b90:	dec00604 	addi	sp,sp,24
   80b94:	f800283a 	ret
   80b98:	d9800104 	addi	r6,sp,4
   80b9c:	0080e140 	call	80e14 <__ieee754_rem_pio2>
   80ba0:	10c000cc 	andi	r3,r2,3
   80ba4:	01000044 	movi	r4,1
   80ba8:	19001926 	beq	r3,r4,80c10 <cos+0xd0>
   80bac:	00800084 	movi	r2,2
   80bb0:	18803126 	beq	r3,r2,80c78 <cos+0x138>
   80bb4:	1800231e 	bne	r3,zero,80c44 <cos+0x104>
   80bb8:	d8800117 	ldw	r2,4(sp)
   80bbc:	da000317 	ldw	r8,12(sp)
   80bc0:	d8c00217 	ldw	r3,8(sp)
   80bc4:	da400417 	ldw	r9,16(sp)
   80bc8:	400d883a 	mov	r6,r8
   80bcc:	180b883a 	mov	r5,r3
   80bd0:	480f883a 	mov	r7,r9
   80bd4:	1009883a 	mov	r4,r2
   80bd8:	008163c0 	call	8163c <__kernel_cos>
   80bdc:	100d883a 	mov	r6,r2
   80be0:	180f883a 	mov	r7,r3
   80be4:	003fe706 	br	80b84 <cos+0x44>
   80be8:	000d883a 	mov	r6,zero
   80bec:	000f883a 	mov	r7,zero
   80bf0:	008163c0 	call	8163c <__kernel_cos>
   80bf4:	100d883a 	mov	r6,r2
   80bf8:	180f883a 	mov	r7,r3
   80bfc:	3005883a 	mov	r2,r6
   80c00:	3807883a 	mov	r3,r7
   80c04:	dfc00517 	ldw	ra,20(sp)
   80c08:	dec00604 	addi	sp,sp,24
   80c0c:	f800283a 	ret
   80c10:	d8800117 	ldw	r2,4(sp)
   80c14:	da000317 	ldw	r8,12(sp)
   80c18:	d8c00217 	ldw	r3,8(sp)
   80c1c:	da400417 	ldw	r9,16(sp)
   80c20:	d9000015 	stw	r4,0(sp)
   80c24:	400d883a 	mov	r6,r8
   80c28:	480f883a 	mov	r7,r9
   80c2c:	180b883a 	mov	r5,r3
   80c30:	1009883a 	mov	r4,r2
   80c34:	00829e40 	call	829e4 <__kernel_sin>
   80c38:	100d883a 	mov	r6,r2
   80c3c:	19e0003c 	xorhi	r7,r3,32768
   80c40:	003fd006 	br	80b84 <cos+0x44>
   80c44:	d8800117 	ldw	r2,4(sp)
   80c48:	da000317 	ldw	r8,12(sp)
   80c4c:	d8c00217 	ldw	r3,8(sp)
   80c50:	da400417 	ldw	r9,16(sp)
   80c54:	d9000015 	stw	r4,0(sp)
   80c58:	400d883a 	mov	r6,r8
   80c5c:	480f883a 	mov	r7,r9
   80c60:	180b883a 	mov	r5,r3
   80c64:	1009883a 	mov	r4,r2
   80c68:	00829e40 	call	829e4 <__kernel_sin>
   80c6c:	100d883a 	mov	r6,r2
   80c70:	180f883a 	mov	r7,r3
   80c74:	003fc306 	br	80b84 <cos+0x44>
   80c78:	d8800117 	ldw	r2,4(sp)
   80c7c:	da000317 	ldw	r8,12(sp)
   80c80:	d8c00217 	ldw	r3,8(sp)
   80c84:	da400417 	ldw	r9,16(sp)
   80c88:	400d883a 	mov	r6,r8
   80c8c:	180b883a 	mov	r5,r3
   80c90:	480f883a 	mov	r7,r9
   80c94:	1009883a 	mov	r4,r2
   80c98:	008163c0 	call	8163c <__kernel_cos>
   80c9c:	100d883a 	mov	r6,r2
   80ca0:	19e0003c 	xorhi	r7,r3,32768
   80ca4:	003fb706 	br	80b84 <cos+0x44>

00080ca8 <sin>:
   80ca8:	00a00034 	movhi	r2,32768
   80cac:	10bfffc4 	addi	r2,r2,-1
   80cb0:	defffa04 	addi	sp,sp,-24
   80cb4:	114c703a 	and	r6,r2,r5
   80cb8:	008ffa74 	movhi	r2,16361
   80cbc:	10887ec4 	addi	r2,r2,8699
   80cc0:	dfc00515 	stw	ra,20(sp)
   80cc4:	2011883a 	mov	r8,r4
   80cc8:	1180220e 	bge	r2,r6,80d54 <sin+0xac>
   80ccc:	009ffc34 	movhi	r2,32752
   80cd0:	10bfffc4 	addi	r2,r2,-1
   80cd4:	11800a0e 	bge	r2,r6,80d00 <sin+0x58>
   80cd8:	280f883a 	mov	r7,r5
   80cdc:	400d883a 	mov	r6,r8
   80ce0:	008354c0 	call	8354c <__subdf3>
   80ce4:	100d883a 	mov	r6,r2
   80ce8:	180f883a 	mov	r7,r3
   80cec:	3005883a 	mov	r2,r6
   80cf0:	3807883a 	mov	r3,r7
   80cf4:	dfc00517 	ldw	ra,20(sp)
   80cf8:	dec00604 	addi	sp,sp,24
   80cfc:	f800283a 	ret
   80d00:	d9800104 	addi	r6,sp,4
   80d04:	0080e140 	call	80e14 <__ieee754_rem_pio2>
   80d08:	10c000cc 	andi	r3,r2,3
   80d0c:	01000044 	movi	r4,1
   80d10:	19001b26 	beq	r3,r4,80d80 <sin+0xd8>
   80d14:	00800084 	movi	r2,2
   80d18:	18803126 	beq	r3,r2,80de0 <sin+0x138>
   80d1c:	1800241e 	bne	r3,zero,80db0 <sin+0x108>
   80d20:	d8800117 	ldw	r2,4(sp)
   80d24:	da000317 	ldw	r8,12(sp)
   80d28:	d8c00217 	ldw	r3,8(sp)
   80d2c:	da400417 	ldw	r9,16(sp)
   80d30:	d9000015 	stw	r4,0(sp)
   80d34:	400d883a 	mov	r6,r8
   80d38:	480f883a 	mov	r7,r9
   80d3c:	180b883a 	mov	r5,r3
   80d40:	1009883a 	mov	r4,r2
   80d44:	00829e40 	call	829e4 <__kernel_sin>
   80d48:	100d883a 	mov	r6,r2
   80d4c:	180f883a 	mov	r7,r3
   80d50:	003fe606 	br	80cec <sin+0x44>
   80d54:	000d883a 	mov	r6,zero
   80d58:	000f883a 	mov	r7,zero
   80d5c:	d8000015 	stw	zero,0(sp)
   80d60:	00829e40 	call	829e4 <__kernel_sin>
   80d64:	100d883a 	mov	r6,r2
   80d68:	180f883a 	mov	r7,r3
   80d6c:	3005883a 	mov	r2,r6
   80d70:	3807883a 	mov	r3,r7
   80d74:	dfc00517 	ldw	ra,20(sp)
   80d78:	dec00604 	addi	sp,sp,24
   80d7c:	f800283a 	ret
   80d80:	d8800117 	ldw	r2,4(sp)
   80d84:	da000317 	ldw	r8,12(sp)
   80d88:	d8c00217 	ldw	r3,8(sp)
   80d8c:	da400417 	ldw	r9,16(sp)
   80d90:	400d883a 	mov	r6,r8
   80d94:	180b883a 	mov	r5,r3
   80d98:	480f883a 	mov	r7,r9
   80d9c:	1009883a 	mov	r4,r2
   80da0:	008163c0 	call	8163c <__kernel_cos>
   80da4:	100d883a 	mov	r6,r2
   80da8:	180f883a 	mov	r7,r3
   80dac:	003fcf06 	br	80cec <sin+0x44>
   80db0:	d8800117 	ldw	r2,4(sp)
   80db4:	da000317 	ldw	r8,12(sp)
   80db8:	d8c00217 	ldw	r3,8(sp)
   80dbc:	da400417 	ldw	r9,16(sp)
   80dc0:	400d883a 	mov	r6,r8
   80dc4:	180b883a 	mov	r5,r3
   80dc8:	480f883a 	mov	r7,r9
   80dcc:	1009883a 	mov	r4,r2
   80dd0:	008163c0 	call	8163c <__kernel_cos>
   80dd4:	100d883a 	mov	r6,r2
   80dd8:	19e0003c 	xorhi	r7,r3,32768
   80ddc:	003fc306 	br	80cec <sin+0x44>
   80de0:	d8800117 	ldw	r2,4(sp)
   80de4:	da000317 	ldw	r8,12(sp)
   80de8:	d8c00217 	ldw	r3,8(sp)
   80dec:	da400417 	ldw	r9,16(sp)
   80df0:	d9000015 	stw	r4,0(sp)
   80df4:	400d883a 	mov	r6,r8
   80df8:	480f883a 	mov	r7,r9
   80dfc:	180b883a 	mov	r5,r3
   80e00:	1009883a 	mov	r4,r2
   80e04:	00829e40 	call	829e4 <__kernel_sin>
   80e08:	100d883a 	mov	r6,r2
   80e0c:	19e0003c 	xorhi	r7,r3,32768
   80e10:	003fb606 	br	80cec <sin+0x44>

00080e14 <__ieee754_rem_pio2>:
   80e14:	deffe304 	addi	sp,sp,-116
   80e18:	00a00034 	movhi	r2,32768
   80e1c:	10bfffc4 	addi	r2,r2,-1
   80e20:	dd801915 	stw	r22,100(sp)
   80e24:	28ac703a 	and	r22,r5,r2
   80e28:	008ffa74 	movhi	r2,16361
   80e2c:	10887ec4 	addi	r2,r2,8699
   80e30:	df001b15 	stw	fp,108(sp)
   80e34:	dfc01c15 	stw	ra,112(sp)
   80e38:	ddc01a15 	stw	r23,104(sp)
   80e3c:	dd401815 	stw	r21,96(sp)
   80e40:	dd001715 	stw	r20,92(sp)
   80e44:	dcc01615 	stw	r19,88(sp)
   80e48:	dc801515 	stw	r18,84(sp)
   80e4c:	dc401415 	stw	r17,80(sp)
   80e50:	dc001315 	stw	r16,76(sp)
   80e54:	2013883a 	mov	r9,r4
   80e58:	d9400a15 	stw	r5,40(sp)
   80e5c:	3039883a 	mov	fp,r6
   80e60:	15801216 	blt	r2,r22,80eac <__ieee754_rem_pio2+0x98>
   80e64:	e1400115 	stw	r5,4(fp)
   80e68:	30000315 	stw	zero,12(r6)
   80e6c:	e1000015 	stw	r4,0(fp)
   80e70:	d8000b15 	stw	zero,44(sp)
   80e74:	30000215 	stw	zero,8(r6)
   80e78:	d8800b17 	ldw	r2,44(sp)
   80e7c:	dfc01c17 	ldw	ra,112(sp)
   80e80:	df001b17 	ldw	fp,108(sp)
   80e84:	ddc01a17 	ldw	r23,104(sp)
   80e88:	dd801917 	ldw	r22,100(sp)
   80e8c:	dd401817 	ldw	r21,96(sp)
   80e90:	dd001717 	ldw	r20,92(sp)
   80e94:	dcc01617 	ldw	r19,88(sp)
   80e98:	dc801517 	ldw	r18,84(sp)
   80e9c:	dc401417 	ldw	r17,80(sp)
   80ea0:	dc001317 	ldw	r16,76(sp)
   80ea4:	dec01d04 	addi	sp,sp,116
   80ea8:	f800283a 	ret
   80eac:	009000f4 	movhi	r2,16387
   80eb0:	10b65ec4 	addi	r2,r2,-9861
   80eb4:	15800f0e 	bge	r2,r22,80ef4 <__ieee754_rem_pio2+0xe0>
   80eb8:	00904e74 	movhi	r2,16697
   80ebc:	10887ec4 	addi	r2,r2,8699
   80ec0:	1580330e 	bge	r2,r22,80f90 <__ieee754_rem_pio2+0x17c>
   80ec4:	009ffc34 	movhi	r2,32752
   80ec8:	10bfffc4 	addi	r2,r2,-1
   80ecc:	1580fe0e 	bge	r2,r22,812c8 <__ieee754_rem_pio2+0x4b4>
   80ed0:	280f883a 	mov	r7,r5
   80ed4:	480d883a 	mov	r6,r9
   80ed8:	008354c0 	call	8354c <__subdf3>
   80edc:	e0c00115 	stw	r3,4(fp)
   80ee0:	d8000b15 	stw	zero,44(sp)
   80ee4:	e0800015 	stw	r2,0(fp)
   80ee8:	e0800215 	stw	r2,8(fp)
   80eec:	e0c00315 	stw	r3,12(fp)
   80ef0:	003fe106 	br	80e78 <__ieee754_rem_pio2+0x64>
   80ef4:	d9000a17 	ldw	r4,40(sp)
   80ef8:	0100ce0e 	bge	zero,r4,81234 <__ieee754_rem_pio2+0x420>
   80efc:	04151034 	movhi	r16,21568
   80f00:	044ffe74 	movhi	r17,16377
   80f04:	8c487ec4 	addi	r17,r17,8699
   80f08:	4809883a 	mov	r4,r9
   80f0c:	800d883a 	mov	r6,r16
   80f10:	880f883a 	mov	r7,r17
   80f14:	008354c0 	call	8354c <__subdf3>
   80f18:	1025883a 	mov	r18,r2
   80f1c:	1827883a 	mov	r19,r3
   80f20:	b4413c26 	beq	r22,r17,81414 <__ieee754_rem_pio2+0x600>
   80f24:	040698b4 	movhi	r16,6754
   80f28:	8418cc44 	addi	r16,r16,25393
   80f2c:	044f7474 	movhi	r17,15825
   80f30:	8c6d1844 	addi	r17,r17,-19359
   80f34:	1009883a 	mov	r4,r2
   80f38:	180b883a 	mov	r5,r3
   80f3c:	800d883a 	mov	r6,r16
   80f40:	880f883a 	mov	r7,r17
   80f44:	008354c0 	call	8354c <__subdf3>
   80f48:	100d883a 	mov	r6,r2
   80f4c:	9009883a 	mov	r4,r18
   80f50:	980b883a 	mov	r5,r19
   80f54:	180f883a 	mov	r7,r3
   80f58:	e0800015 	stw	r2,0(fp)
   80f5c:	e0c00115 	stw	r3,4(fp)
   80f60:	008354c0 	call	8354c <__subdf3>
   80f64:	1009883a 	mov	r4,r2
   80f68:	800d883a 	mov	r6,r16
   80f6c:	880f883a 	mov	r7,r17
   80f70:	180b883a 	mov	r5,r3
   80f74:	008354c0 	call	8354c <__subdf3>
   80f78:	1009883a 	mov	r4,r2
   80f7c:	00800044 	movi	r2,1
   80f80:	d8800b15 	stw	r2,44(sp)
   80f84:	e0c00315 	stw	r3,12(fp)
   80f88:	e1000215 	stw	r4,8(fp)
   80f8c:	003fba06 	br	80e78 <__ieee754_rem_pio2+0x64>
   80f90:	0082cfc0 	call	82cfc <fabs>
   80f94:	021b72b4 	movhi	r8,28106
   80f98:	423220c4 	addi	r8,r8,-14205
   80f9c:	024ff934 	movhi	r9,16356
   80fa0:	4a57cc04 	addi	r9,r9,24368
   80fa4:	480f883a 	mov	r7,r9
   80fa8:	400d883a 	mov	r6,r8
   80fac:	1009883a 	mov	r4,r2
   80fb0:	180b883a 	mov	r5,r3
   80fb4:	1025883a 	mov	r18,r2
   80fb8:	1827883a 	mov	r19,r3
   80fbc:	00836400 	call	83640 <__muldf3>
   80fc0:	0011883a 	mov	r8,zero
   80fc4:	024ff834 	movhi	r9,16352
   80fc8:	480f883a 	mov	r7,r9
   80fcc:	400d883a 	mov	r6,r8
   80fd0:	180b883a 	mov	r5,r3
   80fd4:	1009883a 	mov	r4,r2
   80fd8:	00835cc0 	call	835cc <__adddf3>
   80fdc:	180b883a 	mov	r5,r3
   80fe0:	1009883a 	mov	r4,r2
   80fe4:	0083c940 	call	83c94 <__fixdfsi>
   80fe8:	1009883a 	mov	r4,r2
   80fec:	d8800b15 	stw	r2,44(sp)
   80ff0:	0083b9c0 	call	83b9c <__floatsidf>
   80ff4:	1823883a 	mov	r17,r3
   80ff8:	1009883a 	mov	r4,r2
   80ffc:	d8800c15 	stw	r2,48(sp)
   81000:	00effe74 	movhi	r3,49145
   81004:	18c87ec4 	addi	r3,r3,8699
   81008:	00951034 	movhi	r2,21568
   8100c:	880b883a 	mov	r5,r17
   81010:	180f883a 	mov	r7,r3
   81014:	100d883a 	mov	r6,r2
   81018:	dc400d15 	stw	r17,52(sp)
   8101c:	00836400 	call	83640 <__muldf3>
   81020:	180f883a 	mov	r7,r3
   81024:	980b883a 	mov	r5,r19
   81028:	9009883a 	mov	r4,r18
   8102c:	100d883a 	mov	r6,r2
   81030:	00835cc0 	call	835cc <__adddf3>
   81034:	d9000c17 	ldw	r4,48(sp)
   81038:	020698b4 	movhi	r8,6754
   8103c:	4218cc44 	addi	r8,r8,25393
   81040:	024f7474 	movhi	r9,15825
   81044:	4a6d1844 	addi	r9,r9,-19359
   81048:	880b883a 	mov	r5,r17
   8104c:	480f883a 	mov	r7,r9
   81050:	400d883a 	mov	r6,r8
   81054:	1025883a 	mov	r18,r2
   81058:	1827883a 	mov	r19,r3
   8105c:	00836400 	call	83640 <__muldf3>
   81060:	d9000b17 	ldw	r4,44(sp)
   81064:	100f883a 	mov	r7,r2
   81068:	1811883a 	mov	r8,r3
   8106c:	008007c4 	movi	r2,31
   81070:	dc800e15 	stw	r18,56(sp)
   81074:	3821883a 	mov	r16,r7
   81078:	dcc00f15 	stw	r19,60(sp)
   8107c:	4023883a 	mov	r17,r8
   81080:	11010a0e 	bge	r2,r4,814ac <__ieee754_rem_pio2+0x698>
   81084:	d9000e17 	ldw	r4,56(sp)
   81088:	d9400f17 	ldw	r5,60(sp)
   8108c:	800d883a 	mov	r6,r16
   81090:	880f883a 	mov	r7,r17
   81094:	008354c0 	call	8354c <__subdf3>
   81098:	1810d53a 	srli	r8,r3,20
   8109c:	b02dd53a 	srai	r22,r22,20
   810a0:	1009883a 	mov	r4,r2
   810a4:	4201ffcc 	andi	r8,r8,2047
   810a8:	180b883a 	mov	r5,r3
   810ac:	b211c83a 	sub	r8,r22,r8
   810b0:	00800404 	movi	r2,16
   810b4:	dd801015 	stw	r22,64(sp)
   810b8:	e1000015 	stw	r4,0(fp)
   810bc:	e1400115 	stw	r5,4(fp)
   810c0:	1200430e 	bge	r2,r8,811d0 <__ieee754_rem_pio2+0x3bc>
   810c4:	d9000c17 	ldw	r4,48(sp)
   810c8:	d9400d17 	ldw	r5,52(sp)
   810cc:	00869834 	movhi	r2,6752
   810d0:	00cf7474 	movhi	r3,15825
   810d4:	18ed1844 	addi	r3,r3,-19359
   810d8:	180f883a 	mov	r7,r3
   810dc:	100d883a 	mov	r6,r2
   810e0:	00836400 	call	83640 <__muldf3>
   810e4:	d9000e17 	ldw	r4,56(sp)
   810e8:	d9400f17 	ldw	r5,60(sp)
   810ec:	100d883a 	mov	r6,r2
   810f0:	180f883a 	mov	r7,r3
   810f4:	1025883a 	mov	r18,r2
   810f8:	1827883a 	mov	r19,r3
   810fc:	008354c0 	call	8354c <__subdf3>
   81100:	d9000c17 	ldw	r4,48(sp)
   81104:	d9400d17 	ldw	r5,52(sp)
   81108:	058b80f4 	movhi	r22,11779
   8110c:	b59c1cc4 	addi	r22,r22,28787
   81110:	05cee8f4 	movhi	r23,15267
   81114:	bdc66284 	addi	r23,r23,6538
   81118:	b00d883a 	mov	r6,r22
   8111c:	b80f883a 	mov	r7,r23
   81120:	d8801115 	stw	r2,68(sp)
   81124:	d8c01215 	stw	r3,72(sp)
   81128:	d8800815 	stw	r2,32(sp)
   8112c:	00836400 	call	83640 <__muldf3>
   81130:	d9001217 	ldw	r4,72(sp)
   81134:	d9400f17 	ldw	r5,60(sp)
   81138:	d9800817 	ldw	r6,32(sp)
   8113c:	d9000915 	stw	r4,36(sp)
   81140:	d9c01217 	ldw	r7,72(sp)
   81144:	d9000e17 	ldw	r4,56(sp)
   81148:	1021883a 	mov	r16,r2
   8114c:	1823883a 	mov	r17,r3
   81150:	008354c0 	call	8354c <__subdf3>
   81154:	180b883a 	mov	r5,r3
   81158:	900d883a 	mov	r6,r18
   8115c:	980f883a 	mov	r7,r19
   81160:	1009883a 	mov	r4,r2
   81164:	008354c0 	call	8354c <__subdf3>
   81168:	180f883a 	mov	r7,r3
   8116c:	880b883a 	mov	r5,r17
   81170:	8009883a 	mov	r4,r16
   81174:	100d883a 	mov	r6,r2
   81178:	008354c0 	call	8354c <__subdf3>
   8117c:	d9000817 	ldw	r4,32(sp)
   81180:	d9401217 	ldw	r5,72(sp)
   81184:	180f883a 	mov	r7,r3
   81188:	100d883a 	mov	r6,r2
   8118c:	1021883a 	mov	r16,r2
   81190:	1823883a 	mov	r17,r3
   81194:	008354c0 	call	8354c <__subdf3>
   81198:	1810d53a 	srli	r8,r3,20
   8119c:	1009883a 	mov	r4,r2
   811a0:	d8801017 	ldw	r2,64(sp)
   811a4:	4201ffcc 	andi	r8,r8,2047
   811a8:	180b883a 	mov	r5,r3
   811ac:	1211c83a 	sub	r8,r2,r8
   811b0:	00800c44 	movi	r2,49
   811b4:	e1000015 	stw	r4,0(fp)
   811b8:	e1400115 	stw	r5,4(fp)
   811bc:	1200f016 	blt	r2,r8,81580 <__ieee754_rem_pio2+0x76c>
   811c0:	d8c00817 	ldw	r3,32(sp)
   811c4:	d9001217 	ldw	r4,72(sp)
   811c8:	d8c00e15 	stw	r3,56(sp)
   811cc:	d9000f15 	stw	r4,60(sp)
   811d0:	e1800017 	ldw	r6,0(fp)
   811d4:	e1c00117 	ldw	r7,4(fp)
   811d8:	d9400f17 	ldw	r5,60(sp)
   811dc:	d9000e17 	ldw	r4,56(sp)
   811e0:	008354c0 	call	8354c <__subdf3>
   811e4:	180b883a 	mov	r5,r3
   811e8:	800d883a 	mov	r6,r16
   811ec:	880f883a 	mov	r7,r17
   811f0:	1009883a 	mov	r4,r2
   811f4:	008354c0 	call	8354c <__subdf3>
   811f8:	d9400a17 	ldw	r5,40(sp)
   811fc:	e0800215 	stw	r2,8(fp)
   81200:	e1800204 	addi	r6,fp,8
   81204:	30c00115 	stw	r3,4(r6)
   81208:	283f1b0e 	bge	r5,zero,80e78 <__ieee754_rem_pio2+0x64>
   8120c:	e0c00117 	ldw	r3,4(fp)
   81210:	d8800b17 	ldw	r2,44(sp)
   81214:	18e0003c 	xorhi	r3,r3,32768
   81218:	0085c83a 	sub	r2,zero,r2
   8121c:	e0c00115 	stw	r3,4(fp)
   81220:	d8800b15 	stw	r2,44(sp)
   81224:	30800117 	ldw	r2,4(r6)
   81228:	10a0003c 	xorhi	r2,r2,32768
   8122c:	30800115 	stw	r2,4(r6)
   81230:	003f1106 	br	80e78 <__ieee754_rem_pio2+0x64>
   81234:	04151034 	movhi	r16,21568
   81238:	044ffe74 	movhi	r17,16377
   8123c:	8c487ec4 	addi	r17,r17,8699
   81240:	4809883a 	mov	r4,r9
   81244:	800d883a 	mov	r6,r16
   81248:	880f883a 	mov	r7,r17
   8124c:	00835cc0 	call	835cc <__adddf3>
   81250:	1025883a 	mov	r18,r2
   81254:	1827883a 	mov	r19,r3
   81258:	b440a326 	beq	r22,r17,814e8 <__ieee754_rem_pio2+0x6d4>
   8125c:	040698b4 	movhi	r16,6754
   81260:	8418cc44 	addi	r16,r16,25393
   81264:	044f7474 	movhi	r17,15825
   81268:	8c6d1844 	addi	r17,r17,-19359
   8126c:	1009883a 	mov	r4,r2
   81270:	180b883a 	mov	r5,r3
   81274:	800d883a 	mov	r6,r16
   81278:	880f883a 	mov	r7,r17
   8127c:	00835cc0 	call	835cc <__adddf3>
   81280:	100d883a 	mov	r6,r2
   81284:	9009883a 	mov	r4,r18
   81288:	980b883a 	mov	r5,r19
   8128c:	180f883a 	mov	r7,r3
   81290:	e0800015 	stw	r2,0(fp)
   81294:	e0c00115 	stw	r3,4(fp)
   81298:	008354c0 	call	8354c <__subdf3>
   8129c:	1009883a 	mov	r4,r2
   812a0:	800d883a 	mov	r6,r16
   812a4:	880f883a 	mov	r7,r17
   812a8:	180b883a 	mov	r5,r3
   812ac:	00835cc0 	call	835cc <__adddf3>
   812b0:	1009883a 	mov	r4,r2
   812b4:	00bfffc4 	movi	r2,-1
   812b8:	d8800b15 	stw	r2,44(sp)
   812bc:	e0c00315 	stw	r3,12(fp)
   812c0:	e1000215 	stw	r4,8(fp)
   812c4:	003eec06 	br	80e78 <__ieee754_rem_pio2+0x64>
   812c8:	b005d53a 	srai	r2,r22,20
   812cc:	4821883a 	mov	r16,r9
   812d0:	05505c34 	movhi	r21,16752
   812d4:	15fefa84 	addi	r23,r2,-1046
   812d8:	b826953a 	slli	r19,r23,20
   812dc:	0029883a 	mov	r20,zero
   812e0:	048000c4 	movi	r18,3
   812e4:	b4e7c83a 	sub	r19,r22,r19
   812e8:	980b883a 	mov	r5,r19
   812ec:	0083c940 	call	83c94 <__fixdfsi>
   812f0:	1009883a 	mov	r4,r2
   812f4:	0083b9c0 	call	83b9c <__floatsidf>
   812f8:	980b883a 	mov	r5,r19
   812fc:	8009883a 	mov	r4,r16
   81300:	180f883a 	mov	r7,r3
   81304:	100d883a 	mov	r6,r2
   81308:	d8800215 	stw	r2,8(sp)
   8130c:	d8c00315 	stw	r3,12(sp)
   81310:	008354c0 	call	8354c <__subdf3>
   81314:	180b883a 	mov	r5,r3
   81318:	a00d883a 	mov	r6,r20
   8131c:	a80f883a 	mov	r7,r21
   81320:	1009883a 	mov	r4,r2
   81324:	00836400 	call	83640 <__muldf3>
   81328:	180b883a 	mov	r5,r3
   8132c:	1009883a 	mov	r4,r2
   81330:	1823883a 	mov	r17,r3
   81334:	1021883a 	mov	r16,r2
   81338:	0083c940 	call	83c94 <__fixdfsi>
   8133c:	1009883a 	mov	r4,r2
   81340:	0083b9c0 	call	83b9c <__floatsidf>
   81344:	880b883a 	mov	r5,r17
   81348:	8009883a 	mov	r4,r16
   8134c:	180f883a 	mov	r7,r3
   81350:	100d883a 	mov	r6,r2
   81354:	d8800415 	stw	r2,16(sp)
   81358:	d8c00515 	stw	r3,20(sp)
   8135c:	008354c0 	call	8354c <__subdf3>
   81360:	180b883a 	mov	r5,r3
   81364:	000d883a 	mov	r6,zero
   81368:	a80f883a 	mov	r7,r21
   8136c:	1009883a 	mov	r4,r2
   81370:	00836400 	call	83640 <__muldf3>
   81374:	d8c00715 	stw	r3,28(sp)
   81378:	d8800615 	stw	r2,24(sp)
   8137c:	00000106 	br	81384 <__ieee754_rem_pio2+0x570>
   81380:	8025883a 	mov	r18,r16
   81384:	943fffc4 	addi	r16,r18,-1
   81388:	800890fa 	slli	r4,r16,3
   8138c:	d9400204 	addi	r5,sp,8
   81390:	000d883a 	mov	r6,zero
   81394:	2149883a 	add	r4,r4,r5
   81398:	20c00117 	ldw	r3,4(r4)
   8139c:	20800017 	ldw	r2,0(r4)
   813a0:	000f883a 	mov	r7,zero
   813a4:	180b883a 	mov	r5,r3
   813a8:	1009883a 	mov	r4,r2
   813ac:	0083a040 	call	83a04 <__eqdf2>
   813b0:	103ff326 	beq	r2,zero,81380 <__ieee754_rem_pio2+0x56c>
   813b4:	00800084 	movi	r2,2
   813b8:	00c00274 	movhi	r3,9
   813bc:	18fc7204 	addi	r3,r3,-3640
   813c0:	b80d883a 	mov	r6,r23
   813c4:	900f883a 	mov	r7,r18
   813c8:	d9000204 	addi	r4,sp,8
   813cc:	e00b883a 	mov	r5,fp
   813d0:	d8800015 	stw	r2,0(sp)
   813d4:	d8c00115 	stw	r3,4(sp)
   813d8:	0081b680 	call	81b68 <__kernel_rem_pio2>
   813dc:	d8800b15 	stw	r2,44(sp)
   813e0:	d8800a17 	ldw	r2,40(sp)
   813e4:	103ea40e 	bge	r2,zero,80e78 <__ieee754_rem_pio2+0x64>
   813e8:	e0800117 	ldw	r2,4(fp)
   813ec:	d8c00b17 	ldw	r3,44(sp)
   813f0:	e1000204 	addi	r4,fp,8
   813f4:	10a0003c 	xorhi	r2,r2,32768
   813f8:	00c7c83a 	sub	r3,zero,r3
   813fc:	e0800115 	stw	r2,4(fp)
   81400:	d8c00b15 	stw	r3,44(sp)
   81404:	20c00117 	ldw	r3,4(r4)
   81408:	18e0003c 	xorhi	r3,r3,32768
   8140c:	20c00115 	stw	r3,4(r4)
   81410:	003e9906 	br	80e78 <__ieee754_rem_pio2+0x64>
   81414:	00869834 	movhi	r2,6752
   81418:	00cf7474 	movhi	r3,15825
   8141c:	18ed1844 	addi	r3,r3,-19359
   81420:	9009883a 	mov	r4,r18
   81424:	980b883a 	mov	r5,r19
   81428:	180f883a 	mov	r7,r3
   8142c:	100d883a 	mov	r6,r2
   81430:	008354c0 	call	8354c <__subdf3>
   81434:	048b80f4 	movhi	r18,11779
   81438:	949c1cc4 	addi	r18,r18,28787
   8143c:	04cee8f4 	movhi	r19,15267
   81440:	9cc66284 	addi	r19,r19,6538
   81444:	1009883a 	mov	r4,r2
   81448:	180b883a 	mov	r5,r3
   8144c:	900d883a 	mov	r6,r18
   81450:	980f883a 	mov	r7,r19
   81454:	1021883a 	mov	r16,r2
   81458:	1823883a 	mov	r17,r3
   8145c:	008354c0 	call	8354c <__subdf3>
   81460:	100d883a 	mov	r6,r2
   81464:	8009883a 	mov	r4,r16
   81468:	880b883a 	mov	r5,r17
   8146c:	180f883a 	mov	r7,r3
   81470:	e0800015 	stw	r2,0(fp)
   81474:	e0c00115 	stw	r3,4(fp)
   81478:	008354c0 	call	8354c <__subdf3>
   8147c:	180b883a 	mov	r5,r3
   81480:	1009883a 	mov	r4,r2
   81484:	900d883a 	mov	r6,r18
   81488:	980f883a 	mov	r7,r19
   8148c:	008354c0 	call	8354c <__subdf3>
   81490:	180b883a 	mov	r5,r3
   81494:	1009883a 	mov	r4,r2
   81498:	00c00044 	movi	r3,1
   8149c:	d8c00b15 	stw	r3,44(sp)
   814a0:	e1400315 	stw	r5,12(fp)
   814a4:	e1000215 	stw	r4,8(fp)
   814a8:	003e7306 	br	80e78 <__ieee754_rem_pio2+0x64>
   814ac:	2105883a 	add	r2,r4,r4
   814b0:	1085883a 	add	r2,r2,r2
   814b4:	00c00274 	movhi	r3,9
   814b8:	18fc5204 	addi	r3,r3,-3768
   814bc:	10c5883a 	add	r2,r2,r3
   814c0:	113fff17 	ldw	r4,-4(r2)
   814c4:	b13eef26 	beq	r22,r4,81084 <__ieee754_rem_pio2+0x270>
   814c8:	980b883a 	mov	r5,r19
   814cc:	400f883a 	mov	r7,r8
   814d0:	9009883a 	mov	r4,r18
   814d4:	800d883a 	mov	r6,r16
   814d8:	008354c0 	call	8354c <__subdf3>
   814dc:	e0c00115 	stw	r3,4(fp)
   814e0:	e0800015 	stw	r2,0(fp)
   814e4:	003f3a06 	br	811d0 <__ieee754_rem_pio2+0x3bc>
   814e8:	00869834 	movhi	r2,6752
   814ec:	00cf7474 	movhi	r3,15825
   814f0:	18ed1844 	addi	r3,r3,-19359
   814f4:	9009883a 	mov	r4,r18
   814f8:	980b883a 	mov	r5,r19
   814fc:	180f883a 	mov	r7,r3
   81500:	100d883a 	mov	r6,r2
   81504:	00835cc0 	call	835cc <__adddf3>
   81508:	048b80f4 	movhi	r18,11779
   8150c:	949c1cc4 	addi	r18,r18,28787
   81510:	04cee8f4 	movhi	r19,15267
   81514:	9cc66284 	addi	r19,r19,6538
   81518:	1009883a 	mov	r4,r2
   8151c:	180b883a 	mov	r5,r3
   81520:	900d883a 	mov	r6,r18
   81524:	980f883a 	mov	r7,r19
   81528:	1021883a 	mov	r16,r2
   8152c:	1823883a 	mov	r17,r3
   81530:	00835cc0 	call	835cc <__adddf3>
   81534:	100d883a 	mov	r6,r2
   81538:	8009883a 	mov	r4,r16
   8153c:	880b883a 	mov	r5,r17
   81540:	180f883a 	mov	r7,r3
   81544:	e0800015 	stw	r2,0(fp)
   81548:	e0c00115 	stw	r3,4(fp)
   8154c:	008354c0 	call	8354c <__subdf3>
   81550:	180b883a 	mov	r5,r3
   81554:	1009883a 	mov	r4,r2
   81558:	900d883a 	mov	r6,r18
   8155c:	980f883a 	mov	r7,r19
   81560:	00835cc0 	call	835cc <__adddf3>
   81564:	180b883a 	mov	r5,r3
   81568:	1009883a 	mov	r4,r2
   8156c:	00ffffc4 	movi	r3,-1
   81570:	d8c00b15 	stw	r3,44(sp)
   81574:	e1400315 	stw	r5,12(fp)
   81578:	e1000215 	stw	r4,8(fp)
   8157c:	003e3e06 	br	80e78 <__ieee754_rem_pio2+0x64>
   81580:	d9000c17 	ldw	r4,48(sp)
   81584:	d9400d17 	ldw	r5,52(sp)
   81588:	018b8034 	movhi	r6,11776
   8158c:	b80f883a 	mov	r7,r23
   81590:	00836400 	call	83640 <__muldf3>
   81594:	d9000817 	ldw	r4,32(sp)
   81598:	d9401217 	ldw	r5,72(sp)
   8159c:	100d883a 	mov	r6,r2
   815a0:	180f883a 	mov	r7,r3
   815a4:	1025883a 	mov	r18,r2
   815a8:	1827883a 	mov	r19,r3
   815ac:	008354c0 	call	8354c <__subdf3>
   815b0:	d9400d17 	ldw	r5,52(sp)
   815b4:	d9000c17 	ldw	r4,48(sp)
   815b8:	02094834 	movhi	r8,9504
   815bc:	42127044 	addi	r8,r8,18881
   815c0:	024e5f34 	movhi	r9,14716
   815c4:	4a60e684 	addi	r9,r9,-31846
   815c8:	480f883a 	mov	r7,r9
   815cc:	400d883a 	mov	r6,r8
   815d0:	182b883a 	mov	r21,r3
   815d4:	d8800e15 	stw	r2,56(sp)
   815d8:	00836400 	call	83640 <__muldf3>
   815dc:	d9000817 	ldw	r4,32(sp)
   815e0:	d9401217 	ldw	r5,72(sp)
   815e4:	d9800e17 	ldw	r6,56(sp)
   815e8:	a80f883a 	mov	r7,r21
   815ec:	1021883a 	mov	r16,r2
   815f0:	1823883a 	mov	r17,r3
   815f4:	dd400f15 	stw	r21,60(sp)
   815f8:	008354c0 	call	8354c <__subdf3>
   815fc:	180b883a 	mov	r5,r3
   81600:	900d883a 	mov	r6,r18
   81604:	980f883a 	mov	r7,r19
   81608:	1009883a 	mov	r4,r2
   8160c:	008354c0 	call	8354c <__subdf3>
   81610:	180f883a 	mov	r7,r3
   81614:	880b883a 	mov	r5,r17
   81618:	8009883a 	mov	r4,r16
   8161c:	100d883a 	mov	r6,r2
   81620:	008354c0 	call	8354c <__subdf3>
   81624:	d9000e17 	ldw	r4,56(sp)
   81628:	1021883a 	mov	r16,r2
   8162c:	1823883a 	mov	r17,r3
   81630:	a80b883a 	mov	r5,r21
   81634:	180f883a 	mov	r7,r3
   81638:	003fa606 	br	814d4 <__ieee754_rem_pio2+0x6c0>

0008163c <__kernel_cos>:
   8163c:	defff104 	addi	sp,sp,-60
   81640:	00a00034 	movhi	r2,32768
   81644:	10bfffc4 	addi	r2,r2,-1
   81648:	dd800c15 	stw	r22,48(sp)
   8164c:	116c703a 	and	r22,r2,r5
   81650:	0005883a 	mov	r2,zero
   81654:	dd000a15 	stw	r20,40(sp)
   81658:	d8800215 	stw	r2,8(sp)
   8165c:	2029883a 	mov	r20,r4
   81660:	008f9034 	movhi	r2,15936
   81664:	10bfffc4 	addi	r2,r2,-1
   81668:	0009883a 	mov	r4,zero
   8166c:	dd400b15 	stw	r21,44(sp)
   81670:	dfc00e15 	stw	ra,56(sp)
   81674:	ddc00d15 	stw	r23,52(sp)
   81678:	dcc00915 	stw	r19,36(sp)
   8167c:	dc800815 	stw	r18,32(sp)
   81680:	dc400715 	stw	r17,28(sp)
   81684:	dc000615 	stw	r16,24(sp)
   81688:	282b883a 	mov	r21,r5
   8168c:	d9800415 	stw	r6,16(sp)
   81690:	d9c00515 	stw	r7,20(sp)
   81694:	d9000315 	stw	r4,12(sp)
   81698:	15809216 	blt	r2,r22,818e4 <__kernel_cos+0x2a8>
   8169c:	a009883a 	mov	r4,r20
   816a0:	0083c940 	call	83c94 <__fixdfsi>
   816a4:	10011c26 	beq	r2,zero,81b18 <__kernel_cos+0x4dc>
   816a8:	a009883a 	mov	r4,r20
   816ac:	a80b883a 	mov	r5,r21
   816b0:	a00d883a 	mov	r6,r20
   816b4:	a80f883a 	mov	r7,r21
   816b8:	00836400 	call	83640 <__muldf3>
   816bc:	1021883a 	mov	r16,r2
   816c0:	1823883a 	mov	r17,r3
   816c4:	1025883a 	mov	r18,r2
   816c8:	1827883a 	mov	r19,r3
   816cc:	00afa234 	movhi	r2,48776
   816d0:	108e3504 	addi	r2,r2,14548
   816d4:	00ef6a74 	movhi	r3,48553
   816d8:	18feba44 	addi	r3,r3,-1303
   816dc:	8009883a 	mov	r4,r16
   816e0:	880b883a 	mov	r5,r17
   816e4:	180f883a 	mov	r7,r3
   816e8:	100d883a 	mov	r6,r2
   816ec:	00836400 	call	83640 <__muldf3>
   816f0:	022f6d74 	movhi	r8,48565
   816f4:	422c7104 	addi	r8,r8,-20028
   816f8:	024f88b4 	movhi	r9,15906
   816fc:	4a7ba784 	addi	r9,r9,-4450
   81700:	480f883a 	mov	r7,r9
   81704:	400d883a 	mov	r6,r8
   81708:	180b883a 	mov	r5,r3
   8170c:	1009883a 	mov	r4,r2
   81710:	00835cc0 	call	835cc <__adddf3>
   81714:	180f883a 	mov	r7,r3
   81718:	8009883a 	mov	r4,r16
   8171c:	880b883a 	mov	r5,r17
   81720:	100d883a 	mov	r6,r2
   81724:	00836400 	call	83640 <__muldf3>
   81728:	02202734 	movhi	r8,32924
   8172c:	4214ab44 	addi	r8,r8,21165
   81730:	024fa4b4 	movhi	r9,16018
   81734:	4a5f93c4 	addi	r9,r9,32335
   81738:	480f883a 	mov	r7,r9
   8173c:	400d883a 	mov	r6,r8
   81740:	180b883a 	mov	r5,r3
   81744:	1009883a 	mov	r4,r2
   81748:	008354c0 	call	8354c <__subdf3>
   8174c:	180f883a 	mov	r7,r3
   81750:	8009883a 	mov	r4,r16
   81754:	880b883a 	mov	r5,r17
   81758:	100d883a 	mov	r6,r2
   8175c:	00836400 	call	83640 <__muldf3>
   81760:	020672f4 	movhi	r8,6603
   81764:	42056404 	addi	r8,r8,5520
   81768:	024fbeb4 	movhi	r9,16122
   8176c:	4a406804 	addi	r9,r9,416
   81770:	480f883a 	mov	r7,r9
   81774:	400d883a 	mov	r6,r8
   81778:	180b883a 	mov	r5,r3
   8177c:	1009883a 	mov	r4,r2
   81780:	00835cc0 	call	835cc <__adddf3>
   81784:	180f883a 	mov	r7,r3
   81788:	8009883a 	mov	r4,r16
   8178c:	880b883a 	mov	r5,r17
   81790:	100d883a 	mov	r6,r2
   81794:	00836400 	call	83640 <__muldf3>
   81798:	0205b074 	movhi	r8,5825
   8179c:	42145dc4 	addi	r8,r8,20855
   817a0:	024fd5f4 	movhi	r9,16215
   817a4:	4a705b04 	addi	r9,r9,-16020
   817a8:	480f883a 	mov	r7,r9
   817ac:	400d883a 	mov	r6,r8
   817b0:	180b883a 	mov	r5,r3
   817b4:	1009883a 	mov	r4,r2
   817b8:	008354c0 	call	8354c <__subdf3>
   817bc:	180f883a 	mov	r7,r3
   817c0:	8009883a 	mov	r4,r16
   817c4:	880b883a 	mov	r5,r17
   817c8:	100d883a 	mov	r6,r2
   817cc:	00836400 	call	83640 <__muldf3>
   817d0:	02155574 	movhi	r8,21845
   817d4:	42155304 	addi	r8,r8,21836
   817d8:	024fe974 	movhi	r9,16293
   817dc:	4a555544 	addi	r9,r9,21845
   817e0:	480f883a 	mov	r7,r9
   817e4:	400d883a 	mov	r6,r8
   817e8:	180b883a 	mov	r5,r3
   817ec:	1009883a 	mov	r4,r2
   817f0:	00835cc0 	call	835cc <__adddf3>
   817f4:	180f883a 	mov	r7,r3
   817f8:	880b883a 	mov	r5,r17
   817fc:	8009883a 	mov	r4,r16
   81800:	100d883a 	mov	r6,r2
   81804:	00836400 	call	83640 <__muldf3>
   81808:	1021883a 	mov	r16,r2
   8180c:	1823883a 	mov	r17,r3
   81810:	0005883a 	mov	r2,zero
   81814:	00cff834 	movhi	r3,16352
   81818:	9009883a 	mov	r4,r18
   8181c:	980b883a 	mov	r5,r19
   81820:	180f883a 	mov	r7,r3
   81824:	100d883a 	mov	r6,r2
   81828:	00836400 	call	83640 <__muldf3>
   8182c:	980b883a 	mov	r5,r19
   81830:	880f883a 	mov	r7,r17
   81834:	9009883a 	mov	r4,r18
   81838:	800d883a 	mov	r6,r16
   8183c:	1025883a 	mov	r18,r2
   81840:	1827883a 	mov	r19,r3
   81844:	00836400 	call	83640 <__muldf3>
   81848:	d9c00517 	ldw	r7,20(sp)
   8184c:	d9800417 	ldw	r6,16(sp)
   81850:	a80b883a 	mov	r5,r21
   81854:	a009883a 	mov	r4,r20
   81858:	1021883a 	mov	r16,r2
   8185c:	1823883a 	mov	r17,r3
   81860:	00836400 	call	83640 <__muldf3>
   81864:	180f883a 	mov	r7,r3
   81868:	880b883a 	mov	r5,r17
   8186c:	8009883a 	mov	r4,r16
   81870:	100d883a 	mov	r6,r2
   81874:	008354c0 	call	8354c <__subdf3>
   81878:	180f883a 	mov	r7,r3
   8187c:	980b883a 	mov	r5,r19
   81880:	9009883a 	mov	r4,r18
   81884:	100d883a 	mov	r6,r2
   81888:	008354c0 	call	8354c <__subdf3>
   8188c:	0011883a 	mov	r8,zero
   81890:	024ffc34 	movhi	r9,16368
   81894:	480b883a 	mov	r5,r9
   81898:	180f883a 	mov	r7,r3
   8189c:	4009883a 	mov	r4,r8
   818a0:	100d883a 	mov	r6,r2
   818a4:	008354c0 	call	8354c <__subdf3>
   818a8:	100d883a 	mov	r6,r2
   818ac:	180f883a 	mov	r7,r3
   818b0:	3005883a 	mov	r2,r6
   818b4:	3807883a 	mov	r3,r7
   818b8:	dfc00e17 	ldw	ra,56(sp)
   818bc:	ddc00d17 	ldw	r23,52(sp)
   818c0:	dd800c17 	ldw	r22,48(sp)
   818c4:	dd400b17 	ldw	r21,44(sp)
   818c8:	dd000a17 	ldw	r20,40(sp)
   818cc:	dcc00917 	ldw	r19,36(sp)
   818d0:	dc800817 	ldw	r18,32(sp)
   818d4:	dc400717 	ldw	r17,28(sp)
   818d8:	dc000617 	ldw	r16,24(sp)
   818dc:	dec00f04 	addi	sp,sp,60
   818e0:	f800283a 	ret
   818e4:	280f883a 	mov	r7,r5
   818e8:	a009883a 	mov	r4,r20
   818ec:	a00d883a 	mov	r6,r20
   818f0:	00836400 	call	83640 <__muldf3>
   818f4:	1021883a 	mov	r16,r2
   818f8:	1823883a 	mov	r17,r3
   818fc:	1025883a 	mov	r18,r2
   81900:	1827883a 	mov	r19,r3
   81904:	00afa234 	movhi	r2,48776
   81908:	108e3504 	addi	r2,r2,14548
   8190c:	00ef6a74 	movhi	r3,48553
   81910:	18feba44 	addi	r3,r3,-1303
   81914:	8009883a 	mov	r4,r16
   81918:	880b883a 	mov	r5,r17
   8191c:	180f883a 	mov	r7,r3
   81920:	100d883a 	mov	r6,r2
   81924:	00836400 	call	83640 <__muldf3>
   81928:	022f6d74 	movhi	r8,48565
   8192c:	422c7104 	addi	r8,r8,-20028
   81930:	024f88b4 	movhi	r9,15906
   81934:	4a7ba784 	addi	r9,r9,-4450
   81938:	480f883a 	mov	r7,r9
   8193c:	400d883a 	mov	r6,r8
   81940:	180b883a 	mov	r5,r3
   81944:	1009883a 	mov	r4,r2
   81948:	00835cc0 	call	835cc <__adddf3>
   8194c:	180f883a 	mov	r7,r3
   81950:	8009883a 	mov	r4,r16
   81954:	880b883a 	mov	r5,r17
   81958:	100d883a 	mov	r6,r2
   8195c:	00836400 	call	83640 <__muldf3>
   81960:	02202734 	movhi	r8,32924
   81964:	4214ab44 	addi	r8,r8,21165
   81968:	024fa4b4 	movhi	r9,16018
   8196c:	4a5f93c4 	addi	r9,r9,32335
   81970:	480f883a 	mov	r7,r9
   81974:	400d883a 	mov	r6,r8
   81978:	180b883a 	mov	r5,r3
   8197c:	1009883a 	mov	r4,r2
   81980:	008354c0 	call	8354c <__subdf3>
   81984:	180f883a 	mov	r7,r3
   81988:	8009883a 	mov	r4,r16
   8198c:	880b883a 	mov	r5,r17
   81990:	100d883a 	mov	r6,r2
   81994:	00836400 	call	83640 <__muldf3>
   81998:	020672f4 	movhi	r8,6603
   8199c:	42056404 	addi	r8,r8,5520
   819a0:	024fbeb4 	movhi	r9,16122
   819a4:	4a406804 	addi	r9,r9,416
   819a8:	480f883a 	mov	r7,r9
   819ac:	400d883a 	mov	r6,r8
   819b0:	180b883a 	mov	r5,r3
   819b4:	1009883a 	mov	r4,r2
   819b8:	00835cc0 	call	835cc <__adddf3>
   819bc:	180f883a 	mov	r7,r3
   819c0:	8009883a 	mov	r4,r16
   819c4:	880b883a 	mov	r5,r17
   819c8:	100d883a 	mov	r6,r2
   819cc:	00836400 	call	83640 <__muldf3>
   819d0:	0205b074 	movhi	r8,5825
   819d4:	42145dc4 	addi	r8,r8,20855
   819d8:	024fd5f4 	movhi	r9,16215
   819dc:	4a705b04 	addi	r9,r9,-16020
   819e0:	480f883a 	mov	r7,r9
   819e4:	400d883a 	mov	r6,r8
   819e8:	180b883a 	mov	r5,r3
   819ec:	1009883a 	mov	r4,r2
   819f0:	008354c0 	call	8354c <__subdf3>
   819f4:	180f883a 	mov	r7,r3
   819f8:	8009883a 	mov	r4,r16
   819fc:	880b883a 	mov	r5,r17
   81a00:	100d883a 	mov	r6,r2
   81a04:	00836400 	call	83640 <__muldf3>
   81a08:	02155574 	movhi	r8,21845
   81a0c:	42155304 	addi	r8,r8,21836
   81a10:	024fe974 	movhi	r9,16293
   81a14:	4a555544 	addi	r9,r9,21845
   81a18:	480f883a 	mov	r7,r9
   81a1c:	400d883a 	mov	r6,r8
   81a20:	180b883a 	mov	r5,r3
   81a24:	1009883a 	mov	r4,r2
   81a28:	00835cc0 	call	835cc <__adddf3>
   81a2c:	180f883a 	mov	r7,r3
   81a30:	880b883a 	mov	r5,r17
   81a34:	8009883a 	mov	r4,r16
   81a38:	100d883a 	mov	r6,r2
   81a3c:	00836400 	call	83640 <__muldf3>
   81a40:	1021883a 	mov	r16,r2
   81a44:	008ff4f4 	movhi	r2,16339
   81a48:	108ccc84 	addi	r2,r2,13106
   81a4c:	1823883a 	mov	r17,r3
   81a50:	15bf6f0e 	bge	r2,r22,81810 <__kernel_cos+0x1d4>
   81a54:	008ffa74 	movhi	r2,16361
   81a58:	1580320e 	bge	r2,r22,81b24 <__kernel_cos+0x4e8>
   81a5c:	0005883a 	mov	r2,zero
   81a60:	010ff9f4 	movhi	r4,16359
   81a64:	002d883a 	mov	r22,zero
   81a68:	d8800015 	stw	r2,0(sp)
   81a6c:	05cff4b4 	movhi	r23,16338
   81a70:	d9000115 	stw	r4,4(sp)
   81a74:	0005883a 	mov	r2,zero
   81a78:	00cff834 	movhi	r3,16352
   81a7c:	9009883a 	mov	r4,r18
   81a80:	980b883a 	mov	r5,r19
   81a84:	180f883a 	mov	r7,r3
   81a88:	100d883a 	mov	r6,r2
   81a8c:	00836400 	call	83640 <__muldf3>
   81a90:	180b883a 	mov	r5,r3
   81a94:	b80f883a 	mov	r7,r23
   81a98:	1009883a 	mov	r4,r2
   81a9c:	b00d883a 	mov	r6,r22
   81aa0:	008354c0 	call	8354c <__subdf3>
   81aa4:	980b883a 	mov	r5,r19
   81aa8:	880f883a 	mov	r7,r17
   81aac:	9009883a 	mov	r4,r18
   81ab0:	800d883a 	mov	r6,r16
   81ab4:	1025883a 	mov	r18,r2
   81ab8:	1827883a 	mov	r19,r3
   81abc:	00836400 	call	83640 <__muldf3>
   81ac0:	d9c00517 	ldw	r7,20(sp)
   81ac4:	d9800417 	ldw	r6,16(sp)
   81ac8:	a80b883a 	mov	r5,r21
   81acc:	a009883a 	mov	r4,r20
   81ad0:	1021883a 	mov	r16,r2
   81ad4:	1823883a 	mov	r17,r3
   81ad8:	00836400 	call	83640 <__muldf3>
   81adc:	180f883a 	mov	r7,r3
   81ae0:	880b883a 	mov	r5,r17
   81ae4:	8009883a 	mov	r4,r16
   81ae8:	100d883a 	mov	r6,r2
   81aec:	008354c0 	call	8354c <__subdf3>
   81af0:	180f883a 	mov	r7,r3
   81af4:	980b883a 	mov	r5,r19
   81af8:	9009883a 	mov	r4,r18
   81afc:	100d883a 	mov	r6,r2
   81b00:	008354c0 	call	8354c <__subdf3>
   81b04:	d9400117 	ldw	r5,4(sp)
   81b08:	d9000017 	ldw	r4,0(sp)
   81b0c:	180f883a 	mov	r7,r3
   81b10:	100d883a 	mov	r6,r2
   81b14:	003f6306 	br	818a4 <__kernel_cos+0x268>
   81b18:	000d883a 	mov	r6,zero
   81b1c:	01cffc34 	movhi	r7,16368
   81b20:	003f6306 	br	818b0 <__kernel_cos+0x274>
   81b24:	00bff834 	movhi	r2,65504
   81b28:	b0ad883a 	add	r22,r22,r2
   81b2c:	dd800315 	stw	r22,12(sp)
   81b30:	d9000317 	ldw	r4,12(sp)
   81b34:	0005883a 	mov	r2,zero
   81b38:	00cffc34 	movhi	r3,16368
   81b3c:	002d883a 	mov	r22,zero
   81b40:	200f883a 	mov	r7,r4
   81b44:	202f883a 	mov	r23,r4
   81b48:	180b883a 	mov	r5,r3
   81b4c:	1009883a 	mov	r4,r2
   81b50:	b00d883a 	mov	r6,r22
   81b54:	d8800215 	stw	r2,8(sp)
   81b58:	008354c0 	call	8354c <__subdf3>
   81b5c:	d8800015 	stw	r2,0(sp)
   81b60:	d8c00115 	stw	r3,4(sp)
   81b64:	003fc306 	br	81a74 <__kernel_cos+0x438>

00081b68 <__kernel_rem_pio2>:
   81b68:	deff5304 	addi	sp,sp,-692
   81b6c:	d880ad17 	ldw	r2,692(sp)
   81b70:	d9009615 	stw	r4,600(sp)
   81b74:	d9409715 	stw	r5,604(sp)
   81b78:	1087883a 	add	r3,r2,r2
   81b7c:	18c7883a 	add	r3,r3,r3
   81b80:	00800274 	movhi	r2,9
   81b84:	10bcb404 	addi	r2,r2,-3376
   81b88:	1887883a 	add	r3,r3,r2
   81b8c:	18c00017 	ldw	r3,0(r3)
   81b90:	313fff44 	addi	r4,r6,-3
   81b94:	01400604 	movi	r5,24
   81b98:	df00ab15 	stw	fp,684(sp)
   81b9c:	dc00a315 	stw	r16,652(sp)
   81ba0:	d8c09515 	stw	r3,596(sp)
   81ba4:	dfc0ac15 	stw	ra,688(sp)
   81ba8:	ddc0aa15 	stw	r23,680(sp)
   81bac:	dd80a915 	stw	r22,676(sp)
   81bb0:	dd40a815 	stw	r21,672(sp)
   81bb4:	dd00a715 	stw	r20,668(sp)
   81bb8:	dcc0a615 	stw	r19,664(sp)
   81bbc:	dc80a515 	stw	r18,660(sp)
   81bc0:	dc40a415 	stw	r17,656(sp)
   81bc4:	3021883a 	mov	r16,r6
   81bc8:	d9c09815 	stw	r7,608(sp)
   81bcc:	0083de80 	call	83de8 <__divsi3>
   81bd0:	d8c09817 	ldw	r3,608(sp)
   81bd4:	d8808c15 	stw	r2,560(sp)
   81bd8:	1f3fffc4 	addi	fp,r3,-1
   81bdc:	10031816 	blt	r2,zero,82840 <__kernel_rem_pio2+0xcd8>
   81be0:	d9008c17 	ldw	r4,560(sp)
   81be4:	d9409517 	ldw	r5,596(sp)
   81be8:	20bffa24 	muli	r2,r4,-24
   81bec:	2f07883a 	add	r3,r5,fp
   81bf0:	8085883a 	add	r2,r16,r2
   81bf4:	10bffa04 	addi	r2,r2,-24
   81bf8:	d8809315 	stw	r2,588(sp)
   81bfc:	18001516 	blt	r3,zero,81c54 <__kernel_rem_pio2+0xec>
   81c00:	2721c83a 	sub	r16,r4,fp
   81c04:	d980ae17 	ldw	r6,696(sp)
   81c08:	8405883a 	add	r2,r16,r16
   81c0c:	1085883a 	add	r2,r2,r2
   81c10:	30a3883a 	add	r17,r6,r2
   81c14:	80e7883a 	add	r19,r16,r3
   81c18:	dc801404 	addi	r18,sp,80
   81c1c:	00000106 	br	81c24 <__kernel_rem_pio2+0xbc>
   81c20:	84000044 	addi	r16,r16,1
   81c24:	0009883a 	mov	r4,zero
   81c28:	000b883a 	mov	r5,zero
   81c2c:	80000416 	blt	r16,zero,81c40 <__kernel_rem_pio2+0xd8>
   81c30:	89000017 	ldw	r4,0(r17)
   81c34:	0083b9c0 	call	83b9c <__floatsidf>
   81c38:	1009883a 	mov	r4,r2
   81c3c:	180b883a 	mov	r5,r3
   81c40:	91400115 	stw	r5,4(r18)
   81c44:	91000015 	stw	r4,0(r18)
   81c48:	8c400104 	addi	r17,r17,4
   81c4c:	94800204 	addi	r18,r18,8
   81c50:	84fff31e 	bne	r16,r19,81c20 <__kernel_rem_pio2+0xb8>
   81c54:	d9c09517 	ldw	r7,596(sp)
   81c58:	38002416 	blt	r7,zero,81cec <__kernel_rem_pio2+0x184>
   81c5c:	da809817 	ldw	r10,608(sp)
   81c60:	e029883a 	mov	r20,fp
   81c64:	dd406404 	addi	r21,sp,400
   81c68:	3aaf883a 	add	r23,r7,r10
   81c6c:	e02c403a 	cmpge	r22,fp,zero
   81c70:	b0023e26 	beq	r22,zero,8256c <__kernel_rem_pio2+0xa04>
   81c74:	dcc09617 	ldw	r19,600(sp)
   81c78:	0021883a 	mov	r16,zero
   81c7c:	0025883a 	mov	r18,zero
   81c80:	0023883a 	mov	r17,zero
   81c84:	a489c83a 	sub	r4,r20,r18
   81c88:	200890fa 	slli	r4,r4,3
   81c8c:	99800017 	ldw	r6,0(r19)
   81c90:	99c00117 	ldw	r7,4(r19)
   81c94:	26c9883a 	add	r4,r4,sp
   81c98:	20c01517 	ldw	r3,84(r4)
   81c9c:	20801417 	ldw	r2,80(r4)
   81ca0:	94800044 	addi	r18,r18,1
   81ca4:	180b883a 	mov	r5,r3
   81ca8:	1009883a 	mov	r4,r2
   81cac:	00836400 	call	83640 <__muldf3>
   81cb0:	180f883a 	mov	r7,r3
   81cb4:	880b883a 	mov	r5,r17
   81cb8:	8009883a 	mov	r4,r16
   81cbc:	100d883a 	mov	r6,r2
   81cc0:	00835cc0 	call	835cc <__adddf3>
   81cc4:	1021883a 	mov	r16,r2
   81cc8:	d8809817 	ldw	r2,608(sp)
   81ccc:	9cc00204 	addi	r19,r19,8
   81cd0:	1823883a 	mov	r17,r3
   81cd4:	14bfeb1e 	bne	r2,r18,81c84 <__kernel_rem_pio2+0x11c>
   81cd8:	a5000044 	addi	r20,r20,1
   81cdc:	ac400115 	stw	r17,4(r21)
   81ce0:	ac000015 	stw	r16,0(r21)
   81ce4:	ad400204 	addi	r21,r21,8
   81ce8:	a5ffe11e 	bne	r20,r23,81c70 <__kernel_rem_pio2+0x108>
   81cec:	d8c09517 	ldw	r3,596(sp)
   81cf0:	d9409317 	ldw	r5,588(sp)
   81cf4:	e038403a 	cmpge	fp,fp,zero
   81cf8:	d8c08d15 	stw	r3,564(sp)
   81cfc:	d9008d17 	ldw	r4,564(sp)
   81d00:	18c5883a 	add	r2,r3,r3
   81d04:	10c7883a 	add	r3,r2,r3
   81d08:	1907883a 	add	r3,r3,r4
   81d0c:	1085883a 	add	r2,r2,r2
   81d10:	16c5883a 	add	r2,r2,sp
   81d14:	1ec7883a 	add	r3,r3,sp
   81d18:	29400050 	cmplti	r5,r5,1
   81d1c:	df00a215 	stw	fp,648(sp)
   81d20:	d8809915 	stw	r2,612(sp)
   81d24:	d8c0a115 	stw	r3,644(sp)
   81d28:	d940a015 	stw	r5,640(sp)
   81d2c:	d9808d17 	ldw	r6,564(sp)
   81d30:	300490fa 	slli	r2,r6,3
   81d34:	16c5883a 	add	r2,r2,sp
   81d38:	15006417 	ldw	r20,400(r2)
   81d3c:	15406517 	ldw	r21,404(r2)
   81d40:	01802e0e 	bge	zero,r6,81dfc <__kernel_rem_pio2+0x294>
   81d44:	102d883a 	mov	r22,r2
   81d48:	302f883a 	mov	r23,r6
   81d4c:	d839883a 	mov	fp,sp
   81d50:	0005883a 	mov	r2,zero
   81d54:	00cf9c34 	movhi	r3,15984
   81d58:	180f883a 	mov	r7,r3
   81d5c:	100d883a 	mov	r6,r2
   81d60:	a009883a 	mov	r4,r20
   81d64:	a80b883a 	mov	r5,r21
   81d68:	00836400 	call	83640 <__muldf3>
   81d6c:	180b883a 	mov	r5,r3
   81d70:	1009883a 	mov	r4,r2
   81d74:	0083c940 	call	83c94 <__fixdfsi>
   81d78:	1009883a 	mov	r4,r2
   81d7c:	0083b9c0 	call	83b9c <__floatsidf>
   81d80:	1021883a 	mov	r16,r2
   81d84:	1823883a 	mov	r17,r3
   81d88:	0005883a 	mov	r2,zero
   81d8c:	00f05c34 	movhi	r3,49520
   81d90:	180f883a 	mov	r7,r3
   81d94:	8009883a 	mov	r4,r16
   81d98:	880b883a 	mov	r5,r17
   81d9c:	100d883a 	mov	r6,r2
   81da0:	00836400 	call	83640 <__muldf3>
   81da4:	180b883a 	mov	r5,r3
   81da8:	a80f883a 	mov	r7,r21
   81dac:	a00d883a 	mov	r6,r20
   81db0:	1009883a 	mov	r4,r2
   81db4:	00835cc0 	call	835cc <__adddf3>
   81db8:	180b883a 	mov	r5,r3
   81dbc:	1009883a 	mov	r4,r2
   81dc0:	0083c940 	call	83c94 <__fixdfsi>
   81dc4:	e0800015 	stw	r2,0(fp)
   81dc8:	b5bffe04 	addi	r22,r22,-8
   81dcc:	b0806417 	ldw	r2,400(r22)
   81dd0:	b0c06517 	ldw	r3,404(r22)
   81dd4:	8009883a 	mov	r4,r16
   81dd8:	880b883a 	mov	r5,r17
   81ddc:	180f883a 	mov	r7,r3
   81de0:	100d883a 	mov	r6,r2
   81de4:	00835cc0 	call	835cc <__adddf3>
   81de8:	bdffffc4 	addi	r23,r23,-1
   81dec:	e7000104 	addi	fp,fp,4
   81df0:	1029883a 	mov	r20,r2
   81df4:	182b883a 	mov	r21,r3
   81df8:	b83fd51e 	bne	r23,zero,81d50 <__kernel_rem_pio2+0x1e8>
   81dfc:	d9809317 	ldw	r6,588(sp)
   81e00:	a80b883a 	mov	r5,r21
   81e04:	a009883a 	mov	r4,r20
   81e08:	0082f380 	call	82f38 <scalbn>
   81e0c:	0009883a 	mov	r4,zero
   81e10:	014ff034 	movhi	r5,16320
   81e14:	280f883a 	mov	r7,r5
   81e18:	200d883a 	mov	r6,r4
   81e1c:	180b883a 	mov	r5,r3
   81e20:	1009883a 	mov	r4,r2
   81e24:	1021883a 	mov	r16,r2
   81e28:	1823883a 	mov	r17,r3
   81e2c:	00836400 	call	83640 <__muldf3>
   81e30:	180b883a 	mov	r5,r3
   81e34:	1009883a 	mov	r4,r2
   81e38:	0082d140 	call	82d14 <floor>
   81e3c:	0011883a 	mov	r8,zero
   81e40:	02700834 	movhi	r9,49184
   81e44:	480f883a 	mov	r7,r9
   81e48:	400d883a 	mov	r6,r8
   81e4c:	180b883a 	mov	r5,r3
   81e50:	1009883a 	mov	r4,r2
   81e54:	00836400 	call	83640 <__muldf3>
   81e58:	180f883a 	mov	r7,r3
   81e5c:	100d883a 	mov	r6,r2
   81e60:	880b883a 	mov	r5,r17
   81e64:	8009883a 	mov	r4,r16
   81e68:	00835cc0 	call	835cc <__adddf3>
   81e6c:	180b883a 	mov	r5,r3
   81e70:	1009883a 	mov	r4,r2
   81e74:	1823883a 	mov	r17,r3
   81e78:	1021883a 	mov	r16,r2
   81e7c:	0083c940 	call	83c94 <__fixdfsi>
   81e80:	1009883a 	mov	r4,r2
   81e84:	d8809415 	stw	r2,592(sp)
   81e88:	0083b9c0 	call	83b9c <__floatsidf>
   81e8c:	880b883a 	mov	r5,r17
   81e90:	8009883a 	mov	r4,r16
   81e94:	180f883a 	mov	r7,r3
   81e98:	100d883a 	mov	r6,r2
   81e9c:	008354c0 	call	8354c <__subdf3>
   81ea0:	d9c0a017 	ldw	r7,640(sp)
   81ea4:	180d883a 	mov	r6,r3
   81ea8:	1021883a 	mov	r16,r2
   81eac:	1823883a 	mov	r17,r3
   81eb0:	38017d1e 	bne	r7,zero,824a8 <__kernel_rem_pio2+0x940>
   81eb4:	da808d17 	ldw	r10,564(sp)
   81eb8:	d9009317 	ldw	r4,588(sp)
   81ebc:	00c00604 	movi	r3,24
   81ec0:	50bfffc4 	addi	r2,r10,-1
   81ec4:	1085883a 	add	r2,r2,r2
   81ec8:	1085883a 	add	r2,r2,r2
   81ecc:	16c5883a 	add	r2,r2,sp
   81ed0:	11400017 	ldw	r5,0(r2)
   81ed4:	1907c83a 	sub	r3,r3,r4
   81ed8:	d9c09317 	ldw	r7,588(sp)
   81edc:	28cdd83a 	sra	r6,r5,r3
   81ee0:	010005c4 	movi	r4,23
   81ee4:	da809417 	ldw	r10,592(sp)
   81ee8:	30c6983a 	sll	r3,r6,r3
   81eec:	21c9c83a 	sub	r4,r4,r7
   81ef0:	5195883a 	add	r10,r10,r6
   81ef4:	28cbc83a 	sub	r5,r5,r3
   81ef8:	2909d83a 	sra	r4,r5,r4
   81efc:	da809415 	stw	r10,592(sp)
   81f00:	11400015 	stw	r5,0(r2)
   81f04:	d9009215 	stw	r4,584(sp)
   81f08:	d9409217 	ldw	r5,584(sp)
   81f0c:	0140270e 	bge	zero,r5,81fac <__kernel_rem_pio2+0x444>
   81f10:	d9809417 	ldw	r6,592(sp)
   81f14:	d9c08d17 	ldw	r7,564(sp)
   81f18:	31800044 	addi	r6,r6,1
   81f1c:	d9809415 	stw	r6,592(sp)
   81f20:	01c1a50e 	bge	zero,r7,825b8 <__kernel_rem_pio2+0xa50>
   81f24:	002d883a 	mov	r22,zero
   81f28:	000b883a 	mov	r5,zero
   81f2c:	d809883a 	mov	r4,sp
   81f30:	01c04034 	movhi	r7,256
   81f34:	01804034 	movhi	r6,256
   81f38:	31bfffc4 	addi	r6,r6,-1
   81f3c:	00000806 	br	81f60 <__kernel_rem_pio2+0x3f8>
   81f40:	38c5c83a 	sub	r2,r7,r3
   81f44:	18000226 	beq	r3,zero,81f50 <__kernel_rem_pio2+0x3e8>
   81f48:	05800044 	movi	r22,1
   81f4c:	20800015 	stw	r2,0(r4)
   81f50:	da808d17 	ldw	r10,564(sp)
   81f54:	29400044 	addi	r5,r5,1
   81f58:	21000104 	addi	r4,r4,4
   81f5c:	51400926 	beq	r10,r5,81f84 <__kernel_rem_pio2+0x41c>
   81f60:	b004c03a 	cmpne	r2,r22,zero
   81f64:	20c00017 	ldw	r3,0(r4)
   81f68:	103ff526 	beq	r2,zero,81f40 <__kernel_rem_pio2+0x3d8>
   81f6c:	da808d17 	ldw	r10,564(sp)
   81f70:	30c5c83a 	sub	r2,r6,r3
   81f74:	29400044 	addi	r5,r5,1
   81f78:	20800015 	stw	r2,0(r4)
   81f7c:	21000104 	addi	r4,r4,4
   81f80:	517ff71e 	bne	r10,r5,81f60 <__kernel_rem_pio2+0x3f8>
   81f84:	d880a017 	ldw	r2,640(sp)
   81f88:	1000051e 	bne	r2,zero,81fa0 <__kernel_rem_pio2+0x438>
   81f8c:	d8c09317 	ldw	r3,588(sp)
   81f90:	00800044 	movi	r2,1
   81f94:	18814e26 	beq	r3,r2,824d0 <__kernel_rem_pio2+0x968>
   81f98:	00800084 	movi	r2,2
   81f9c:	18815826 	beq	r3,r2,82500 <__kernel_rem_pio2+0x998>
   81fa0:	d9c09217 	ldw	r7,584(sp)
   81fa4:	00800084 	movi	r2,2
   81fa8:	38806926 	beq	r7,r2,82150 <__kernel_rem_pio2+0x5e8>
   81fac:	000d883a 	mov	r6,zero
   81fb0:	000f883a 	mov	r7,zero
   81fb4:	8009883a 	mov	r4,r16
   81fb8:	880b883a 	mov	r5,r17
   81fbc:	0083a040 	call	83a04 <__eqdf2>
   81fc0:	1000811e 	bne	r2,zero,821c8 <__kernel_rem_pio2+0x660>
   81fc4:	da808d17 	ldw	r10,564(sp)
   81fc8:	d8809517 	ldw	r2,596(sp)
   81fcc:	51bfffc4 	addi	r6,r10,-1
   81fd0:	30800c16 	blt	r6,r2,82004 <__kernel_rem_pio2+0x49c>
   81fd4:	3185883a 	add	r2,r6,r6
   81fd8:	1085883a 	add	r2,r2,r2
   81fdc:	16c9883a 	add	r4,r2,sp
   81fe0:	3007883a 	mov	r3,r6
   81fe4:	000b883a 	mov	r5,zero
   81fe8:	20800017 	ldw	r2,0(r4)
   81fec:	d9c09517 	ldw	r7,596(sp)
   81ff0:	18ffffc4 	addi	r3,r3,-1
   81ff4:	213fff04 	addi	r4,r4,-4
   81ff8:	288ab03a 	or	r5,r5,r2
   81ffc:	19fffa0e 	bge	r3,r7,81fe8 <__kernel_rem_pio2+0x480>
   82000:	2800791e 	bne	r5,zero,821e8 <__kernel_rem_pio2+0x680>
   82004:	da809917 	ldw	r10,612(sp)
   82008:	50bfff17 	ldw	r2,-4(r10)
   8200c:	1001511e 	bne	r2,zero,82554 <__kernel_rem_pio2+0x9ec>
   82010:	d880a117 	ldw	r2,644(sp)
   82014:	01000044 	movi	r4,1
   82018:	10ffff04 	addi	r3,r2,-4
   8201c:	18ffff04 	addi	r3,r3,-4
   82020:	18800017 	ldw	r2,0(r3)
   82024:	21000044 	addi	r4,r4,1
   82028:	103ffc26 	beq	r2,zero,8201c <__kernel_rem_pio2+0x4b4>
   8202c:	d8c08d17 	ldw	r3,564(sp)
   82030:	192f883a 	add	r23,r3,r4
   82034:	1f000044 	addi	fp,r3,1
   82038:	bf00020e 	bge	r23,fp,82044 <__kernel_rem_pio2+0x4dc>
   8203c:	ddc08d15 	stw	r23,564(sp)
   82040:	003f3a06 	br	81d2c <__kernel_rem_pio2+0x1c4>
   82044:	d9408c17 	ldw	r5,560(sp)
   82048:	d9009817 	ldw	r4,608(sp)
   8204c:	da80ae17 	ldw	r10,696(sp)
   82050:	1945883a 	add	r2,r3,r5
   82054:	190f883a 	add	r7,r3,r4
   82058:	1085883a 	add	r2,r2,r2
   8205c:	380a90fa 	slli	r5,r7,3
   82060:	e00c90fa 	slli	r6,fp,3
   82064:	1085883a 	add	r2,r2,r2
   82068:	5085883a 	add	r2,r10,r2
   8206c:	d8c01404 	addi	r3,sp,80
   82070:	d9006404 	addi	r4,sp,400
   82074:	10800104 	addi	r2,r2,4
   82078:	196b883a 	add	r21,r3,r5
   8207c:	21a1883a 	add	r16,r4,r6
   82080:	d8809115 	stw	r2,580(sp)
   82084:	d9c09015 	stw	r7,576(sp)
   82088:	d8809117 	ldw	r2,580(sp)
   8208c:	11000017 	ldw	r4,0(r2)
   82090:	0083b9c0 	call	83b9c <__floatsidf>
   82094:	a8c00115 	stw	r3,4(r21)
   82098:	d8c0a217 	ldw	r3,648(sp)
   8209c:	a8800015 	stw	r2,0(r21)
   820a0:	18002826 	beq	r3,zero,82144 <__kernel_rem_pio2+0x5dc>
   820a4:	d9009017 	ldw	r4,576(sp)
   820a8:	dd009617 	ldw	r20,600(sp)
   820ac:	0023883a 	mov	r17,zero
   820b0:	200490fa 	slli	r2,r4,3
   820b4:	002d883a 	mov	r22,zero
   820b8:	0025883a 	mov	r18,zero
   820bc:	16e7883a 	add	r19,r2,sp
   820c0:	98801417 	ldw	r2,80(r19)
   820c4:	98c01517 	ldw	r3,84(r19)
   820c8:	a1800017 	ldw	r6,0(r20)
   820cc:	a1c00117 	ldw	r7,4(r20)
   820d0:	180b883a 	mov	r5,r3
   820d4:	1009883a 	mov	r4,r2
   820d8:	00836400 	call	83640 <__muldf3>
   820dc:	180f883a 	mov	r7,r3
   820e0:	900b883a 	mov	r5,r18
   820e4:	8809883a 	mov	r4,r17
   820e8:	100d883a 	mov	r6,r2
   820ec:	00835cc0 	call	835cc <__adddf3>
   820f0:	d9409817 	ldw	r5,608(sp)
   820f4:	b5800044 	addi	r22,r22,1
   820f8:	9cfffe04 	addi	r19,r19,-8
   820fc:	1023883a 	mov	r17,r2
   82100:	1825883a 	mov	r18,r3
   82104:	a5000204 	addi	r20,r20,8
   82108:	2dbfed1e 	bne	r5,r22,820c0 <__kernel_rem_pio2+0x558>
   8210c:	d9809117 	ldw	r6,580(sp)
   82110:	d9c09017 	ldw	r7,576(sp)
   82114:	e7000044 	addi	fp,fp,1
   82118:	31800104 	addi	r6,r6,4
   8211c:	39c00044 	addi	r7,r7,1
   82120:	84800115 	stw	r18,4(r16)
   82124:	84400015 	stw	r17,0(r16)
   82128:	d9809115 	stw	r6,580(sp)
   8212c:	ad400204 	addi	r21,r21,8
   82130:	84000204 	addi	r16,r16,8
   82134:	d9c09015 	stw	r7,576(sp)
   82138:	bf3fd30e 	bge	r23,fp,82088 <__kernel_rem_pio2+0x520>
   8213c:	ddc08d15 	stw	r23,564(sp)
   82140:	003efa06 	br	81d2c <__kernel_rem_pio2+0x1c4>
   82144:	0023883a 	mov	r17,zero
   82148:	0025883a 	mov	r18,zero
   8214c:	003fef06 	br	8210c <__kernel_rem_pio2+0x5a4>
   82150:	0029883a 	mov	r20,zero
   82154:	054ffc34 	movhi	r21,16368
   82158:	880f883a 	mov	r7,r17
   8215c:	800d883a 	mov	r6,r16
   82160:	a009883a 	mov	r4,r20
   82164:	a80b883a 	mov	r5,r21
   82168:	008354c0 	call	8354c <__subdf3>
   8216c:	1025883a 	mov	r18,r2
   82170:	b005003a 	cmpeq	r2,r22,zero
   82174:	1827883a 	mov	r19,r3
   82178:	9021883a 	mov	r16,r18
   8217c:	1823883a 	mov	r17,r3
   82180:	103f8a1e 	bne	r2,zero,81fac <__kernel_rem_pio2+0x444>
   82184:	d9809317 	ldw	r6,588(sp)
   82188:	0009883a 	mov	r4,zero
   8218c:	a80b883a 	mov	r5,r21
   82190:	0082f380 	call	82f38 <scalbn>
   82194:	180f883a 	mov	r7,r3
   82198:	9009883a 	mov	r4,r18
   8219c:	980b883a 	mov	r5,r19
   821a0:	100d883a 	mov	r6,r2
   821a4:	008354c0 	call	8354c <__subdf3>
   821a8:	1021883a 	mov	r16,r2
   821ac:	1823883a 	mov	r17,r3
   821b0:	000d883a 	mov	r6,zero
   821b4:	000f883a 	mov	r7,zero
   821b8:	8009883a 	mov	r4,r16
   821bc:	880b883a 	mov	r5,r17
   821c0:	0083a040 	call	83a04 <__eqdf2>
   821c4:	103f7f26 	beq	r2,zero,81fc4 <__kernel_rem_pio2+0x45c>
   821c8:	000d883a 	mov	r6,zero
   821cc:	000f883a 	mov	r7,zero
   821d0:	8009883a 	mov	r4,r16
   821d4:	880b883a 	mov	r5,r17
   821d8:	0083a040 	call	83a04 <__eqdf2>
   821dc:	10019a1e 	bne	r2,zero,82848 <__kernel_rem_pio2+0xce0>
   821e0:	da808d17 	ldw	r10,564(sp)
   821e4:	51bfffc4 	addi	r6,r10,-1
   821e8:	3185883a 	add	r2,r6,r6
   821ec:	1085883a 	add	r2,r2,r2
   821f0:	d9009317 	ldw	r4,588(sp)
   821f4:	16c5883a 	add	r2,r2,sp
   821f8:	10c00017 	ldw	r3,0(r2)
   821fc:	213ffa04 	addi	r4,r4,-24
   82200:	d9009315 	stw	r4,588(sp)
   82204:	1801d41e 	bne	r3,zero,82958 <__kernel_rem_pio2+0xdf0>
   82208:	d9808d15 	stw	r6,564(sp)
   8220c:	1007883a 	mov	r3,r2
   82210:	d9408d17 	ldw	r5,564(sp)
   82214:	d9809317 	ldw	r6,588(sp)
   82218:	18ffff04 	addi	r3,r3,-4
   8221c:	18800017 	ldw	r2,0(r3)
   82220:	297fffc4 	addi	r5,r5,-1
   82224:	31bffa04 	addi	r6,r6,-24
   82228:	d9408d15 	stw	r5,564(sp)
   8222c:	d9809315 	stw	r6,588(sp)
   82230:	103ff726 	beq	r2,zero,82210 <__kernel_rem_pio2+0x6a8>
   82234:	d9809317 	ldw	r6,588(sp)
   82238:	0005883a 	mov	r2,zero
   8223c:	00cffc34 	movhi	r3,16368
   82240:	180b883a 	mov	r5,r3
   82244:	1009883a 	mov	r4,r2
   82248:	0082f380 	call	82f38 <scalbn>
   8224c:	d9808d17 	ldw	r6,564(sp)
   82250:	1021883a 	mov	r16,r2
   82254:	1823883a 	mov	r17,r3
   82258:	30004616 	blt	r6,zero,82374 <__kernel_rem_pio2+0x80c>
   8225c:	300690fa 	slli	r3,r6,3
   82260:	3185883a 	add	r2,r6,r6
   82264:	1085883a 	add	r2,r2,r2
   82268:	16e9883a 	add	r20,r2,sp
   8226c:	1ee5883a 	add	r18,r3,sp
   82270:	3027883a 	mov	r19,r6
   82274:	057fffc4 	movi	r21,-1
   82278:	a1000017 	ldw	r4,0(r20)
   8227c:	9cffffc4 	addi	r19,r19,-1
   82280:	a53fff04 	addi	r20,r20,-4
   82284:	0083b9c0 	call	83b9c <__floatsidf>
   82288:	800d883a 	mov	r6,r16
   8228c:	880f883a 	mov	r7,r17
   82290:	180b883a 	mov	r5,r3
   82294:	1009883a 	mov	r4,r2
   82298:	00836400 	call	83640 <__muldf3>
   8229c:	0015883a 	mov	r10,zero
   822a0:	02cf9c34 	movhi	r11,15984
   822a4:	880b883a 	mov	r5,r17
   822a8:	8009883a 	mov	r4,r16
   822ac:	90c06515 	stw	r3,404(r18)
   822b0:	90806415 	stw	r2,400(r18)
   822b4:	580f883a 	mov	r7,r11
   822b8:	500d883a 	mov	r6,r10
   822bc:	00836400 	call	83640 <__muldf3>
   822c0:	1021883a 	mov	r16,r2
   822c4:	1823883a 	mov	r17,r3
   822c8:	94bffe04 	addi	r18,r18,-8
   822cc:	9d7fea1e 	bne	r19,r21,82278 <__kernel_rem_pio2+0x710>
   822d0:	d9c09517 	ldw	r7,596(sp)
   822d4:	dd808d17 	ldw	r22,564(sp)
   822d8:	002b883a 	mov	r21,zero
   822dc:	382e403a 	cmpge	r23,r7,zero
   822e0:	b800aa26 	beq	r23,zero,8258c <__kernel_rem_pio2+0xa24>
   822e4:	a800a916 	blt	r21,zero,8258c <__kernel_rem_pio2+0xa24>
   822e8:	b00690fa 	slli	r3,r22,3
   822ec:	d8806404 	addi	r2,sp,400
   822f0:	0021883a 	mov	r16,zero
   822f4:	10e9883a 	add	r20,r2,r3
   822f8:	0027883a 	mov	r19,zero
   822fc:	0023883a 	mov	r17,zero
   82300:	04800274 	movhi	r18,9
   82304:	94bcb804 	addi	r18,r18,-3360
   82308:	00000106 	br	82310 <__kernel_rem_pio2+0x7a8>
   8230c:	acc01116 	blt	r21,r19,82354 <__kernel_rem_pio2+0x7ec>
   82310:	91000017 	ldw	r4,0(r18)
   82314:	91400117 	ldw	r5,4(r18)
   82318:	a1800017 	ldw	r6,0(r20)
   8231c:	a1c00117 	ldw	r7,4(r20)
   82320:	9cc00044 	addi	r19,r19,1
   82324:	94800204 	addi	r18,r18,8
   82328:	00836400 	call	83640 <__muldf3>
   8232c:	180f883a 	mov	r7,r3
   82330:	880b883a 	mov	r5,r17
   82334:	8009883a 	mov	r4,r16
   82338:	100d883a 	mov	r6,r2
   8233c:	00835cc0 	call	835cc <__adddf3>
   82340:	da809517 	ldw	r10,596(sp)
   82344:	a5000204 	addi	r20,r20,8
   82348:	1021883a 	mov	r16,r2
   8234c:	1823883a 	mov	r17,r3
   82350:	54ffee0e 	bge	r10,r19,8230c <__kernel_rem_pio2+0x7a4>
   82354:	a80490fa 	slli	r2,r21,3
   82358:	b5bfffc4 	addi	r22,r22,-1
   8235c:	ad400044 	addi	r21,r21,1
   82360:	16c5883a 	add	r2,r2,sp
   82364:	14403d15 	stw	r17,244(r2)
   82368:	14003c15 	stw	r16,240(r2)
   8236c:	00bfffc4 	movi	r2,-1
   82370:	b0bfdb1e 	bne	r22,r2,822e0 <__kernel_rem_pio2+0x778>
   82374:	d8c0ad17 	ldw	r3,692(sp)
   82378:	00800084 	movi	r2,2
   8237c:	10c09316 	blt	r2,r3,825cc <__kernel_rem_pio2+0xa64>
   82380:	00c1120e 	bge	zero,r3,827cc <__kernel_rem_pio2+0xc64>
   82384:	d9808d17 	ldw	r6,564(sp)
   82388:	30018d16 	blt	r6,zero,829c0 <__kernel_rem_pio2+0xe58>
   8238c:	d8c08d17 	ldw	r3,564(sp)
   82390:	0011883a 	mov	r8,zero
   82394:	0013883a 	mov	r9,zero
   82398:	180490fa 	slli	r2,r3,3
   8239c:	1823883a 	mov	r17,r3
   823a0:	04bfffc4 	movi	r18,-1
   823a4:	16e1883a 	add	r16,r2,sp
   823a8:	80803c17 	ldw	r2,240(r16)
   823ac:	80c03d17 	ldw	r3,244(r16)
   823b0:	480b883a 	mov	r5,r9
   823b4:	4009883a 	mov	r4,r8
   823b8:	180f883a 	mov	r7,r3
   823bc:	100d883a 	mov	r6,r2
   823c0:	00835cc0 	call	835cc <__adddf3>
   823c4:	8c7fffc4 	addi	r17,r17,-1
   823c8:	843ffe04 	addi	r16,r16,-8
   823cc:	1011883a 	mov	r8,r2
   823d0:	1813883a 	mov	r9,r3
   823d4:	8cbff41e 	bne	r17,r18,823a8 <__kernel_rem_pio2+0x840>
   823d8:	d9009217 	ldw	r4,584(sp)
   823dc:	20015b1e 	bne	r4,zero,8294c <__kernel_rem_pio2+0xde4>
   823e0:	4009883a 	mov	r4,r8
   823e4:	480b883a 	mov	r5,r9
   823e8:	d9809717 	ldw	r6,604(sp)
   823ec:	d8803c17 	ldw	r2,240(sp)
   823f0:	480f883a 	mov	r7,r9
   823f4:	31400115 	stw	r5,4(r6)
   823f8:	31000015 	stw	r4,0(r6)
   823fc:	d8c03d17 	ldw	r3,244(sp)
   82400:	400d883a 	mov	r6,r8
   82404:	1009883a 	mov	r4,r2
   82408:	180b883a 	mov	r5,r3
   8240c:	008354c0 	call	8354c <__subdf3>
   82410:	d9c08d17 	ldw	r7,564(sp)
   82414:	1011883a 	mov	r8,r2
   82418:	1813883a 	mov	r9,r3
   8241c:	01c00d0e 	bge	zero,r7,82454 <__kernel_rem_pio2+0x8ec>
   82420:	0023883a 	mov	r17,zero
   82424:	dc003e04 	addi	r16,sp,248
   82428:	81800017 	ldw	r6,0(r16)
   8242c:	81c00117 	ldw	r7,4(r16)
   82430:	480b883a 	mov	r5,r9
   82434:	4009883a 	mov	r4,r8
   82438:	00835cc0 	call	835cc <__adddf3>
   8243c:	da808d17 	ldw	r10,564(sp)
   82440:	8c400044 	addi	r17,r17,1
   82444:	1011883a 	mov	r8,r2
   82448:	1813883a 	mov	r9,r3
   8244c:	84000204 	addi	r16,r16,8
   82450:	8abff51e 	bne	r17,r10,82428 <__kernel_rem_pio2+0x8c0>
   82454:	d8809217 	ldw	r2,584(sp)
   82458:	10000226 	beq	r2,zero,82464 <__kernel_rem_pio2+0x8fc>
   8245c:	48e0003c 	xorhi	r3,r9,32768
   82460:	1813883a 	mov	r9,r3
   82464:	d8c09717 	ldw	r3,604(sp)
   82468:	1a400315 	stw	r9,12(r3)
   8246c:	1a000215 	stw	r8,8(r3)
   82470:	d8c09417 	ldw	r3,592(sp)
   82474:	188001cc 	andi	r2,r3,7
   82478:	dfc0ac17 	ldw	ra,688(sp)
   8247c:	df00ab17 	ldw	fp,684(sp)
   82480:	ddc0aa17 	ldw	r23,680(sp)
   82484:	dd80a917 	ldw	r22,676(sp)
   82488:	dd40a817 	ldw	r21,672(sp)
   8248c:	dd00a717 	ldw	r20,668(sp)
   82490:	dcc0a617 	ldw	r19,664(sp)
   82494:	dc80a517 	ldw	r18,660(sp)
   82498:	dc40a417 	ldw	r17,656(sp)
   8249c:	dc00a317 	ldw	r16,652(sp)
   824a0:	dec0ad04 	addi	sp,sp,692
   824a4:	f800283a 	ret
   824a8:	d8809317 	ldw	r2,588(sp)
   824ac:	10001f1e 	bne	r2,zero,8252c <__kernel_rem_pio2+0x9c4>
   824b0:	d8c08d17 	ldw	r3,564(sp)
   824b4:	18c5883a 	add	r2,r3,r3
   824b8:	1085883a 	add	r2,r2,r2
   824bc:	16c5883a 	add	r2,r2,sp
   824c0:	10ffff17 	ldw	r3,-4(r2)
   824c4:	1807d5fa 	srai	r3,r3,23
   824c8:	d8c09215 	stw	r3,584(sp)
   824cc:	003e8e06 	br	81f08 <__kernel_rem_pio2+0x3a0>
   824d0:	d9008d17 	ldw	r4,564(sp)
   824d4:	d9409317 	ldw	r5,588(sp)
   824d8:	2145c83a 	sub	r2,r4,r5
   824dc:	1085883a 	add	r2,r2,r2
   824e0:	1085883a 	add	r2,r2,r2
   824e4:	16c5883a 	add	r2,r2,sp
   824e8:	10c00017 	ldw	r3,0(r2)
   824ec:	01002034 	movhi	r4,128
   824f0:	213fffc4 	addi	r4,r4,-1
   824f4:	1906703a 	and	r3,r3,r4
   824f8:	10c00015 	stw	r3,0(r2)
   824fc:	003ea806 	br	81fa0 <__kernel_rem_pio2+0x438>
   82500:	d9808d17 	ldw	r6,564(sp)
   82504:	01001034 	movhi	r4,64
   82508:	213fffc4 	addi	r4,r4,-1
   8250c:	30bfffc4 	addi	r2,r6,-1
   82510:	1085883a 	add	r2,r2,r2
   82514:	1085883a 	add	r2,r2,r2
   82518:	16c5883a 	add	r2,r2,sp
   8251c:	10c00017 	ldw	r3,0(r2)
   82520:	1906703a 	and	r3,r3,r4
   82524:	10c00015 	stw	r3,0(r2)
   82528:	003e9d06 	br	81fa0 <__kernel_rem_pio2+0x438>
   8252c:	0005883a 	mov	r2,zero
   82530:	00cff834 	movhi	r3,16352
   82534:	300b883a 	mov	r5,r6
   82538:	180f883a 	mov	r7,r3
   8253c:	8009883a 	mov	r4,r16
   82540:	100d883a 	mov	r6,r2
   82544:	0083b140 	call	83b14 <__gedf2>
   82548:	10001d0e 	bge	r2,zero,825c0 <__kernel_rem_pio2+0xa58>
   8254c:	d8009215 	stw	zero,584(sp)
   82550:	003e9606 	br	81fac <__kernel_rem_pio2+0x444>
   82554:	d8c08d17 	ldw	r3,564(sp)
   82558:	01000044 	movi	r4,1
   8255c:	192f883a 	add	r23,r3,r4
   82560:	1f000044 	addi	fp,r3,1
   82564:	bf3eb516 	blt	r23,fp,8203c <__kernel_rem_pio2+0x4d4>
   82568:	003eb606 	br	82044 <__kernel_rem_pio2+0x4dc>
   8256c:	0021883a 	mov	r16,zero
   82570:	0023883a 	mov	r17,zero
   82574:	a5000044 	addi	r20,r20,1
   82578:	ac400115 	stw	r17,4(r21)
   8257c:	ac000015 	stw	r16,0(r21)
   82580:	ad400204 	addi	r21,r21,8
   82584:	a5fdba1e 	bne	r20,r23,81c70 <__kernel_rem_pio2+0x108>
   82588:	003dd806 	br	81cec <__kernel_rem_pio2+0x184>
   8258c:	a80490fa 	slli	r2,r21,3
   82590:	0021883a 	mov	r16,zero
   82594:	0023883a 	mov	r17,zero
   82598:	16c5883a 	add	r2,r2,sp
   8259c:	14403d15 	stw	r17,244(r2)
   825a0:	14003c15 	stw	r16,240(r2)
   825a4:	b5bfffc4 	addi	r22,r22,-1
   825a8:	00bfffc4 	movi	r2,-1
   825ac:	ad400044 	addi	r21,r21,1
   825b0:	b0bf4b1e 	bne	r22,r2,822e0 <__kernel_rem_pio2+0x778>
   825b4:	003f6f06 	br	82374 <__kernel_rem_pio2+0x80c>
   825b8:	002d883a 	mov	r22,zero
   825bc:	003e7106 	br	81f84 <__kernel_rem_pio2+0x41c>
   825c0:	01000084 	movi	r4,2
   825c4:	d9009215 	stw	r4,584(sp)
   825c8:	003e5106 	br	81f10 <__kernel_rem_pio2+0x3a8>
   825cc:	d900ad17 	ldw	r4,692(sp)
   825d0:	008000c4 	movi	r2,3
   825d4:	20bfa61e 	bne	r4,r2,82470 <__kernel_rem_pio2+0x908>
   825d8:	d9c08d17 	ldw	r7,564(sp)
   825dc:	01c02c0e 	bge	zero,r7,82690 <__kernel_rem_pio2+0xb28>
   825e0:	3805883a 	mov	r2,r7
   825e4:	00000106 	br	825ec <__kernel_rem_pio2+0xa84>
   825e8:	d8808e17 	ldw	r2,568(sp)
   825ec:	113fffc4 	addi	r4,r2,-1
   825f0:	100690fa 	slli	r3,r2,3
   825f4:	200490fa 	slli	r2,r4,3
   825f8:	d9008e15 	stw	r4,568(sp)
   825fc:	1ef9883a 	add	fp,r3,sp
   82600:	16c5883a 	add	r2,r2,sp
   82604:	d8809a15 	stw	r2,616(sp)
   82608:	11403c04 	addi	r5,r2,240
   8260c:	e1803c04 	addi	r6,fp,240
   82610:	14003c17 	ldw	r16,240(r2)
   82614:	e5003c17 	ldw	r20,240(fp)
   82618:	d9409b15 	stw	r5,620(sp)
   8261c:	d9809c15 	stw	r6,624(sp)
   82620:	35400117 	ldw	r21,4(r6)
   82624:	2c400117 	ldw	r17,4(r5)
   82628:	8009883a 	mov	r4,r16
   8262c:	a00d883a 	mov	r6,r20
   82630:	880b883a 	mov	r5,r17
   82634:	a80f883a 	mov	r7,r21
   82638:	00835cc0 	call	835cc <__adddf3>
   8263c:	100d883a 	mov	r6,r2
   82640:	880b883a 	mov	r5,r17
   82644:	8009883a 	mov	r4,r16
   82648:	180f883a 	mov	r7,r3
   8264c:	1025883a 	mov	r18,r2
   82650:	1827883a 	mov	r19,r3
   82654:	008354c0 	call	8354c <__subdf3>
   82658:	180f883a 	mov	r7,r3
   8265c:	a80b883a 	mov	r5,r21
   82660:	a009883a 	mov	r4,r20
   82664:	100d883a 	mov	r6,r2
   82668:	00835cc0 	call	835cc <__adddf3>
   8266c:	e0803c15 	stw	r2,240(fp)
   82670:	d9c09c17 	ldw	r7,624(sp)
   82674:	38c00115 	stw	r3,4(r7)
   82678:	da809a17 	ldw	r10,616(sp)
   8267c:	54803c15 	stw	r18,240(r10)
   82680:	d8809b17 	ldw	r2,620(sp)
   82684:	14c00115 	stw	r19,4(r2)
   82688:	d8c08e17 	ldw	r3,568(sp)
   8268c:	183fd61e 	bne	r3,zero,825e8 <__kernel_rem_pio2+0xa80>
   82690:	d9008d17 	ldw	r4,564(sp)
   82694:	00800044 	movi	r2,1
   82698:	1100cc0e 	bge	r2,r4,829cc <__kernel_rem_pio2+0xe64>
   8269c:	d8808d17 	ldw	r2,564(sp)
   826a0:	117fffc4 	addi	r5,r2,-1
   826a4:	100690fa 	slli	r3,r2,3
   826a8:	280490fa 	slli	r2,r5,3
   826ac:	d9408f15 	stw	r5,572(sp)
   826b0:	1ef9883a 	add	fp,r3,sp
   826b4:	16c5883a 	add	r2,r2,sp
   826b8:	d8809d15 	stw	r2,628(sp)
   826bc:	11803c04 	addi	r6,r2,240
   826c0:	e1c03c04 	addi	r7,fp,240
   826c4:	14003c17 	ldw	r16,240(r2)
   826c8:	e5003c17 	ldw	r20,240(fp)
   826cc:	d9809e15 	stw	r6,632(sp)
   826d0:	d9c09f15 	stw	r7,636(sp)
   826d4:	34400117 	ldw	r17,4(r6)
   826d8:	3d400117 	ldw	r21,4(r7)
   826dc:	8009883a 	mov	r4,r16
   826e0:	880b883a 	mov	r5,r17
   826e4:	a00d883a 	mov	r6,r20
   826e8:	a80f883a 	mov	r7,r21
   826ec:	00835cc0 	call	835cc <__adddf3>
   826f0:	100d883a 	mov	r6,r2
   826f4:	880b883a 	mov	r5,r17
   826f8:	8009883a 	mov	r4,r16
   826fc:	180f883a 	mov	r7,r3
   82700:	1025883a 	mov	r18,r2
   82704:	1827883a 	mov	r19,r3
   82708:	008354c0 	call	8354c <__subdf3>
   8270c:	180f883a 	mov	r7,r3
   82710:	a80b883a 	mov	r5,r21
   82714:	a009883a 	mov	r4,r20
   82718:	100d883a 	mov	r6,r2
   8271c:	00835cc0 	call	835cc <__adddf3>
   82720:	e0803c15 	stw	r2,240(fp)
   82724:	da809f17 	ldw	r10,636(sp)
   82728:	50c00115 	stw	r3,4(r10)
   8272c:	d8c09d17 	ldw	r3,628(sp)
   82730:	d8808f17 	ldw	r2,572(sp)
   82734:	1c803c15 	stw	r18,240(r3)
   82738:	d9009e17 	ldw	r4,632(sp)
   8273c:	00c00044 	movi	r3,1
   82740:	24c00115 	stw	r19,4(r4)
   82744:	d9408f17 	ldw	r5,572(sp)
   82748:	28ffd51e 	bne	r5,r3,826a0 <__kernel_rem_pio2+0xb38>
   8274c:	dc008d17 	ldw	r16,564(sp)
   82750:	0011883a 	mov	r8,zero
   82754:	1825883a 	mov	r18,r3
   82758:	800490fa 	slli	r2,r16,3
   8275c:	0013883a 	mov	r9,zero
   82760:	16e3883a 	add	r17,r2,sp
   82764:	88803c17 	ldw	r2,240(r17)
   82768:	88c03d17 	ldw	r3,244(r17)
   8276c:	480b883a 	mov	r5,r9
   82770:	4009883a 	mov	r4,r8
   82774:	180f883a 	mov	r7,r3
   82778:	100d883a 	mov	r6,r2
   8277c:	00835cc0 	call	835cc <__adddf3>
   82780:	843fffc4 	addi	r16,r16,-1
   82784:	8c7ffe04 	addi	r17,r17,-8
   82788:	1011883a 	mov	r8,r2
   8278c:	1813883a 	mov	r9,r3
   82790:	84bff41e 	bne	r16,r18,82764 <__kernel_rem_pio2+0xbfc>
   82794:	d9809217 	ldw	r6,584(sp)
   82798:	30007a1e 	bne	r6,zero,82984 <__kernel_rem_pio2+0xe1c>
   8279c:	d9c09717 	ldw	r7,604(sp)
   827a0:	d8803c17 	ldw	r2,240(sp)
   827a4:	d9003e17 	ldw	r4,248(sp)
   827a8:	3a400515 	stw	r9,20(r7)
   827ac:	d8c03d17 	ldw	r3,244(sp)
   827b0:	d9403f17 	ldw	r5,252(sp)
   827b4:	3a000415 	stw	r8,16(r7)
   827b8:	38c00115 	stw	r3,4(r7)
   827bc:	39400315 	stw	r5,12(r7)
   827c0:	38800015 	stw	r2,0(r7)
   827c4:	39000215 	stw	r4,8(r7)
   827c8:	003f2906 	br	82470 <__kernel_rem_pio2+0x908>
   827cc:	183f281e 	bne	r3,zero,82470 <__kernel_rem_pio2+0x908>
   827d0:	d9408d17 	ldw	r5,564(sp)
   827d4:	28008016 	blt	r5,zero,829d8 <__kernel_rem_pio2+0xe70>
   827d8:	dc008d17 	ldw	r16,564(sp)
   827dc:	000d883a 	mov	r6,zero
   827e0:	000f883a 	mov	r7,zero
   827e4:	800490fa 	slli	r2,r16,3
   827e8:	04bfffc4 	movi	r18,-1
   827ec:	16e3883a 	add	r17,r2,sp
   827f0:	88803c17 	ldw	r2,240(r17)
   827f4:	88c03d17 	ldw	r3,244(r17)
   827f8:	380b883a 	mov	r5,r7
   827fc:	3009883a 	mov	r4,r6
   82800:	180f883a 	mov	r7,r3
   82804:	100d883a 	mov	r6,r2
   82808:	00835cc0 	call	835cc <__adddf3>
   8280c:	843fffc4 	addi	r16,r16,-1
   82810:	8c7ffe04 	addi	r17,r17,-8
   82814:	100d883a 	mov	r6,r2
   82818:	180f883a 	mov	r7,r3
   8281c:	84bff41e 	bne	r16,r18,827f0 <__kernel_rem_pio2+0xc88>
   82820:	da809217 	ldw	r10,584(sp)
   82824:	50000226 	beq	r10,zero,82830 <__kernel_rem_pio2+0xcc8>
   82828:	38e0003c 	xorhi	r3,r7,32768
   8282c:	180f883a 	mov	r7,r3
   82830:	d8809717 	ldw	r2,604(sp)
   82834:	11c00115 	stw	r7,4(r2)
   82838:	11800015 	stw	r6,0(r2)
   8283c:	003f0c06 	br	82470 <__kernel_rem_pio2+0x908>
   82840:	d8008c15 	stw	zero,560(sp)
   82844:	003ce606 	br	81be0 <__kernel_rem_pio2+0x78>
   82848:	d9c09317 	ldw	r7,588(sp)
   8284c:	880b883a 	mov	r5,r17
   82850:	8009883a 	mov	r4,r16
   82854:	01cdc83a 	sub	r6,zero,r7
   82858:	0082f380 	call	82f38 <scalbn>
   8285c:	0011883a 	mov	r8,zero
   82860:	02505c34 	movhi	r9,16752
   82864:	480f883a 	mov	r7,r9
   82868:	1009883a 	mov	r4,r2
   8286c:	180b883a 	mov	r5,r3
   82870:	400d883a 	mov	r6,r8
   82874:	102d883a 	mov	r22,r2
   82878:	182f883a 	mov	r23,r3
   8287c:	0083b140 	call	83b14 <__gedf2>
   82880:	10003716 	blt	r2,zero,82960 <__kernel_rem_pio2+0xdf8>
   82884:	0005883a 	mov	r2,zero
   82888:	00cf9c34 	movhi	r3,15984
   8288c:	180f883a 	mov	r7,r3
   82890:	100d883a 	mov	r6,r2
   82894:	b009883a 	mov	r4,r22
   82898:	b80b883a 	mov	r5,r23
   8289c:	00836400 	call	83640 <__muldf3>
   828a0:	180b883a 	mov	r5,r3
   828a4:	1009883a 	mov	r4,r2
   828a8:	0083c940 	call	83c94 <__fixdfsi>
   828ac:	1009883a 	mov	r4,r2
   828b0:	0083b9c0 	call	83b9c <__floatsidf>
   828b4:	da808d17 	ldw	r10,564(sp)
   828b8:	1023883a 	mov	r17,r2
   828bc:	1825883a 	mov	r18,r3
   828c0:	0005883a 	mov	r2,zero
   828c4:	00f05c34 	movhi	r3,49520
   828c8:	180f883a 	mov	r7,r3
   828cc:	8809883a 	mov	r4,r17
   828d0:	900b883a 	mov	r5,r18
   828d4:	100d883a 	mov	r6,r2
   828d8:	52ab883a 	add	r21,r10,r10
   828dc:	00836400 	call	83640 <__muldf3>
   828e0:	180f883a 	mov	r7,r3
   828e4:	b80b883a 	mov	r5,r23
   828e8:	100d883a 	mov	r6,r2
   828ec:	b009883a 	mov	r4,r22
   828f0:	00835cc0 	call	835cc <__adddf3>
   828f4:	100d883a 	mov	r6,r2
   828f8:	d8808d17 	ldw	r2,564(sp)
   828fc:	180b883a 	mov	r5,r3
   82900:	3009883a 	mov	r4,r6
   82904:	10800044 	addi	r2,r2,1
   82908:	ad6b883a 	add	r21,r21,r21
   8290c:	d8808d15 	stw	r2,564(sp)
   82910:	0083c940 	call	83c94 <__fixdfsi>
   82914:	d8c08d17 	ldw	r3,564(sp)
   82918:	aeeb883a 	add	r21,r21,sp
   8291c:	8809883a 	mov	r4,r17
   82920:	900b883a 	mov	r5,r18
   82924:	a8800015 	stw	r2,0(r21)
   82928:	18e1883a 	add	r16,r3,r3
   8292c:	0083c940 	call	83c94 <__fixdfsi>
   82930:	d9009317 	ldw	r4,588(sp)
   82934:	8421883a 	add	r16,r16,r16
   82938:	86e1883a 	add	r16,r16,sp
   8293c:	21000604 	addi	r4,r4,24
   82940:	d9009315 	stw	r4,588(sp)
   82944:	80800015 	stw	r2,0(r16)
   82948:	003e3a06 	br	82234 <__kernel_rem_pio2+0x6cc>
   8294c:	4009883a 	mov	r4,r8
   82950:	4960003c 	xorhi	r5,r9,32768
   82954:	003ea406 	br	823e8 <__kernel_rem_pio2+0x880>
   82958:	d9808d15 	stw	r6,564(sp)
   8295c:	003e3506 	br	82234 <__kernel_rem_pio2+0x6cc>
   82960:	d9408d17 	ldw	r5,564(sp)
   82964:	b009883a 	mov	r4,r22
   82968:	2961883a 	add	r16,r5,r5
   8296c:	8421883a 	add	r16,r16,r16
   82970:	b80b883a 	mov	r5,r23
   82974:	86e1883a 	add	r16,r16,sp
   82978:	0083c940 	call	83c94 <__fixdfsi>
   8297c:	80800015 	stw	r2,0(r16)
   82980:	003e2c06 	br	82234 <__kernel_rem_pio2+0x6cc>
   82984:	d8c03d17 	ldw	r3,244(sp)
   82988:	d9403f17 	ldw	r5,252(sp)
   8298c:	da809717 	ldw	r10,604(sp)
   82990:	d8803c17 	ldw	r2,240(sp)
   82994:	d9003e17 	ldw	r4,248(sp)
   82998:	49e0003c 	xorhi	r7,r9,32768
   8299c:	51c00515 	stw	r7,20(r10)
   829a0:	19a0003c 	xorhi	r6,r3,32768
   829a4:	29e0003c 	xorhi	r7,r5,32768
   829a8:	51800115 	stw	r6,4(r10)
   829ac:	51c00315 	stw	r7,12(r10)
   829b0:	50800015 	stw	r2,0(r10)
   829b4:	51000215 	stw	r4,8(r10)
   829b8:	52000415 	stw	r8,16(r10)
   829bc:	003eac06 	br	82470 <__kernel_rem_pio2+0x908>
   829c0:	0011883a 	mov	r8,zero
   829c4:	0013883a 	mov	r9,zero
   829c8:	003e8306 	br	823d8 <__kernel_rem_pio2+0x870>
   829cc:	0011883a 	mov	r8,zero
   829d0:	0013883a 	mov	r9,zero
   829d4:	003f6f06 	br	82794 <__kernel_rem_pio2+0xc2c>
   829d8:	000d883a 	mov	r6,zero
   829dc:	000f883a 	mov	r7,zero
   829e0:	003f8f06 	br	82820 <__kernel_rem_pio2+0xcb8>

000829e4 <__kernel_sin>:
   829e4:	00a00034 	movhi	r2,32768
   829e8:	10bfffc4 	addi	r2,r2,-1
   829ec:	deffef04 	addi	sp,sp,-68
   829f0:	1144703a 	and	r2,r2,r5
   829f4:	00cf9034 	movhi	r3,15936
   829f8:	18ffffc4 	addi	r3,r3,-1
   829fc:	dd400d15 	stw	r21,52(sp)
   82a00:	dd000c15 	stw	r20,48(sp)
   82a04:	dfc01015 	stw	ra,64(sp)
   82a08:	ddc00f15 	stw	r23,60(sp)
   82a0c:	dd800e15 	stw	r22,56(sp)
   82a10:	dcc00b15 	stw	r19,44(sp)
   82a14:	dc800a15 	stw	r18,40(sp)
   82a18:	dc400915 	stw	r17,36(sp)
   82a1c:	dc000815 	stw	r16,32(sp)
   82a20:	2029883a 	mov	r20,r4
   82a24:	282b883a 	mov	r21,r5
   82a28:	d9800415 	stw	r6,16(sp)
   82a2c:	d9c00515 	stw	r7,20(sp)
   82a30:	18800216 	blt	r3,r2,82a3c <__kernel_sin+0x58>
   82a34:	0083c940 	call	83c94 <__fixdfsi>
   82a38:	10008826 	beq	r2,zero,82c5c <__kernel_sin+0x278>
   82a3c:	a009883a 	mov	r4,r20
   82a40:	a80b883a 	mov	r5,r21
   82a44:	a00d883a 	mov	r6,r20
   82a48:	a80f883a 	mov	r7,r21
   82a4c:	00836400 	call	83640 <__muldf3>
   82a50:	102d883a 	mov	r22,r2
   82a54:	a009883a 	mov	r4,r20
   82a58:	a80b883a 	mov	r5,r21
   82a5c:	b00d883a 	mov	r6,r22
   82a60:	180f883a 	mov	r7,r3
   82a64:	182f883a 	mov	r23,r3
   82a68:	d8800215 	stw	r2,8(sp)
   82a6c:	d8c00315 	stw	r3,12(sp)
   82a70:	00836400 	call	83640 <__muldf3>
   82a74:	d9000217 	ldw	r4,8(sp)
   82a78:	0216b434 	movhi	r8,23248
   82a7c:	42355f04 	addi	r8,r8,-10884
   82a80:	024f79b4 	movhi	r9,15846
   82a84:	4a764e84 	addi	r9,r9,-9926
   82a88:	480f883a 	mov	r7,r9
   82a8c:	400d883a 	mov	r6,r8
   82a90:	b80b883a 	mov	r5,r23
   82a94:	d8800615 	stw	r2,24(sp)
   82a98:	d8c00715 	stw	r3,28(sp)
   82a9c:	00836400 	call	83640 <__muldf3>
   82aa0:	02228b34 	movhi	r8,35372
   82aa4:	42273ac4 	addi	r8,r8,-25365
   82aa8:	024f96f4 	movhi	r9,15963
   82aac:	4a797984 	addi	r9,r9,-6682
   82ab0:	480f883a 	mov	r7,r9
   82ab4:	400d883a 	mov	r6,r8
   82ab8:	180b883a 	mov	r5,r3
   82abc:	1009883a 	mov	r4,r2
   82ac0:	008354c0 	call	8354c <__subdf3>
   82ac4:	d9000217 	ldw	r4,8(sp)
   82ac8:	180f883a 	mov	r7,r3
   82acc:	b80b883a 	mov	r5,r23
   82ad0:	100d883a 	mov	r6,r2
   82ad4:	00836400 	call	83640 <__muldf3>
   82ad8:	0215ecb4 	movhi	r8,22450
   82adc:	423f9f44 	addi	r8,r8,-387
   82ae0:	024fb1f4 	movhi	r9,16071
   82ae4:	4a4778c4 	addi	r9,r9,7651
   82ae8:	480f883a 	mov	r7,r9
   82aec:	400d883a 	mov	r6,r8
   82af0:	180b883a 	mov	r5,r3
   82af4:	1009883a 	mov	r4,r2
   82af8:	00835cc0 	call	835cc <__adddf3>
   82afc:	d9000217 	ldw	r4,8(sp)
   82b00:	180f883a 	mov	r7,r3
   82b04:	b80b883a 	mov	r5,r23
   82b08:	100d883a 	mov	r6,r2
   82b0c:	00836400 	call	83640 <__muldf3>
   82b10:	02067074 	movhi	r8,6593
   82b14:	42187544 	addi	r8,r8,25045
   82b18:	024fcab4 	movhi	r9,16170
   82b1c:	4a406804 	addi	r9,r9,416
   82b20:	480f883a 	mov	r7,r9
   82b24:	400d883a 	mov	r6,r8
   82b28:	180b883a 	mov	r5,r3
   82b2c:	1009883a 	mov	r4,r2
   82b30:	008354c0 	call	8354c <__subdf3>
   82b34:	d9000217 	ldw	r4,8(sp)
   82b38:	180f883a 	mov	r7,r3
   82b3c:	b80b883a 	mov	r5,r23
   82b40:	100d883a 	mov	r6,r2
   82b44:	00836400 	call	83640 <__muldf3>
   82b48:	02044474 	movhi	r8,4369
   82b4c:	423e2984 	addi	r8,r8,-1882
   82b50:	024fe074 	movhi	r9,16257
   82b54:	4a444444 	addi	r9,r9,4369
   82b58:	180b883a 	mov	r5,r3
   82b5c:	480f883a 	mov	r7,r9
   82b60:	1009883a 	mov	r4,r2
   82b64:	400d883a 	mov	r6,r8
   82b68:	00835cc0 	call	835cc <__adddf3>
   82b6c:	1021883a 	mov	r16,r2
   82b70:	d8800617 	ldw	r2,24(sp)
   82b74:	1823883a 	mov	r17,r3
   82b78:	d8800015 	stw	r2,0(sp)
   82b7c:	d8800717 	ldw	r2,28(sp)
   82b80:	d8800115 	stw	r2,4(sp)
   82b84:	d8801117 	ldw	r2,68(sp)
   82b88:	10004126 	beq	r2,zero,82c90 <__kernel_sin+0x2ac>
   82b8c:	d9000417 	ldw	r4,16(sp)
   82b90:	d9400517 	ldw	r5,20(sp)
   82b94:	0005883a 	mov	r2,zero
   82b98:	00cff834 	movhi	r3,16352
   82b9c:	180f883a 	mov	r7,r3
   82ba0:	100d883a 	mov	r6,r2
   82ba4:	00836400 	call	83640 <__muldf3>
   82ba8:	d9000017 	ldw	r4,0(sp)
   82bac:	d9400717 	ldw	r5,28(sp)
   82bb0:	800d883a 	mov	r6,r16
   82bb4:	880f883a 	mov	r7,r17
   82bb8:	1021883a 	mov	r16,r2
   82bbc:	1823883a 	mov	r17,r3
   82bc0:	00836400 	call	83640 <__muldf3>
   82bc4:	180f883a 	mov	r7,r3
   82bc8:	880b883a 	mov	r5,r17
   82bcc:	8009883a 	mov	r4,r16
   82bd0:	100d883a 	mov	r6,r2
   82bd4:	008354c0 	call	8354c <__subdf3>
   82bd8:	d9000217 	ldw	r4,8(sp)
   82bdc:	b80b883a 	mov	r5,r23
   82be0:	180f883a 	mov	r7,r3
   82be4:	100d883a 	mov	r6,r2
   82be8:	00836400 	call	83640 <__muldf3>
   82bec:	d9c00517 	ldw	r7,20(sp)
   82bf0:	d9800417 	ldw	r6,16(sp)
   82bf4:	180b883a 	mov	r5,r3
   82bf8:	1009883a 	mov	r4,r2
   82bfc:	008354c0 	call	8354c <__subdf3>
   82c00:	d9000017 	ldw	r4,0(sp)
   82c04:	d9400717 	ldw	r5,28(sp)
   82c08:	02155574 	movhi	r8,21845
   82c0c:	42155244 	addi	r8,r8,21833
   82c10:	024ff174 	movhi	r9,16325
   82c14:	4a555544 	addi	r9,r9,21845
   82c18:	480f883a 	mov	r7,r9
   82c1c:	400d883a 	mov	r6,r8
   82c20:	1021883a 	mov	r16,r2
   82c24:	1823883a 	mov	r17,r3
   82c28:	00836400 	call	83640 <__muldf3>
   82c2c:	180f883a 	mov	r7,r3
   82c30:	880b883a 	mov	r5,r17
   82c34:	8009883a 	mov	r4,r16
   82c38:	100d883a 	mov	r6,r2
   82c3c:	00835cc0 	call	835cc <__adddf3>
   82c40:	180f883a 	mov	r7,r3
   82c44:	a80b883a 	mov	r5,r21
   82c48:	a009883a 	mov	r4,r20
   82c4c:	100d883a 	mov	r6,r2
   82c50:	008354c0 	call	8354c <__subdf3>
   82c54:	1029883a 	mov	r20,r2
   82c58:	182b883a 	mov	r21,r3
   82c5c:	a005883a 	mov	r2,r20
   82c60:	a807883a 	mov	r3,r21
   82c64:	dfc01017 	ldw	ra,64(sp)
   82c68:	ddc00f17 	ldw	r23,60(sp)
   82c6c:	dd800e17 	ldw	r22,56(sp)
   82c70:	dd400d17 	ldw	r21,52(sp)
   82c74:	dd000c17 	ldw	r20,48(sp)
   82c78:	dcc00b17 	ldw	r19,44(sp)
   82c7c:	dc800a17 	ldw	r18,40(sp)
   82c80:	dc400917 	ldw	r17,36(sp)
   82c84:	dc000817 	ldw	r16,32(sp)
   82c88:	dec01104 	addi	sp,sp,68
   82c8c:	f800283a 	ret
   82c90:	d9000217 	ldw	r4,8(sp)
   82c94:	b80b883a 	mov	r5,r23
   82c98:	800d883a 	mov	r6,r16
   82c9c:	180f883a 	mov	r7,r3
   82ca0:	00836400 	call	83640 <__muldf3>
   82ca4:	02155574 	movhi	r8,21845
   82ca8:	42155244 	addi	r8,r8,21833
   82cac:	024ff174 	movhi	r9,16325
   82cb0:	4a555544 	addi	r9,r9,21845
   82cb4:	480f883a 	mov	r7,r9
   82cb8:	400d883a 	mov	r6,r8
   82cbc:	180b883a 	mov	r5,r3
   82cc0:	1009883a 	mov	r4,r2
   82cc4:	008354c0 	call	8354c <__subdf3>
   82cc8:	d9000017 	ldw	r4,0(sp)
   82ccc:	d9400717 	ldw	r5,28(sp)
   82cd0:	180f883a 	mov	r7,r3
   82cd4:	100d883a 	mov	r6,r2
   82cd8:	00836400 	call	83640 <__muldf3>
   82cdc:	180f883a 	mov	r7,r3
   82ce0:	a80b883a 	mov	r5,r21
   82ce4:	a009883a 	mov	r4,r20
   82ce8:	100d883a 	mov	r6,r2
   82cec:	00835cc0 	call	835cc <__adddf3>
   82cf0:	1029883a 	mov	r20,r2
   82cf4:	182b883a 	mov	r21,r3
   82cf8:	003fd806 	br	82c5c <__kernel_sin+0x278>

00082cfc <fabs>:
   82cfc:	01e00034 	movhi	r7,32768
   82d00:	39ffffc4 	addi	r7,r7,-1
   82d04:	394e703a 	and	r7,r7,r5
   82d08:	2005883a 	mov	r2,r4
   82d0c:	3807883a 	mov	r3,r7
   82d10:	f800283a 	ret

00082d14 <floor>:
   82d14:	2805d53a 	srai	r2,r5,20
   82d18:	defff604 	addi	sp,sp,-40
   82d1c:	dd800615 	stw	r22,24(sp)
   82d20:	10c1ffcc 	andi	r3,r2,2047
   82d24:	1dbf0044 	addi	r22,r3,-1023
   82d28:	008004c4 	movi	r2,19
   82d2c:	ddc00715 	stw	r23,28(sp)
   82d30:	dc800215 	stw	r18,8(sp)
   82d34:	dc400115 	stw	r17,4(sp)
   82d38:	dc000015 	stw	r16,0(sp)
   82d3c:	dfc00915 	stw	ra,36(sp)
   82d40:	df000815 	stw	fp,32(sp)
   82d44:	dd400515 	stw	r21,20(sp)
   82d48:	dd000415 	stw	r20,16(sp)
   82d4c:	dcc00315 	stw	r19,12(sp)
   82d50:	2021883a 	mov	r16,r4
   82d54:	2823883a 	mov	r17,r5
   82d58:	282f883a 	mov	r23,r5
   82d5c:	2025883a 	mov	r18,r4
   82d60:	15802916 	blt	r2,r22,82e08 <floor+0xf4>
   82d64:	b0004816 	blt	r22,zero,82e88 <floor+0x174>
   82d68:	00800434 	movhi	r2,16
   82d6c:	10bfffc4 	addi	r2,r2,-1
   82d70:	15b9d83a 	sra	fp,r2,r22
   82d74:	282f883a 	mov	r23,r5
   82d78:	e144703a 	and	r2,fp,r5
   82d7c:	1104b03a 	or	r2,r2,r4
   82d80:	10001326 	beq	r2,zero,82dd0 <floor+0xbc>
   82d84:	00a20034 	movhi	r2,34816
   82d88:	109d6704 	addi	r2,r2,30108
   82d8c:	00df8e34 	movhi	r3,32312
   82d90:	18f90f04 	addi	r3,r3,-7108
   82d94:	180f883a 	mov	r7,r3
   82d98:	100d883a 	mov	r6,r2
   82d9c:	00835cc0 	call	835cc <__adddf3>
   82da0:	180b883a 	mov	r5,r3
   82da4:	000d883a 	mov	r6,zero
   82da8:	000f883a 	mov	r7,zero
   82dac:	1009883a 	mov	r4,r2
   82db0:	0083a8c0 	call	83a8c <__gtdf2>
   82db4:	0080040e 	bge	zero,r2,82dc8 <floor+0xb4>
   82db8:	88004416 	blt	r17,zero,82ecc <floor+0x1b8>
   82dbc:	0704303a 	nor	r2,zero,fp
   82dc0:	b8ae703a 	and	r23,r23,r2
   82dc4:	0025883a 	mov	r18,zero
   82dc8:	9021883a 	mov	r16,r18
   82dcc:	b823883a 	mov	r17,r23
   82dd0:	8005883a 	mov	r2,r16
   82dd4:	8807883a 	mov	r3,r17
   82dd8:	dfc00917 	ldw	ra,36(sp)
   82ddc:	df000817 	ldw	fp,32(sp)
   82de0:	ddc00717 	ldw	r23,28(sp)
   82de4:	dd800617 	ldw	r22,24(sp)
   82de8:	dd400517 	ldw	r21,20(sp)
   82dec:	dd000417 	ldw	r20,16(sp)
   82df0:	dcc00317 	ldw	r19,12(sp)
   82df4:	dc800217 	ldw	r18,8(sp)
   82df8:	dc400117 	ldw	r17,4(sp)
   82dfc:	dc000017 	ldw	r16,0(sp)
   82e00:	dec00a04 	addi	sp,sp,40
   82e04:	f800283a 	ret
   82e08:	00800cc4 	movi	r2,51
   82e0c:	15801616 	blt	r2,r22,82e68 <floor+0x154>
   82e10:	18befb44 	addi	r2,r3,-1043
   82e14:	00ffffc4 	movi	r3,-1
   82e18:	18b8d83a 	srl	fp,r3,r2
   82e1c:	e104703a 	and	r2,fp,r4
   82e20:	103feb26 	beq	r2,zero,82dd0 <floor+0xbc>
   82e24:	00a20034 	movhi	r2,34816
   82e28:	109d6704 	addi	r2,r2,30108
   82e2c:	00df8e34 	movhi	r3,32312
   82e30:	18f90f04 	addi	r3,r3,-7108
   82e34:	180f883a 	mov	r7,r3
   82e38:	100d883a 	mov	r6,r2
   82e3c:	00835cc0 	call	835cc <__adddf3>
   82e40:	180b883a 	mov	r5,r3
   82e44:	000d883a 	mov	r6,zero
   82e48:	000f883a 	mov	r7,zero
   82e4c:	1009883a 	mov	r4,r2
   82e50:	0083a8c0 	call	83a8c <__gtdf2>
   82e54:	0080210e 	bge	zero,r2,82edc <floor+0x1c8>
   82e58:	88002216 	blt	r17,zero,82ee4 <floor+0x1d0>
   82e5c:	0704303a 	nor	r2,zero,fp
   82e60:	90a4703a 	and	r18,r18,r2
   82e64:	003fd806 	br	82dc8 <floor+0xb4>
   82e68:	00810004 	movi	r2,1024
   82e6c:	b0bfd81e 	bne	r22,r2,82dd0 <floor+0xbc>
   82e70:	800d883a 	mov	r6,r16
   82e74:	280f883a 	mov	r7,r5
   82e78:	00835cc0 	call	835cc <__adddf3>
   82e7c:	1021883a 	mov	r16,r2
   82e80:	1823883a 	mov	r17,r3
   82e84:	003fd206 	br	82dd0 <floor+0xbc>
   82e88:	00a20034 	movhi	r2,34816
   82e8c:	109d6704 	addi	r2,r2,30108
   82e90:	00df8e34 	movhi	r3,32312
   82e94:	18f90f04 	addi	r3,r3,-7108
   82e98:	180f883a 	mov	r7,r3
   82e9c:	100d883a 	mov	r6,r2
   82ea0:	00835cc0 	call	835cc <__adddf3>
   82ea4:	180b883a 	mov	r5,r3
   82ea8:	000d883a 	mov	r6,zero
   82eac:	000f883a 	mov	r7,zero
   82eb0:	1009883a 	mov	r4,r2
   82eb4:	0083a8c0 	call	83a8c <__gtdf2>
   82eb8:	00bfc30e 	bge	zero,r2,82dc8 <floor+0xb4>
   82ebc:	88001416 	blt	r17,zero,82f10 <floor+0x1fc>
   82ec0:	002f883a 	mov	r23,zero
   82ec4:	0025883a 	mov	r18,zero
   82ec8:	003fbf06 	br	82dc8 <floor+0xb4>
   82ecc:	00800434 	movhi	r2,16
   82ed0:	1585d83a 	sra	r2,r2,r22
   82ed4:	88af883a 	add	r23,r17,r2
   82ed8:	003fb806 	br	82dbc <floor+0xa8>
   82edc:	882f883a 	mov	r23,r17
   82ee0:	003fb906 	br	82dc8 <floor+0xb4>
   82ee4:	00800504 	movi	r2,20
   82ee8:	b0801126 	beq	r22,r2,82f30 <floor+0x21c>
   82eec:	00c00d04 	movi	r3,52
   82ef0:	1d87c83a 	sub	r3,r3,r22
   82ef4:	00800044 	movi	r2,1
   82ef8:	10c4983a 	sll	r2,r2,r3
   82efc:	8085883a 	add	r2,r16,r2
   82f00:	1400012e 	bgeu	r2,r16,82f08 <floor+0x1f4>
   82f04:	8dc00044 	addi	r23,r17,1
   82f08:	1025883a 	mov	r18,r2
   82f0c:	003fd306 	br	82e5c <floor+0x148>
   82f10:	00a00034 	movhi	r2,32768
   82f14:	10bfffc4 	addi	r2,r2,-1
   82f18:	8884703a 	and	r2,r17,r2
   82f1c:	8084b03a 	or	r2,r16,r2
   82f20:	103fee26 	beq	r2,zero,82edc <floor+0x1c8>
   82f24:	05effc34 	movhi	r23,49136
   82f28:	0025883a 	mov	r18,zero
   82f2c:	003fa606 	br	82dc8 <floor+0xb4>
   82f30:	8dc00044 	addi	r23,r17,1
   82f34:	003fc906 	br	82e5c <floor+0x148>

00082f38 <scalbn>:
   82f38:	2011883a 	mov	r8,r4
   82f3c:	291ffc2c 	andhi	r4,r5,32752
   82f40:	2009d53a 	srai	r4,r4,20
   82f44:	defffd04 	addi	sp,sp,-12
   82f48:	dc000015 	stw	r16,0(sp)
   82f4c:	dfc00215 	stw	ra,8(sp)
   82f50:	dc400115 	stw	r17,4(sp)
   82f54:	2813883a 	mov	r9,r5
   82f58:	2815883a 	mov	r10,r5
   82f5c:	3021883a 	mov	r16,r6
   82f60:	2000281e 	bne	r4,zero,83004 <scalbn+0xcc>
   82f64:	00a00034 	movhi	r2,32768
   82f68:	10bfffc4 	addi	r2,r2,-1
   82f6c:	2884703a 	and	r2,r5,r2
   82f70:	4084b03a 	or	r2,r8,r2
   82f74:	10001826 	beq	r2,zero,82fd8 <scalbn+0xa0>
   82f78:	0005883a 	mov	r2,zero
   82f7c:	00d0d434 	movhi	r3,17232
   82f80:	4009883a 	mov	r4,r8
   82f84:	100d883a 	mov	r6,r2
   82f88:	180f883a 	mov	r7,r3
   82f8c:	00836400 	call	83640 <__muldf3>
   82f90:	100b883a 	mov	r5,r2
   82f94:	1011883a 	mov	r8,r2
   82f98:	00bffff4 	movhi	r2,65535
   82f9c:	108f2c04 	addi	r2,r2,15536
   82fa0:	180d883a 	mov	r6,r3
   82fa4:	1813883a 	mov	r9,r3
   82fa8:	8080120e 	bge	r16,r2,82ff4 <scalbn+0xbc>
   82fac:	00b0be74 	movhi	r2,49913
   82fb0:	10bcd644 	addi	r2,r2,-3239
   82fb4:	00c06974 	movhi	r3,421
   82fb8:	18db87c4 	addi	r3,r3,28191
   82fbc:	2809883a 	mov	r4,r5
   82fc0:	180f883a 	mov	r7,r3
   82fc4:	300b883a 	mov	r5,r6
   82fc8:	100d883a 	mov	r6,r2
   82fcc:	00836400 	call	83640 <__muldf3>
   82fd0:	1011883a 	mov	r8,r2
   82fd4:	1813883a 	mov	r9,r3
   82fd8:	4005883a 	mov	r2,r8
   82fdc:	4807883a 	mov	r3,r9
   82fe0:	dfc00217 	ldw	ra,8(sp)
   82fe4:	dc400117 	ldw	r17,4(sp)
   82fe8:	dc000017 	ldw	r16,0(sp)
   82fec:	dec00304 	addi	sp,sp,12
   82ff0:	f800283a 	ret
   82ff4:	189ffc2c 	andhi	r2,r3,32752
   82ff8:	1005d53a 	srai	r2,r2,20
   82ffc:	1815883a 	mov	r10,r3
   83000:	113ff284 	addi	r4,r2,-54
   83004:	0081ffc4 	movi	r2,2047
   83008:	20801126 	beq	r4,r2,83050 <scalbn+0x118>
   8300c:	2409883a 	add	r4,r4,r16
   83010:	0081ff84 	movi	r2,2046
   83014:	11001c16 	blt	r2,r4,83088 <scalbn+0x150>
   83018:	0100290e 	bge	zero,r4,830c0 <scalbn+0x188>
   8301c:	200a953a 	slli	r5,r4,20
   83020:	01200434 	movhi	r4,32784
   83024:	213fffc4 	addi	r4,r4,-1
   83028:	5108703a 	and	r4,r10,r4
   8302c:	2148b03a 	or	r4,r4,r5
   83030:	2013883a 	mov	r9,r4
   83034:	4005883a 	mov	r2,r8
   83038:	4807883a 	mov	r3,r9
   8303c:	dfc00217 	ldw	ra,8(sp)
   83040:	dc400117 	ldw	r17,4(sp)
   83044:	dc000017 	ldw	r16,0(sp)
   83048:	dec00304 	addi	sp,sp,12
   8304c:	f800283a 	ret
   83050:	480f883a 	mov	r7,r9
   83054:	4009883a 	mov	r4,r8
   83058:	480b883a 	mov	r5,r9
   8305c:	400d883a 	mov	r6,r8
   83060:	00835cc0 	call	835cc <__adddf3>
   83064:	1011883a 	mov	r8,r2
   83068:	1813883a 	mov	r9,r3
   8306c:	4005883a 	mov	r2,r8
   83070:	4807883a 	mov	r3,r9
   83074:	dfc00217 	ldw	ra,8(sp)
   83078:	dc400117 	ldw	r17,4(sp)
   8307c:	dc000017 	ldw	r16,0(sp)
   83080:	dec00304 	addi	sp,sp,12
   83084:	f800283a 	ret
   83088:	04220034 	movhi	r16,34816
   8308c:	841d6704 	addi	r16,r16,30108
   83090:	045f8e34 	movhi	r17,32312
   83094:	8c790f04 	addi	r17,r17,-7108
   83098:	480f883a 	mov	r7,r9
   8309c:	400d883a 	mov	r6,r8
   830a0:	8009883a 	mov	r4,r16
   830a4:	880b883a 	mov	r5,r17
   830a8:	00831180 	call	83118 <copysign>
   830ac:	180b883a 	mov	r5,r3
   830b0:	800d883a 	mov	r6,r16
   830b4:	880f883a 	mov	r7,r17
   830b8:	1009883a 	mov	r4,r2
   830bc:	003fc306 	br	82fcc <scalbn+0x94>
   830c0:	00bff284 	movi	r2,-54
   830c4:	11000716 	blt	r2,r4,830e4 <scalbn+0x1ac>
   830c8:	00b0d414 	movui	r2,50000
   830cc:	143fee16 	blt	r2,r16,83088 <scalbn+0x150>
   830d0:	0430be74 	movhi	r16,49913
   830d4:	843cd644 	addi	r16,r16,-3239
   830d8:	04406974 	movhi	r17,421
   830dc:	8c5b87c4 	addi	r17,r17,28191
   830e0:	003fed06 	br	83098 <scalbn+0x160>
   830e4:	21000d84 	addi	r4,r4,54
   830e8:	2008953a 	slli	r4,r4,20
   830ec:	01e00434 	movhi	r7,32784
   830f0:	39ffffc4 	addi	r7,r7,-1
   830f4:	51ce703a 	and	r7,r10,r7
   830f8:	390eb03a 	or	r7,r7,r4
   830fc:	024f2434 	movhi	r9,15504
   83100:	4009883a 	mov	r4,r8
   83104:	0011883a 	mov	r8,zero
   83108:	380b883a 	mov	r5,r7
   8310c:	400d883a 	mov	r6,r8
   83110:	480f883a 	mov	r7,r9
   83114:	003fad06 	br	82fcc <scalbn+0x94>

00083118 <copysign>:
   83118:	3813883a 	mov	r9,r7
   8311c:	01e00034 	movhi	r7,32768
   83120:	39ffffc4 	addi	r7,r7,-1
   83124:	394e703a 	and	r7,r7,r5
   83128:	4aa0002c 	andhi	r10,r9,32768
   8312c:	3a8eb03a 	or	r7,r7,r10
   83130:	2005883a 	mov	r2,r4
   83134:	3807883a 	mov	r3,r7
   83138:	f800283a 	ret

0008313c <_fpadd_parts>:
   8313c:	defff804 	addi	sp,sp,-32
   83140:	dcc00315 	stw	r19,12(sp)
   83144:	2027883a 	mov	r19,r4
   83148:	21000017 	ldw	r4,0(r4)
   8314c:	00c00044 	movi	r3,1
   83150:	dd400515 	stw	r21,20(sp)
   83154:	dd000415 	stw	r20,16(sp)
   83158:	ddc00715 	stw	r23,28(sp)
   8315c:	dd800615 	stw	r22,24(sp)
   83160:	dc800215 	stw	r18,8(sp)
   83164:	dc400115 	stw	r17,4(sp)
   83168:	dc000015 	stw	r16,0(sp)
   8316c:	282b883a 	mov	r21,r5
   83170:	3029883a 	mov	r20,r6
   83174:	1900632e 	bgeu	r3,r4,83304 <_fpadd_parts+0x1c8>
   83178:	28800017 	ldw	r2,0(r5)
   8317c:	1880812e 	bgeu	r3,r2,83384 <_fpadd_parts+0x248>
   83180:	00c00104 	movi	r3,4
   83184:	20c0dc26 	beq	r4,r3,834f8 <_fpadd_parts+0x3bc>
   83188:	10c07e26 	beq	r2,r3,83384 <_fpadd_parts+0x248>
   8318c:	00c00084 	movi	r3,2
   83190:	10c06726 	beq	r2,r3,83330 <_fpadd_parts+0x1f4>
   83194:	20c07b26 	beq	r4,r3,83384 <_fpadd_parts+0x248>
   83198:	9dc00217 	ldw	r23,8(r19)
   8319c:	28c00217 	ldw	r3,8(r5)
   831a0:	9c400317 	ldw	r17,12(r19)
   831a4:	2bc00317 	ldw	r15,12(r5)
   831a8:	b8cdc83a 	sub	r6,r23,r3
   831ac:	9c800417 	ldw	r18,16(r19)
   831b0:	2c000417 	ldw	r16,16(r5)
   831b4:	3009883a 	mov	r4,r6
   831b8:	30009716 	blt	r6,zero,83418 <_fpadd_parts+0x2dc>
   831bc:	00800fc4 	movi	r2,63
   831c0:	11806b16 	blt	r2,r6,83370 <_fpadd_parts+0x234>
   831c4:	0100a40e 	bge	zero,r4,83458 <_fpadd_parts+0x31c>
   831c8:	35bff804 	addi	r22,r6,-32
   831cc:	b000bc16 	blt	r22,zero,834c0 <_fpadd_parts+0x384>
   831d0:	8596d83a 	srl	r11,r16,r22
   831d4:	0019883a 	mov	r12,zero
   831d8:	0013883a 	mov	r9,zero
   831dc:	01000044 	movi	r4,1
   831e0:	0015883a 	mov	r10,zero
   831e4:	b000be16 	blt	r22,zero,834e0 <_fpadd_parts+0x3a4>
   831e8:	2590983a 	sll	r8,r4,r22
   831ec:	000f883a 	mov	r7,zero
   831f0:	00bfffc4 	movi	r2,-1
   831f4:	3889883a 	add	r4,r7,r2
   831f8:	408b883a 	add	r5,r8,r2
   831fc:	21cd803a 	cmpltu	r6,r4,r7
   83200:	314b883a 	add	r5,r6,r5
   83204:	7904703a 	and	r2,r15,r4
   83208:	8146703a 	and	r3,r16,r5
   8320c:	10c4b03a 	or	r2,r2,r3
   83210:	10000226 	beq	r2,zero,8321c <_fpadd_parts+0xe0>
   83214:	02400044 	movi	r9,1
   83218:	0015883a 	mov	r10,zero
   8321c:	5a5eb03a 	or	r15,r11,r9
   83220:	62a0b03a 	or	r16,r12,r10
   83224:	99400117 	ldw	r5,4(r19)
   83228:	a8800117 	ldw	r2,4(r21)
   8322c:	28806e26 	beq	r5,r2,833e8 <_fpadd_parts+0x2ac>
   83230:	28006626 	beq	r5,zero,833cc <_fpadd_parts+0x290>
   83234:	7c45c83a 	sub	r2,r15,r17
   83238:	7889803a 	cmpltu	r4,r15,r2
   8323c:	8487c83a 	sub	r3,r16,r18
   83240:	1909c83a 	sub	r4,r3,r4
   83244:	100d883a 	mov	r6,r2
   83248:	200f883a 	mov	r7,r4
   8324c:	38007716 	blt	r7,zero,8342c <_fpadd_parts+0x2f0>
   83250:	a5c00215 	stw	r23,8(r20)
   83254:	a1c00415 	stw	r7,16(r20)
   83258:	a0000115 	stw	zero,4(r20)
   8325c:	a1800315 	stw	r6,12(r20)
   83260:	a2000317 	ldw	r8,12(r20)
   83264:	a2400417 	ldw	r9,16(r20)
   83268:	00bfffc4 	movi	r2,-1
   8326c:	408b883a 	add	r5,r8,r2
   83270:	2a09803a 	cmpltu	r4,r5,r8
   83274:	488d883a 	add	r6,r9,r2
   83278:	01c40034 	movhi	r7,4096
   8327c:	39ffffc4 	addi	r7,r7,-1
   83280:	218d883a 	add	r6,r4,r6
   83284:	39801736 	bltu	r7,r6,832e4 <_fpadd_parts+0x1a8>
   83288:	31c06526 	beq	r6,r7,83420 <_fpadd_parts+0x2e4>
   8328c:	a3000217 	ldw	r12,8(r20)
   83290:	4209883a 	add	r4,r8,r8
   83294:	00bfffc4 	movi	r2,-1
   83298:	220f803a 	cmpltu	r7,r4,r8
   8329c:	4a4b883a 	add	r5,r9,r9
   832a0:	394f883a 	add	r7,r7,r5
   832a4:	2095883a 	add	r10,r4,r2
   832a8:	3897883a 	add	r11,r7,r2
   832ac:	510d803a 	cmpltu	r6,r10,r4
   832b0:	6099883a 	add	r12,r12,r2
   832b4:	32d7883a 	add	r11,r6,r11
   832b8:	00840034 	movhi	r2,4096
   832bc:	10bfffc4 	addi	r2,r2,-1
   832c0:	2011883a 	mov	r8,r4
   832c4:	3813883a 	mov	r9,r7
   832c8:	a1000315 	stw	r4,12(r20)
   832cc:	a1c00415 	stw	r7,16(r20)
   832d0:	a3000215 	stw	r12,8(r20)
   832d4:	12c00336 	bltu	r2,r11,832e4 <_fpadd_parts+0x1a8>
   832d8:	58bfed1e 	bne	r11,r2,83290 <_fpadd_parts+0x154>
   832dc:	00bfff84 	movi	r2,-2
   832e0:	12bfeb2e 	bgeu	r2,r10,83290 <_fpadd_parts+0x154>
   832e4:	a2800417 	ldw	r10,16(r20)
   832e8:	008000c4 	movi	r2,3
   832ec:	00c80034 	movhi	r3,8192
   832f0:	18ffffc4 	addi	r3,r3,-1
   832f4:	a2400317 	ldw	r9,12(r20)
   832f8:	a0800015 	stw	r2,0(r20)
   832fc:	1a802336 	bltu	r3,r10,8338c <_fpadd_parts+0x250>
   83300:	a027883a 	mov	r19,r20
   83304:	9805883a 	mov	r2,r19
   83308:	ddc00717 	ldw	r23,28(sp)
   8330c:	dd800617 	ldw	r22,24(sp)
   83310:	dd400517 	ldw	r21,20(sp)
   83314:	dd000417 	ldw	r20,16(sp)
   83318:	dcc00317 	ldw	r19,12(sp)
   8331c:	dc800217 	ldw	r18,8(sp)
   83320:	dc400117 	ldw	r17,4(sp)
   83324:	dc000017 	ldw	r16,0(sp)
   83328:	dec00804 	addi	sp,sp,32
   8332c:	f800283a 	ret
   83330:	20fff41e 	bne	r4,r3,83304 <_fpadd_parts+0x1c8>
   83334:	31000015 	stw	r4,0(r6)
   83338:	98800117 	ldw	r2,4(r19)
   8333c:	30800115 	stw	r2,4(r6)
   83340:	98c00217 	ldw	r3,8(r19)
   83344:	30c00215 	stw	r3,8(r6)
   83348:	98800317 	ldw	r2,12(r19)
   8334c:	30800315 	stw	r2,12(r6)
   83350:	98c00417 	ldw	r3,16(r19)
   83354:	30c00415 	stw	r3,16(r6)
   83358:	98800117 	ldw	r2,4(r19)
   8335c:	28c00117 	ldw	r3,4(r5)
   83360:	3027883a 	mov	r19,r6
   83364:	10c4703a 	and	r2,r2,r3
   83368:	30800115 	stw	r2,4(r6)
   8336c:	003fe506 	br	83304 <_fpadd_parts+0x1c8>
   83370:	1dc02616 	blt	r3,r23,8340c <_fpadd_parts+0x2d0>
   83374:	0023883a 	mov	r17,zero
   83378:	182f883a 	mov	r23,r3
   8337c:	0025883a 	mov	r18,zero
   83380:	003fa806 	br	83224 <_fpadd_parts+0xe8>
   83384:	a827883a 	mov	r19,r21
   83388:	003fde06 	br	83304 <_fpadd_parts+0x1c8>
   8338c:	01800044 	movi	r6,1
   83390:	500497fa 	slli	r2,r10,31
   83394:	4808d07a 	srli	r4,r9,1
   83398:	518ad83a 	srl	r5,r10,r6
   8339c:	a2000217 	ldw	r8,8(r20)
   833a0:	1108b03a 	or	r4,r2,r4
   833a4:	0007883a 	mov	r3,zero
   833a8:	4984703a 	and	r2,r9,r6
   833ac:	208cb03a 	or	r6,r4,r2
   833b0:	28ceb03a 	or	r7,r5,r3
   833b4:	42000044 	addi	r8,r8,1
   833b8:	a027883a 	mov	r19,r20
   833bc:	a1c00415 	stw	r7,16(r20)
   833c0:	a2000215 	stw	r8,8(r20)
   833c4:	a1800315 	stw	r6,12(r20)
   833c8:	003fce06 	br	83304 <_fpadd_parts+0x1c8>
   833cc:	8bc5c83a 	sub	r2,r17,r15
   833d0:	8889803a 	cmpltu	r4,r17,r2
   833d4:	9407c83a 	sub	r3,r18,r16
   833d8:	1909c83a 	sub	r4,r3,r4
   833dc:	100d883a 	mov	r6,r2
   833e0:	200f883a 	mov	r7,r4
   833e4:	003f9906 	br	8324c <_fpadd_parts+0x110>
   833e8:	7c45883a 	add	r2,r15,r17
   833ec:	13c9803a 	cmpltu	r4,r2,r15
   833f0:	8487883a 	add	r3,r16,r18
   833f4:	20c9883a 	add	r4,r4,r3
   833f8:	a1400115 	stw	r5,4(r20)
   833fc:	a5c00215 	stw	r23,8(r20)
   83400:	a0800315 	stw	r2,12(r20)
   83404:	a1000415 	stw	r4,16(r20)
   83408:	003fb606 	br	832e4 <_fpadd_parts+0x1a8>
   8340c:	001f883a 	mov	r15,zero
   83410:	0021883a 	mov	r16,zero
   83414:	003f8306 	br	83224 <_fpadd_parts+0xe8>
   83418:	018dc83a 	sub	r6,zero,r6
   8341c:	003f6706 	br	831bc <_fpadd_parts+0x80>
   83420:	00bfff84 	movi	r2,-2
   83424:	117faf36 	bltu	r2,r5,832e4 <_fpadd_parts+0x1a8>
   83428:	003f9806 	br	8328c <_fpadd_parts+0x150>
   8342c:	0005883a 	mov	r2,zero
   83430:	1189c83a 	sub	r4,r2,r6
   83434:	1105803a 	cmpltu	r2,r2,r4
   83438:	01cbc83a 	sub	r5,zero,r7
   8343c:	2885c83a 	sub	r2,r5,r2
   83440:	01800044 	movi	r6,1
   83444:	a1800115 	stw	r6,4(r20)
   83448:	a5c00215 	stw	r23,8(r20)
   8344c:	a1000315 	stw	r4,12(r20)
   83450:	a0800415 	stw	r2,16(r20)
   83454:	003f8206 	br	83260 <_fpadd_parts+0x124>
   83458:	203f7226 	beq	r4,zero,83224 <_fpadd_parts+0xe8>
   8345c:	35bff804 	addi	r22,r6,-32
   83460:	b9af883a 	add	r23,r23,r6
   83464:	b0003116 	blt	r22,zero,8352c <_fpadd_parts+0x3f0>
   83468:	959ad83a 	srl	r13,r18,r22
   8346c:	001d883a 	mov	r14,zero
   83470:	000f883a 	mov	r7,zero
   83474:	01000044 	movi	r4,1
   83478:	0011883a 	mov	r8,zero
   8347c:	b0002516 	blt	r22,zero,83514 <_fpadd_parts+0x3d8>
   83480:	2594983a 	sll	r10,r4,r22
   83484:	0013883a 	mov	r9,zero
   83488:	00bfffc4 	movi	r2,-1
   8348c:	4889883a 	add	r4,r9,r2
   83490:	508b883a 	add	r5,r10,r2
   83494:	224d803a 	cmpltu	r6,r4,r9
   83498:	314b883a 	add	r5,r6,r5
   8349c:	8904703a 	and	r2,r17,r4
   834a0:	9146703a 	and	r3,r18,r5
   834a4:	10c4b03a 	or	r2,r2,r3
   834a8:	10000226 	beq	r2,zero,834b4 <_fpadd_parts+0x378>
   834ac:	01c00044 	movi	r7,1
   834b0:	0011883a 	mov	r8,zero
   834b4:	69e2b03a 	or	r17,r13,r7
   834b8:	7224b03a 	or	r18,r14,r8
   834bc:	003f5906 	br	83224 <_fpadd_parts+0xe8>
   834c0:	8407883a 	add	r3,r16,r16
   834c4:	008007c4 	movi	r2,31
   834c8:	1185c83a 	sub	r2,r2,r6
   834cc:	1886983a 	sll	r3,r3,r2
   834d0:	7996d83a 	srl	r11,r15,r6
   834d4:	8198d83a 	srl	r12,r16,r6
   834d8:	1ad6b03a 	or	r11,r3,r11
   834dc:	003f3e06 	br	831d8 <_fpadd_parts+0x9c>
   834e0:	2006d07a 	srli	r3,r4,1
   834e4:	008007c4 	movi	r2,31
   834e8:	1185c83a 	sub	r2,r2,r6
   834ec:	1890d83a 	srl	r8,r3,r2
   834f0:	218e983a 	sll	r7,r4,r6
   834f4:	003f3e06 	br	831f0 <_fpadd_parts+0xb4>
   834f8:	113f821e 	bne	r2,r4,83304 <_fpadd_parts+0x1c8>
   834fc:	28c00117 	ldw	r3,4(r5)
   83500:	98800117 	ldw	r2,4(r19)
   83504:	10ff7f26 	beq	r2,r3,83304 <_fpadd_parts+0x1c8>
   83508:	04c00274 	movhi	r19,9
   8350c:	9cfcc804 	addi	r19,r19,-3296
   83510:	003f7c06 	br	83304 <_fpadd_parts+0x1c8>
   83514:	2006d07a 	srli	r3,r4,1
   83518:	008007c4 	movi	r2,31
   8351c:	1185c83a 	sub	r2,r2,r6
   83520:	1894d83a 	srl	r10,r3,r2
   83524:	2192983a 	sll	r9,r4,r6
   83528:	003fd706 	br	83488 <_fpadd_parts+0x34c>
   8352c:	9487883a 	add	r3,r18,r18
   83530:	008007c4 	movi	r2,31
   83534:	1185c83a 	sub	r2,r2,r6
   83538:	1886983a 	sll	r3,r3,r2
   8353c:	899ad83a 	srl	r13,r17,r6
   83540:	919cd83a 	srl	r14,r18,r6
   83544:	1b5ab03a 	or	r13,r3,r13
   83548:	003fc906 	br	83470 <_fpadd_parts+0x334>

0008354c <__subdf3>:
   8354c:	deffea04 	addi	sp,sp,-88
   83550:	dcc01415 	stw	r19,80(sp)
   83554:	dcc00404 	addi	r19,sp,16
   83558:	2011883a 	mov	r8,r4
   8355c:	2813883a 	mov	r9,r5
   83560:	dc401315 	stw	r17,76(sp)
   83564:	d809883a 	mov	r4,sp
   83568:	980b883a 	mov	r5,r19
   8356c:	dc400904 	addi	r17,sp,36
   83570:	dfc01515 	stw	ra,84(sp)
   83574:	da400115 	stw	r9,4(sp)
   83578:	d9c00315 	stw	r7,12(sp)
   8357c:	da000015 	stw	r8,0(sp)
   83580:	d9800215 	stw	r6,8(sp)
   83584:	00842e40 	call	842e4 <__unpack_d>
   83588:	d9000204 	addi	r4,sp,8
   8358c:	880b883a 	mov	r5,r17
   83590:	00842e40 	call	842e4 <__unpack_d>
   83594:	d8800a17 	ldw	r2,40(sp)
   83598:	880b883a 	mov	r5,r17
   8359c:	9809883a 	mov	r4,r19
   835a0:	d9800e04 	addi	r6,sp,56
   835a4:	1080005c 	xori	r2,r2,1
   835a8:	d8800a15 	stw	r2,40(sp)
   835ac:	008313c0 	call	8313c <_fpadd_parts>
   835b0:	1009883a 	mov	r4,r2
   835b4:	0083fd00 	call	83fd0 <__pack_d>
   835b8:	dfc01517 	ldw	ra,84(sp)
   835bc:	dcc01417 	ldw	r19,80(sp)
   835c0:	dc401317 	ldw	r17,76(sp)
   835c4:	dec01604 	addi	sp,sp,88
   835c8:	f800283a 	ret

000835cc <__adddf3>:
   835cc:	deffea04 	addi	sp,sp,-88
   835d0:	dcc01415 	stw	r19,80(sp)
   835d4:	dcc00404 	addi	r19,sp,16
   835d8:	2011883a 	mov	r8,r4
   835dc:	2813883a 	mov	r9,r5
   835e0:	dc401315 	stw	r17,76(sp)
   835e4:	d809883a 	mov	r4,sp
   835e8:	980b883a 	mov	r5,r19
   835ec:	dc400904 	addi	r17,sp,36
   835f0:	dfc01515 	stw	ra,84(sp)
   835f4:	da400115 	stw	r9,4(sp)
   835f8:	d9c00315 	stw	r7,12(sp)
   835fc:	da000015 	stw	r8,0(sp)
   83600:	d9800215 	stw	r6,8(sp)
   83604:	00842e40 	call	842e4 <__unpack_d>
   83608:	d9000204 	addi	r4,sp,8
   8360c:	880b883a 	mov	r5,r17
   83610:	00842e40 	call	842e4 <__unpack_d>
   83614:	d9800e04 	addi	r6,sp,56
   83618:	9809883a 	mov	r4,r19
   8361c:	880b883a 	mov	r5,r17
   83620:	008313c0 	call	8313c <_fpadd_parts>
   83624:	1009883a 	mov	r4,r2
   83628:	0083fd00 	call	83fd0 <__pack_d>
   8362c:	dfc01517 	ldw	ra,84(sp)
   83630:	dcc01417 	ldw	r19,80(sp)
   83634:	dc401317 	ldw	r17,76(sp)
   83638:	dec01604 	addi	sp,sp,88
   8363c:	f800283a 	ret

00083640 <__muldf3>:
   83640:	deffe004 	addi	sp,sp,-128
   83644:	dc401815 	stw	r17,96(sp)
   83648:	dc400404 	addi	r17,sp,16
   8364c:	2011883a 	mov	r8,r4
   83650:	2813883a 	mov	r9,r5
   83654:	dc001715 	stw	r16,92(sp)
   83658:	d809883a 	mov	r4,sp
   8365c:	880b883a 	mov	r5,r17
   83660:	dc000904 	addi	r16,sp,36
   83664:	dfc01f15 	stw	ra,124(sp)
   83668:	da400115 	stw	r9,4(sp)
   8366c:	d9c00315 	stw	r7,12(sp)
   83670:	da000015 	stw	r8,0(sp)
   83674:	d9800215 	stw	r6,8(sp)
   83678:	ddc01e15 	stw	r23,120(sp)
   8367c:	dd801d15 	stw	r22,116(sp)
   83680:	dd401c15 	stw	r21,112(sp)
   83684:	dd001b15 	stw	r20,108(sp)
   83688:	dcc01a15 	stw	r19,104(sp)
   8368c:	dc801915 	stw	r18,100(sp)
   83690:	00842e40 	call	842e4 <__unpack_d>
   83694:	d9000204 	addi	r4,sp,8
   83698:	800b883a 	mov	r5,r16
   8369c:	00842e40 	call	842e4 <__unpack_d>
   836a0:	d9000417 	ldw	r4,16(sp)
   836a4:	00800044 	movi	r2,1
   836a8:	1100102e 	bgeu	r2,r4,836ec <__muldf3+0xac>
   836ac:	d8c00917 	ldw	r3,36(sp)
   836b0:	10c0062e 	bgeu	r2,r3,836cc <__muldf3+0x8c>
   836b4:	00800104 	movi	r2,4
   836b8:	20800a26 	beq	r4,r2,836e4 <__muldf3+0xa4>
   836bc:	1880cc26 	beq	r3,r2,839f0 <__muldf3+0x3b0>
   836c0:	00800084 	movi	r2,2
   836c4:	20800926 	beq	r4,r2,836ec <__muldf3+0xac>
   836c8:	1880191e 	bne	r3,r2,83730 <__muldf3+0xf0>
   836cc:	d8c00a17 	ldw	r3,40(sp)
   836d0:	d8800517 	ldw	r2,20(sp)
   836d4:	8009883a 	mov	r4,r16
   836d8:	10c4c03a 	cmpne	r2,r2,r3
   836dc:	d8800a15 	stw	r2,40(sp)
   836e0:	00000706 	br	83700 <__muldf3+0xc0>
   836e4:	00800084 	movi	r2,2
   836e8:	1880c326 	beq	r3,r2,839f8 <__muldf3+0x3b8>
   836ec:	d8800517 	ldw	r2,20(sp)
   836f0:	d8c00a17 	ldw	r3,40(sp)
   836f4:	8809883a 	mov	r4,r17
   836f8:	10c4c03a 	cmpne	r2,r2,r3
   836fc:	d8800515 	stw	r2,20(sp)
   83700:	0083fd00 	call	83fd0 <__pack_d>
   83704:	dfc01f17 	ldw	ra,124(sp)
   83708:	ddc01e17 	ldw	r23,120(sp)
   8370c:	dd801d17 	ldw	r22,116(sp)
   83710:	dd401c17 	ldw	r21,112(sp)
   83714:	dd001b17 	ldw	r20,108(sp)
   83718:	dcc01a17 	ldw	r19,104(sp)
   8371c:	dc801917 	ldw	r18,100(sp)
   83720:	dc401817 	ldw	r17,96(sp)
   83724:	dc001717 	ldw	r16,92(sp)
   83728:	dec02004 	addi	sp,sp,128
   8372c:	f800283a 	ret
   83730:	dd800717 	ldw	r22,28(sp)
   83734:	dc800c17 	ldw	r18,48(sp)
   83738:	002b883a 	mov	r21,zero
   8373c:	0023883a 	mov	r17,zero
   83740:	a80b883a 	mov	r5,r21
   83744:	b00d883a 	mov	r6,r22
   83748:	880f883a 	mov	r7,r17
   8374c:	ddc00817 	ldw	r23,32(sp)
   83750:	dcc00d17 	ldw	r19,52(sp)
   83754:	9009883a 	mov	r4,r18
   83758:	0083eb80 	call	83eb8 <__muldi3>
   8375c:	001b883a 	mov	r13,zero
   83760:	680f883a 	mov	r7,r13
   83764:	b009883a 	mov	r4,r22
   83768:	000b883a 	mov	r5,zero
   8376c:	980d883a 	mov	r6,r19
   83770:	b82d883a 	mov	r22,r23
   83774:	002f883a 	mov	r23,zero
   83778:	db401615 	stw	r13,88(sp)
   8377c:	d8801315 	stw	r2,76(sp)
   83780:	d8c01415 	stw	r3,80(sp)
   83784:	dcc01515 	stw	r19,84(sp)
   83788:	0083eb80 	call	83eb8 <__muldi3>
   8378c:	b00d883a 	mov	r6,r22
   83790:	000b883a 	mov	r5,zero
   83794:	9009883a 	mov	r4,r18
   83798:	b80f883a 	mov	r7,r23
   8379c:	1021883a 	mov	r16,r2
   837a0:	1823883a 	mov	r17,r3
   837a4:	0083eb80 	call	83eb8 <__muldi3>
   837a8:	8085883a 	add	r2,r16,r2
   837ac:	140d803a 	cmpltu	r6,r2,r16
   837b0:	88c7883a 	add	r3,r17,r3
   837b4:	30cd883a 	add	r6,r6,r3
   837b8:	1029883a 	mov	r20,r2
   837bc:	302b883a 	mov	r21,r6
   837c0:	da801317 	ldw	r10,76(sp)
   837c4:	dac01417 	ldw	r11,80(sp)
   837c8:	db001517 	ldw	r12,84(sp)
   837cc:	db401617 	ldw	r13,88(sp)
   837d0:	3440612e 	bgeu	r6,r17,83958 <__muldf3+0x318>
   837d4:	0009883a 	mov	r4,zero
   837d8:	5105883a 	add	r2,r10,r4
   837dc:	128d803a 	cmpltu	r6,r2,r10
   837e0:	5d07883a 	add	r3,r11,r20
   837e4:	30cd883a 	add	r6,r6,r3
   837e8:	0021883a 	mov	r16,zero
   837ec:	04400044 	movi	r17,1
   837f0:	1025883a 	mov	r18,r2
   837f4:	3027883a 	mov	r19,r6
   837f8:	32c06236 	bltu	r6,r11,83984 <__muldf3+0x344>
   837fc:	59807a26 	beq	r11,r6,839e8 <__muldf3+0x3a8>
   83800:	680b883a 	mov	r5,r13
   83804:	b80f883a 	mov	r7,r23
   83808:	6009883a 	mov	r4,r12
   8380c:	b00d883a 	mov	r6,r22
   83810:	0083eb80 	call	83eb8 <__muldi3>
   83814:	1009883a 	mov	r4,r2
   83818:	000f883a 	mov	r7,zero
   8381c:	1545883a 	add	r2,r2,r21
   83820:	1111803a 	cmpltu	r8,r2,r4
   83824:	19c7883a 	add	r3,r3,r7
   83828:	40c7883a 	add	r3,r8,r3
   8382c:	88cb883a 	add	r5,r17,r3
   83830:	d8c00617 	ldw	r3,24(sp)
   83834:	8089883a 	add	r4,r16,r2
   83838:	d8800b17 	ldw	r2,44(sp)
   8383c:	18c00104 	addi	r3,r3,4
   83840:	240d803a 	cmpltu	r6,r4,r16
   83844:	10c7883a 	add	r3,r2,r3
   83848:	2013883a 	mov	r9,r4
   8384c:	d8800a17 	ldw	r2,40(sp)
   83850:	d9000517 	ldw	r4,20(sp)
   83854:	314d883a 	add	r6,r6,r5
   83858:	3015883a 	mov	r10,r6
   8385c:	2088c03a 	cmpne	r4,r4,r2
   83860:	00880034 	movhi	r2,8192
   83864:	10bfffc4 	addi	r2,r2,-1
   83868:	d9000f15 	stw	r4,60(sp)
   8386c:	d8c01015 	stw	r3,64(sp)
   83870:	1180162e 	bgeu	r2,r6,838cc <__muldf3+0x28c>
   83874:	1811883a 	mov	r8,r3
   83878:	101f883a 	mov	r15,r2
   8387c:	980497fa 	slli	r2,r19,31
   83880:	9016d07a 	srli	r11,r18,1
   83884:	500697fa 	slli	r3,r10,31
   83888:	480cd07a 	srli	r6,r9,1
   8388c:	500ed07a 	srli	r7,r10,1
   83890:	12d6b03a 	or	r11,r2,r11
   83894:	00800044 	movi	r2,1
   83898:	198cb03a 	or	r6,r3,r6
   8389c:	4888703a 	and	r4,r9,r2
   838a0:	9818d07a 	srli	r12,r19,1
   838a4:	001b883a 	mov	r13,zero
   838a8:	03a00034 	movhi	r14,32768
   838ac:	3013883a 	mov	r9,r6
   838b0:	3815883a 	mov	r10,r7
   838b4:	4091883a 	add	r8,r8,r2
   838b8:	20000226 	beq	r4,zero,838c4 <__muldf3+0x284>
   838bc:	5b64b03a 	or	r18,r11,r13
   838c0:	63a6b03a 	or	r19,r12,r14
   838c4:	7abfed36 	bltu	r15,r10,8387c <__muldf3+0x23c>
   838c8:	da001015 	stw	r8,64(sp)
   838cc:	00840034 	movhi	r2,4096
   838d0:	10bfffc4 	addi	r2,r2,-1
   838d4:	12801436 	bltu	r2,r10,83928 <__muldf3+0x2e8>
   838d8:	da001017 	ldw	r8,64(sp)
   838dc:	101f883a 	mov	r15,r2
   838e0:	4a45883a 	add	r2,r9,r9
   838e4:	124d803a 	cmpltu	r6,r2,r9
   838e8:	5287883a 	add	r3,r10,r10
   838ec:	9497883a 	add	r11,r18,r18
   838f0:	5c8f803a 	cmpltu	r7,r11,r18
   838f4:	9cd9883a 	add	r12,r19,r19
   838f8:	01000044 	movi	r4,1
   838fc:	30cd883a 	add	r6,r6,r3
   83900:	3b0f883a 	add	r7,r7,r12
   83904:	423fffc4 	addi	r8,r8,-1
   83908:	1013883a 	mov	r9,r2
   8390c:	3015883a 	mov	r10,r6
   83910:	111ab03a 	or	r13,r2,r4
   83914:	98003016 	blt	r19,zero,839d8 <__muldf3+0x398>
   83918:	5825883a 	mov	r18,r11
   8391c:	3827883a 	mov	r19,r7
   83920:	7abfef2e 	bgeu	r15,r10,838e0 <__muldf3+0x2a0>
   83924:	da001015 	stw	r8,64(sp)
   83928:	00803fc4 	movi	r2,255
   8392c:	488e703a 	and	r7,r9,r2
   83930:	00802004 	movi	r2,128
   83934:	0007883a 	mov	r3,zero
   83938:	0011883a 	mov	r8,zero
   8393c:	38801826 	beq	r7,r2,839a0 <__muldf3+0x360>
   83940:	008000c4 	movi	r2,3
   83944:	d9000e04 	addi	r4,sp,56
   83948:	da801215 	stw	r10,72(sp)
   8394c:	d8800e15 	stw	r2,56(sp)
   83950:	da401115 	stw	r9,68(sp)
   83954:	003f6a06 	br	83700 <__muldf3+0xc0>
   83958:	89802126 	beq	r17,r6,839e0 <__muldf3+0x3a0>
   8395c:	0009883a 	mov	r4,zero
   83960:	5105883a 	add	r2,r10,r4
   83964:	128d803a 	cmpltu	r6,r2,r10
   83968:	5d07883a 	add	r3,r11,r20
   8396c:	30cd883a 	add	r6,r6,r3
   83970:	0021883a 	mov	r16,zero
   83974:	0023883a 	mov	r17,zero
   83978:	1025883a 	mov	r18,r2
   8397c:	3027883a 	mov	r19,r6
   83980:	32ff9e2e 	bgeu	r6,r11,837fc <__muldf3+0x1bc>
   83984:	00800044 	movi	r2,1
   83988:	8089883a 	add	r4,r16,r2
   8398c:	240d803a 	cmpltu	r6,r4,r16
   83990:	344d883a 	add	r6,r6,r17
   83994:	2021883a 	mov	r16,r4
   83998:	3023883a 	mov	r17,r6
   8399c:	003f9806 	br	83800 <__muldf3+0x1c0>
   839a0:	403fe71e 	bne	r8,zero,83940 <__muldf3+0x300>
   839a4:	01004004 	movi	r4,256
   839a8:	4904703a 	and	r2,r9,r4
   839ac:	10c4b03a 	or	r2,r2,r3
   839b0:	103fe31e 	bne	r2,zero,83940 <__muldf3+0x300>
   839b4:	94c4b03a 	or	r2,r18,r19
   839b8:	103fe126 	beq	r2,zero,83940 <__muldf3+0x300>
   839bc:	49c5883a 	add	r2,r9,r7
   839c0:	1251803a 	cmpltu	r8,r2,r9
   839c4:	4291883a 	add	r8,r8,r10
   839c8:	013fc004 	movi	r4,-256
   839cc:	1112703a 	and	r9,r2,r4
   839d0:	4015883a 	mov	r10,r8
   839d4:	003fda06 	br	83940 <__muldf3+0x300>
   839d8:	6813883a 	mov	r9,r13
   839dc:	003fce06 	br	83918 <__muldf3+0x2d8>
   839e0:	143f7c36 	bltu	r2,r16,837d4 <__muldf3+0x194>
   839e4:	003fdd06 	br	8395c <__muldf3+0x31c>
   839e8:	12bf852e 	bgeu	r2,r10,83800 <__muldf3+0x1c0>
   839ec:	003fe506 	br	83984 <__muldf3+0x344>
   839f0:	00800084 	movi	r2,2
   839f4:	20bf351e 	bne	r4,r2,836cc <__muldf3+0x8c>
   839f8:	01000274 	movhi	r4,9
   839fc:	213cc804 	addi	r4,r4,-3296
   83a00:	003f3f06 	br	83700 <__muldf3+0xc0>

00083a04 <__eqdf2>:
   83a04:	deffef04 	addi	sp,sp,-68
   83a08:	dc400f15 	stw	r17,60(sp)
   83a0c:	dc400404 	addi	r17,sp,16
   83a10:	2005883a 	mov	r2,r4
   83a14:	2807883a 	mov	r3,r5
   83a18:	dc000e15 	stw	r16,56(sp)
   83a1c:	d809883a 	mov	r4,sp
   83a20:	880b883a 	mov	r5,r17
   83a24:	dc000904 	addi	r16,sp,36
   83a28:	d8c00115 	stw	r3,4(sp)
   83a2c:	d8800015 	stw	r2,0(sp)
   83a30:	d9800215 	stw	r6,8(sp)
   83a34:	dfc01015 	stw	ra,64(sp)
   83a38:	d9c00315 	stw	r7,12(sp)
   83a3c:	00842e40 	call	842e4 <__unpack_d>
   83a40:	d9000204 	addi	r4,sp,8
   83a44:	800b883a 	mov	r5,r16
   83a48:	00842e40 	call	842e4 <__unpack_d>
   83a4c:	d8800417 	ldw	r2,16(sp)
   83a50:	00c00044 	movi	r3,1
   83a54:	180d883a 	mov	r6,r3
   83a58:	1880062e 	bgeu	r3,r2,83a74 <__eqdf2+0x70>
   83a5c:	d8800917 	ldw	r2,36(sp)
   83a60:	8809883a 	mov	r4,r17
   83a64:	800b883a 	mov	r5,r16
   83a68:	1880022e 	bgeu	r3,r2,83a74 <__eqdf2+0x70>
   83a6c:	008441c0 	call	8441c <__fpcmp_parts_d>
   83a70:	100d883a 	mov	r6,r2
   83a74:	3005883a 	mov	r2,r6
   83a78:	dfc01017 	ldw	ra,64(sp)
   83a7c:	dc400f17 	ldw	r17,60(sp)
   83a80:	dc000e17 	ldw	r16,56(sp)
   83a84:	dec01104 	addi	sp,sp,68
   83a88:	f800283a 	ret

00083a8c <__gtdf2>:
   83a8c:	deffef04 	addi	sp,sp,-68
   83a90:	dc400f15 	stw	r17,60(sp)
   83a94:	dc400404 	addi	r17,sp,16
   83a98:	2005883a 	mov	r2,r4
   83a9c:	2807883a 	mov	r3,r5
   83aa0:	dc000e15 	stw	r16,56(sp)
   83aa4:	d809883a 	mov	r4,sp
   83aa8:	880b883a 	mov	r5,r17
   83aac:	dc000904 	addi	r16,sp,36
   83ab0:	d8c00115 	stw	r3,4(sp)
   83ab4:	d8800015 	stw	r2,0(sp)
   83ab8:	d9800215 	stw	r6,8(sp)
   83abc:	dfc01015 	stw	ra,64(sp)
   83ac0:	d9c00315 	stw	r7,12(sp)
   83ac4:	00842e40 	call	842e4 <__unpack_d>
   83ac8:	d9000204 	addi	r4,sp,8
   83acc:	800b883a 	mov	r5,r16
   83ad0:	00842e40 	call	842e4 <__unpack_d>
   83ad4:	d8800417 	ldw	r2,16(sp)
   83ad8:	00c00044 	movi	r3,1
   83adc:	01bfffc4 	movi	r6,-1
   83ae0:	1880062e 	bgeu	r3,r2,83afc <__gtdf2+0x70>
   83ae4:	d8800917 	ldw	r2,36(sp)
   83ae8:	8809883a 	mov	r4,r17
   83aec:	800b883a 	mov	r5,r16
   83af0:	1880022e 	bgeu	r3,r2,83afc <__gtdf2+0x70>
   83af4:	008441c0 	call	8441c <__fpcmp_parts_d>
   83af8:	100d883a 	mov	r6,r2
   83afc:	3005883a 	mov	r2,r6
   83b00:	dfc01017 	ldw	ra,64(sp)
   83b04:	dc400f17 	ldw	r17,60(sp)
   83b08:	dc000e17 	ldw	r16,56(sp)
   83b0c:	dec01104 	addi	sp,sp,68
   83b10:	f800283a 	ret

00083b14 <__gedf2>:
   83b14:	deffef04 	addi	sp,sp,-68
   83b18:	dc400f15 	stw	r17,60(sp)
   83b1c:	dc400404 	addi	r17,sp,16
   83b20:	2005883a 	mov	r2,r4
   83b24:	2807883a 	mov	r3,r5
   83b28:	dc000e15 	stw	r16,56(sp)
   83b2c:	d809883a 	mov	r4,sp
   83b30:	880b883a 	mov	r5,r17
   83b34:	dc000904 	addi	r16,sp,36
   83b38:	d8c00115 	stw	r3,4(sp)
   83b3c:	d8800015 	stw	r2,0(sp)
   83b40:	d9800215 	stw	r6,8(sp)
   83b44:	dfc01015 	stw	ra,64(sp)
   83b48:	d9c00315 	stw	r7,12(sp)
   83b4c:	00842e40 	call	842e4 <__unpack_d>
   83b50:	d9000204 	addi	r4,sp,8
   83b54:	800b883a 	mov	r5,r16
   83b58:	00842e40 	call	842e4 <__unpack_d>
   83b5c:	d8800417 	ldw	r2,16(sp)
   83b60:	00c00044 	movi	r3,1
   83b64:	01bfffc4 	movi	r6,-1
   83b68:	1880062e 	bgeu	r3,r2,83b84 <__gedf2+0x70>
   83b6c:	d8800917 	ldw	r2,36(sp)
   83b70:	8809883a 	mov	r4,r17
   83b74:	800b883a 	mov	r5,r16
   83b78:	1880022e 	bgeu	r3,r2,83b84 <__gedf2+0x70>
   83b7c:	008441c0 	call	8441c <__fpcmp_parts_d>
   83b80:	100d883a 	mov	r6,r2
   83b84:	3005883a 	mov	r2,r6
   83b88:	dfc01017 	ldw	ra,64(sp)
   83b8c:	dc400f17 	ldw	r17,60(sp)
   83b90:	dc000e17 	ldw	r16,56(sp)
   83b94:	dec01104 	addi	sp,sp,68
   83b98:	f800283a 	ret

00083b9c <__floatsidf>:
   83b9c:	2006d7fa 	srli	r3,r4,31
   83ba0:	defff604 	addi	sp,sp,-40
   83ba4:	008000c4 	movi	r2,3
   83ba8:	dfc00915 	stw	ra,36(sp)
   83bac:	dcc00815 	stw	r19,32(sp)
   83bb0:	dc800715 	stw	r18,28(sp)
   83bb4:	dc400615 	stw	r17,24(sp)
   83bb8:	dc000515 	stw	r16,20(sp)
   83bbc:	d8800015 	stw	r2,0(sp)
   83bc0:	d8c00115 	stw	r3,4(sp)
   83bc4:	20000f1e 	bne	r4,zero,83c04 <__floatsidf+0x68>
   83bc8:	00800084 	movi	r2,2
   83bcc:	d8800015 	stw	r2,0(sp)
   83bd0:	d809883a 	mov	r4,sp
   83bd4:	0083fd00 	call	83fd0 <__pack_d>
   83bd8:	1009883a 	mov	r4,r2
   83bdc:	180b883a 	mov	r5,r3
   83be0:	2005883a 	mov	r2,r4
   83be4:	2807883a 	mov	r3,r5
   83be8:	dfc00917 	ldw	ra,36(sp)
   83bec:	dcc00817 	ldw	r19,32(sp)
   83bf0:	dc800717 	ldw	r18,28(sp)
   83bf4:	dc400617 	ldw	r17,24(sp)
   83bf8:	dc000517 	ldw	r16,20(sp)
   83bfc:	dec00a04 	addi	sp,sp,40
   83c00:	f800283a 	ret
   83c04:	00800f04 	movi	r2,60
   83c08:	1807003a 	cmpeq	r3,r3,zero
   83c0c:	d8800215 	stw	r2,8(sp)
   83c10:	18001126 	beq	r3,zero,83c58 <__floatsidf+0xbc>
   83c14:	0027883a 	mov	r19,zero
   83c18:	2025883a 	mov	r18,r4
   83c1c:	d9000315 	stw	r4,12(sp)
   83c20:	dcc00415 	stw	r19,16(sp)
   83c24:	0083f500 	call	83f50 <__clzsi2>
   83c28:	11000744 	addi	r4,r2,29
   83c2c:	013fe80e 	bge	zero,r4,83bd0 <__floatsidf+0x34>
   83c30:	10bfff44 	addi	r2,r2,-3
   83c34:	10000c16 	blt	r2,zero,83c68 <__floatsidf+0xcc>
   83c38:	90a2983a 	sll	r17,r18,r2
   83c3c:	0021883a 	mov	r16,zero
   83c40:	d8800217 	ldw	r2,8(sp)
   83c44:	dc400415 	stw	r17,16(sp)
   83c48:	dc000315 	stw	r16,12(sp)
   83c4c:	1105c83a 	sub	r2,r2,r4
   83c50:	d8800215 	stw	r2,8(sp)
   83c54:	003fde06 	br	83bd0 <__floatsidf+0x34>
   83c58:	00a00034 	movhi	r2,32768
   83c5c:	20800a26 	beq	r4,r2,83c88 <__floatsidf+0xec>
   83c60:	0109c83a 	sub	r4,zero,r4
   83c64:	003feb06 	br	83c14 <__floatsidf+0x78>
   83c68:	9006d07a 	srli	r3,r18,1
   83c6c:	008007c4 	movi	r2,31
   83c70:	1105c83a 	sub	r2,r2,r4
   83c74:	1886d83a 	srl	r3,r3,r2
   83c78:	9922983a 	sll	r17,r19,r4
   83c7c:	9120983a 	sll	r16,r18,r4
   83c80:	1c62b03a 	or	r17,r3,r17
   83c84:	003fee06 	br	83c40 <__floatsidf+0xa4>
   83c88:	0009883a 	mov	r4,zero
   83c8c:	01707834 	movhi	r5,49632
   83c90:	003fd306 	br	83be0 <__floatsidf+0x44>

00083c94 <__fixdfsi>:
   83c94:	defff804 	addi	sp,sp,-32
   83c98:	2005883a 	mov	r2,r4
   83c9c:	2807883a 	mov	r3,r5
   83ca0:	d809883a 	mov	r4,sp
   83ca4:	d9400204 	addi	r5,sp,8
   83ca8:	d8c00115 	stw	r3,4(sp)
   83cac:	d8800015 	stw	r2,0(sp)
   83cb0:	dfc00715 	stw	ra,28(sp)
   83cb4:	00842e40 	call	842e4 <__unpack_d>
   83cb8:	d8c00217 	ldw	r3,8(sp)
   83cbc:	00800084 	movi	r2,2
   83cc0:	1880051e 	bne	r3,r2,83cd8 <__fixdfsi+0x44>
   83cc4:	0007883a 	mov	r3,zero
   83cc8:	1805883a 	mov	r2,r3
   83ccc:	dfc00717 	ldw	ra,28(sp)
   83cd0:	dec00804 	addi	sp,sp,32
   83cd4:	f800283a 	ret
   83cd8:	00800044 	movi	r2,1
   83cdc:	10fff92e 	bgeu	r2,r3,83cc4 <__fixdfsi+0x30>
   83ce0:	00800104 	movi	r2,4
   83ce4:	18800426 	beq	r3,r2,83cf8 <__fixdfsi+0x64>
   83ce8:	d8c00417 	ldw	r3,16(sp)
   83cec:	183ff516 	blt	r3,zero,83cc4 <__fixdfsi+0x30>
   83cf0:	00800784 	movi	r2,30
   83cf4:	10c0080e 	bge	r2,r3,83d18 <__fixdfsi+0x84>
   83cf8:	d8800317 	ldw	r2,12(sp)
   83cfc:	1000121e 	bne	r2,zero,83d48 <__fixdfsi+0xb4>
   83d00:	00e00034 	movhi	r3,32768
   83d04:	18ffffc4 	addi	r3,r3,-1
   83d08:	1805883a 	mov	r2,r3
   83d0c:	dfc00717 	ldw	ra,28(sp)
   83d10:	dec00804 	addi	sp,sp,32
   83d14:	f800283a 	ret
   83d18:	00800f04 	movi	r2,60
   83d1c:	10d1c83a 	sub	r8,r2,r3
   83d20:	40bff804 	addi	r2,r8,-32
   83d24:	d9800517 	ldw	r6,20(sp)
   83d28:	d9c00617 	ldw	r7,24(sp)
   83d2c:	10000816 	blt	r2,zero,83d50 <__fixdfsi+0xbc>
   83d30:	3888d83a 	srl	r4,r7,r2
   83d34:	d8800317 	ldw	r2,12(sp)
   83d38:	2007883a 	mov	r3,r4
   83d3c:	103fe226 	beq	r2,zero,83cc8 <__fixdfsi+0x34>
   83d40:	0107c83a 	sub	r3,zero,r4
   83d44:	003fe006 	br	83cc8 <__fixdfsi+0x34>
   83d48:	00e00034 	movhi	r3,32768
   83d4c:	003fde06 	br	83cc8 <__fixdfsi+0x34>
   83d50:	39c7883a 	add	r3,r7,r7
   83d54:	008007c4 	movi	r2,31
   83d58:	1205c83a 	sub	r2,r2,r8
   83d5c:	1886983a 	sll	r3,r3,r2
   83d60:	3208d83a 	srl	r4,r6,r8
   83d64:	1908b03a 	or	r4,r3,r4
   83d68:	003ff206 	br	83d34 <__fixdfsi+0xa0>

00083d6c <udivmodsi4>:
   83d6c:	29001b2e 	bgeu	r5,r4,83ddc <udivmodsi4+0x70>
   83d70:	28001a16 	blt	r5,zero,83ddc <udivmodsi4+0x70>
   83d74:	00800044 	movi	r2,1
   83d78:	0007883a 	mov	r3,zero
   83d7c:	01c007c4 	movi	r7,31
   83d80:	00000306 	br	83d90 <udivmodsi4+0x24>
   83d84:	19c01326 	beq	r3,r7,83dd4 <udivmodsi4+0x68>
   83d88:	18c00044 	addi	r3,r3,1
   83d8c:	28000416 	blt	r5,zero,83da0 <udivmodsi4+0x34>
   83d90:	294b883a 	add	r5,r5,r5
   83d94:	1085883a 	add	r2,r2,r2
   83d98:	293ffa36 	bltu	r5,r4,83d84 <udivmodsi4+0x18>
   83d9c:	10000d26 	beq	r2,zero,83dd4 <udivmodsi4+0x68>
   83da0:	0007883a 	mov	r3,zero
   83da4:	21400236 	bltu	r4,r5,83db0 <udivmodsi4+0x44>
   83da8:	2149c83a 	sub	r4,r4,r5
   83dac:	1886b03a 	or	r3,r3,r2
   83db0:	1004d07a 	srli	r2,r2,1
   83db4:	280ad07a 	srli	r5,r5,1
   83db8:	103ffa1e 	bne	r2,zero,83da4 <udivmodsi4+0x38>
   83dbc:	30000226 	beq	r6,zero,83dc8 <udivmodsi4+0x5c>
   83dc0:	2005883a 	mov	r2,r4
   83dc4:	f800283a 	ret
   83dc8:	1809883a 	mov	r4,r3
   83dcc:	2005883a 	mov	r2,r4
   83dd0:	f800283a 	ret
   83dd4:	0007883a 	mov	r3,zero
   83dd8:	003ff806 	br	83dbc <udivmodsi4+0x50>
   83ddc:	00800044 	movi	r2,1
   83de0:	0007883a 	mov	r3,zero
   83de4:	003fef06 	br	83da4 <udivmodsi4+0x38>

00083de8 <__divsi3>:
   83de8:	defffe04 	addi	sp,sp,-8
   83dec:	dc000015 	stw	r16,0(sp)
   83df0:	dfc00115 	stw	ra,4(sp)
   83df4:	0021883a 	mov	r16,zero
   83df8:	20000c16 	blt	r4,zero,83e2c <__divsi3+0x44>
   83dfc:	000d883a 	mov	r6,zero
   83e00:	28000e16 	blt	r5,zero,83e3c <__divsi3+0x54>
   83e04:	0083d6c0 	call	83d6c <udivmodsi4>
   83e08:	1007883a 	mov	r3,r2
   83e0c:	8005003a 	cmpeq	r2,r16,zero
   83e10:	1000011e 	bne	r2,zero,83e18 <__divsi3+0x30>
   83e14:	00c7c83a 	sub	r3,zero,r3
   83e18:	1805883a 	mov	r2,r3
   83e1c:	dfc00117 	ldw	ra,4(sp)
   83e20:	dc000017 	ldw	r16,0(sp)
   83e24:	dec00204 	addi	sp,sp,8
   83e28:	f800283a 	ret
   83e2c:	0109c83a 	sub	r4,zero,r4
   83e30:	04000044 	movi	r16,1
   83e34:	000d883a 	mov	r6,zero
   83e38:	283ff20e 	bge	r5,zero,83e04 <__divsi3+0x1c>
   83e3c:	014bc83a 	sub	r5,zero,r5
   83e40:	8021003a 	cmpeq	r16,r16,zero
   83e44:	003fef06 	br	83e04 <__divsi3+0x1c>

00083e48 <__modsi3>:
   83e48:	deffff04 	addi	sp,sp,-4
   83e4c:	dfc00015 	stw	ra,0(sp)
   83e50:	01800044 	movi	r6,1
   83e54:	2807883a 	mov	r3,r5
   83e58:	20000416 	blt	r4,zero,83e6c <__modsi3+0x24>
   83e5c:	28000c16 	blt	r5,zero,83e90 <__modsi3+0x48>
   83e60:	dfc00017 	ldw	ra,0(sp)
   83e64:	dec00104 	addi	sp,sp,4
   83e68:	0083d6c1 	jmpi	83d6c <udivmodsi4>
   83e6c:	0109c83a 	sub	r4,zero,r4
   83e70:	28000b16 	blt	r5,zero,83ea0 <__modsi3+0x58>
   83e74:	180b883a 	mov	r5,r3
   83e78:	01800044 	movi	r6,1
   83e7c:	0083d6c0 	call	83d6c <udivmodsi4>
   83e80:	0085c83a 	sub	r2,zero,r2
   83e84:	dfc00017 	ldw	ra,0(sp)
   83e88:	dec00104 	addi	sp,sp,4
   83e8c:	f800283a 	ret
   83e90:	014bc83a 	sub	r5,zero,r5
   83e94:	dfc00017 	ldw	ra,0(sp)
   83e98:	dec00104 	addi	sp,sp,4
   83e9c:	0083d6c1 	jmpi	83d6c <udivmodsi4>
   83ea0:	0147c83a 	sub	r3,zero,r5
   83ea4:	003ff306 	br	83e74 <__modsi3+0x2c>

00083ea8 <__udivsi3>:
   83ea8:	000d883a 	mov	r6,zero
   83eac:	0083d6c1 	jmpi	83d6c <udivmodsi4>

00083eb0 <__umodsi3>:
   83eb0:	01800044 	movi	r6,1
   83eb4:	0083d6c1 	jmpi	83d6c <udivmodsi4>

00083eb8 <__muldi3>:
   83eb8:	2011883a 	mov	r8,r4
   83ebc:	427fffcc 	andi	r9,r8,65535
   83ec0:	4018d43a 	srli	r12,r8,16
   83ec4:	32bfffcc 	andi	r10,r6,65535
   83ec8:	3016d43a 	srli	r11,r6,16
   83ecc:	4a85383a 	mul	r2,r9,r10
   83ed0:	6295383a 	mul	r10,r12,r10
   83ed4:	4ad3383a 	mul	r9,r9,r11
   83ed8:	113fffcc 	andi	r4,r2,65535
   83edc:	1004d43a 	srli	r2,r2,16
   83ee0:	4a93883a 	add	r9,r9,r10
   83ee4:	3807883a 	mov	r3,r7
   83ee8:	1245883a 	add	r2,r2,r9
   83eec:	280f883a 	mov	r7,r5
   83ef0:	180b883a 	mov	r5,r3
   83ef4:	1006943a 	slli	r3,r2,16
   83ef8:	defffd04 	addi	sp,sp,-12
   83efc:	dc800215 	stw	r18,8(sp)
   83f00:	1907883a 	add	r3,r3,r4
   83f04:	dc400115 	stw	r17,4(sp)
   83f08:	dc000015 	stw	r16,0(sp)
   83f0c:	4165383a 	mul	r18,r8,r5
   83f10:	31e3383a 	mul	r17,r6,r7
   83f14:	1012d43a 	srli	r9,r2,16
   83f18:	62d9383a 	mul	r12,r12,r11
   83f1c:	181f883a 	mov	r15,r3
   83f20:	1280022e 	bgeu	r2,r10,83f2c <__muldi3+0x74>
   83f24:	00800074 	movhi	r2,1
   83f28:	6099883a 	add	r12,r12,r2
   83f2c:	624d883a 	add	r6,r12,r9
   83f30:	9187883a 	add	r3,r18,r6
   83f34:	88c7883a 	add	r3,r17,r3
   83f38:	7805883a 	mov	r2,r15
   83f3c:	dc800217 	ldw	r18,8(sp)
   83f40:	dc400117 	ldw	r17,4(sp)
   83f44:	dc000017 	ldw	r16,0(sp)
   83f48:	dec00304 	addi	sp,sp,12
   83f4c:	f800283a 	ret

00083f50 <__clzsi2>:
   83f50:	00bfffd4 	movui	r2,65535
   83f54:	11000e36 	bltu	r2,r4,83f90 <__clzsi2+0x40>
   83f58:	00803fc4 	movi	r2,255
   83f5c:	01400204 	movi	r5,8
   83f60:	0007883a 	mov	r3,zero
   83f64:	11001036 	bltu	r2,r4,83fa8 <__clzsi2+0x58>
   83f68:	000b883a 	mov	r5,zero
   83f6c:	20c6d83a 	srl	r3,r4,r3
   83f70:	00800274 	movhi	r2,9
   83f74:	10bccd04 	addi	r2,r2,-3276
   83f78:	1887883a 	add	r3,r3,r2
   83f7c:	18800003 	ldbu	r2,0(r3)
   83f80:	00c00804 	movi	r3,32
   83f84:	2885883a 	add	r2,r5,r2
   83f88:	1885c83a 	sub	r2,r3,r2
   83f8c:	f800283a 	ret
   83f90:	01400404 	movi	r5,16
   83f94:	00804034 	movhi	r2,256
   83f98:	10bfffc4 	addi	r2,r2,-1
   83f9c:	2807883a 	mov	r3,r5
   83fa0:	113ff22e 	bgeu	r2,r4,83f6c <__clzsi2+0x1c>
   83fa4:	01400604 	movi	r5,24
   83fa8:	2807883a 	mov	r3,r5
   83fac:	20c6d83a 	srl	r3,r4,r3
   83fb0:	00800274 	movhi	r2,9
   83fb4:	10bccd04 	addi	r2,r2,-3276
   83fb8:	1887883a 	add	r3,r3,r2
   83fbc:	18800003 	ldbu	r2,0(r3)
   83fc0:	00c00804 	movi	r3,32
   83fc4:	2885883a 	add	r2,r5,r2
   83fc8:	1885c83a 	sub	r2,r3,r2
   83fcc:	f800283a 	ret

00083fd0 <__pack_d>:
   83fd0:	20c00017 	ldw	r3,0(r4)
   83fd4:	defffd04 	addi	sp,sp,-12
   83fd8:	dc000015 	stw	r16,0(sp)
   83fdc:	dc800215 	stw	r18,8(sp)
   83fe0:	dc400115 	stw	r17,4(sp)
   83fe4:	00800044 	movi	r2,1
   83fe8:	22000317 	ldw	r8,12(r4)
   83fec:	001f883a 	mov	r15,zero
   83ff0:	22400417 	ldw	r9,16(r4)
   83ff4:	24000117 	ldw	r16,4(r4)
   83ff8:	10c0552e 	bgeu	r2,r3,84150 <__pack_d+0x180>
   83ffc:	00800104 	movi	r2,4
   84000:	18804f26 	beq	r3,r2,84140 <__pack_d+0x170>
   84004:	00800084 	movi	r2,2
   84008:	18800226 	beq	r3,r2,84014 <__pack_d+0x44>
   8400c:	4244b03a 	or	r2,r8,r9
   84010:	10001a1e 	bne	r2,zero,8407c <__pack_d+0xac>
   84014:	000d883a 	mov	r6,zero
   84018:	000f883a 	mov	r7,zero
   8401c:	0011883a 	mov	r8,zero
   84020:	00800434 	movhi	r2,16
   84024:	10bfffc4 	addi	r2,r2,-1
   84028:	301d883a 	mov	r14,r6
   8402c:	3884703a 	and	r2,r7,r2
   84030:	400a953a 	slli	r5,r8,20
   84034:	79bffc2c 	andhi	r6,r15,65520
   84038:	308cb03a 	or	r6,r6,r2
   8403c:	00e00434 	movhi	r3,32784
   84040:	18ffffc4 	addi	r3,r3,-1
   84044:	800497fa 	slli	r2,r16,31
   84048:	30c6703a 	and	r3,r6,r3
   8404c:	1946b03a 	or	r3,r3,r5
   84050:	01600034 	movhi	r5,32768
   84054:	297fffc4 	addi	r5,r5,-1
   84058:	194a703a 	and	r5,r3,r5
   8405c:	288ab03a 	or	r5,r5,r2
   84060:	2807883a 	mov	r3,r5
   84064:	7005883a 	mov	r2,r14
   84068:	dc800217 	ldw	r18,8(sp)
   8406c:	dc400117 	ldw	r17,4(sp)
   84070:	dc000017 	ldw	r16,0(sp)
   84074:	dec00304 	addi	sp,sp,12
   84078:	f800283a 	ret
   8407c:	21000217 	ldw	r4,8(r4)
   84080:	00bf0084 	movi	r2,-1022
   84084:	20803f16 	blt	r4,r2,84184 <__pack_d+0x1b4>
   84088:	0080ffc4 	movi	r2,1023
   8408c:	11002c16 	blt	r2,r4,84140 <__pack_d+0x170>
   84090:	00803fc4 	movi	r2,255
   84094:	408c703a 	and	r6,r8,r2
   84098:	00802004 	movi	r2,128
   8409c:	0007883a 	mov	r3,zero
   840a0:	000f883a 	mov	r7,zero
   840a4:	2280ffc4 	addi	r10,r4,1023
   840a8:	30801e26 	beq	r6,r2,84124 <__pack_d+0x154>
   840ac:	00801fc4 	movi	r2,127
   840b0:	4089883a 	add	r4,r8,r2
   840b4:	220d803a 	cmpltu	r6,r4,r8
   840b8:	324d883a 	add	r6,r6,r9
   840bc:	2011883a 	mov	r8,r4
   840c0:	3013883a 	mov	r9,r6
   840c4:	00880034 	movhi	r2,8192
   840c8:	10bfffc4 	addi	r2,r2,-1
   840cc:	12400d36 	bltu	r2,r9,84104 <__pack_d+0x134>
   840d0:	4804963a 	slli	r2,r9,24
   840d4:	400cd23a 	srli	r6,r8,8
   840d8:	480ed23a 	srli	r7,r9,8
   840dc:	013fffc4 	movi	r4,-1
   840e0:	118cb03a 	or	r6,r2,r6
   840e4:	01400434 	movhi	r5,16
   840e8:	297fffc4 	addi	r5,r5,-1
   840ec:	3104703a 	and	r2,r6,r4
   840f0:	3946703a 	and	r3,r7,r5
   840f4:	5201ffcc 	andi	r8,r10,2047
   840f8:	100d883a 	mov	r6,r2
   840fc:	180f883a 	mov	r7,r3
   84100:	003fc706 	br	84020 <__pack_d+0x50>
   84104:	480897fa 	slli	r4,r9,31
   84108:	4004d07a 	srli	r2,r8,1
   8410c:	4806d07a 	srli	r3,r9,1
   84110:	52800044 	addi	r10,r10,1
   84114:	2084b03a 	or	r2,r4,r2
   84118:	1011883a 	mov	r8,r2
   8411c:	1813883a 	mov	r9,r3
   84120:	003feb06 	br	840d0 <__pack_d+0x100>
   84124:	383fe11e 	bne	r7,zero,840ac <__pack_d+0xdc>
   84128:	01004004 	movi	r4,256
   8412c:	4104703a 	and	r2,r8,r4
   84130:	10c4b03a 	or	r2,r2,r3
   84134:	103fe326 	beq	r2,zero,840c4 <__pack_d+0xf4>
   84138:	3005883a 	mov	r2,r6
   8413c:	003fdc06 	br	840b0 <__pack_d+0xe0>
   84140:	000d883a 	mov	r6,zero
   84144:	000f883a 	mov	r7,zero
   84148:	0201ffc4 	movi	r8,2047
   8414c:	003fb406 	br	84020 <__pack_d+0x50>
   84150:	0005883a 	mov	r2,zero
   84154:	00c00234 	movhi	r3,8
   84158:	408cb03a 	or	r6,r8,r2
   8415c:	48ceb03a 	or	r7,r9,r3
   84160:	013fffc4 	movi	r4,-1
   84164:	01400434 	movhi	r5,16
   84168:	297fffc4 	addi	r5,r5,-1
   8416c:	3104703a 	and	r2,r6,r4
   84170:	3946703a 	and	r3,r7,r5
   84174:	100d883a 	mov	r6,r2
   84178:	180f883a 	mov	r7,r3
   8417c:	0201ffc4 	movi	r8,2047
   84180:	003fa706 	br	84020 <__pack_d+0x50>
   84184:	1109c83a 	sub	r4,r2,r4
   84188:	00800e04 	movi	r2,56
   8418c:	11004316 	blt	r2,r4,8429c <__pack_d+0x2cc>
   84190:	21fff804 	addi	r7,r4,-32
   84194:	38004516 	blt	r7,zero,842ac <__pack_d+0x2dc>
   84198:	49d8d83a 	srl	r12,r9,r7
   8419c:	001b883a 	mov	r13,zero
   841a0:	0023883a 	mov	r17,zero
   841a4:	01400044 	movi	r5,1
   841a8:	0025883a 	mov	r18,zero
   841ac:	38004716 	blt	r7,zero,842cc <__pack_d+0x2fc>
   841b0:	29d6983a 	sll	r11,r5,r7
   841b4:	0015883a 	mov	r10,zero
   841b8:	00bfffc4 	movi	r2,-1
   841bc:	5089883a 	add	r4,r10,r2
   841c0:	588b883a 	add	r5,r11,r2
   841c4:	228d803a 	cmpltu	r6,r4,r10
   841c8:	314b883a 	add	r5,r6,r5
   841cc:	4104703a 	and	r2,r8,r4
   841d0:	4946703a 	and	r3,r9,r5
   841d4:	10c4b03a 	or	r2,r2,r3
   841d8:	10000226 	beq	r2,zero,841e4 <__pack_d+0x214>
   841dc:	04400044 	movi	r17,1
   841e0:	0025883a 	mov	r18,zero
   841e4:	00803fc4 	movi	r2,255
   841e8:	644eb03a 	or	r7,r12,r17
   841ec:	3892703a 	and	r9,r7,r2
   841f0:	00802004 	movi	r2,128
   841f4:	6c90b03a 	or	r8,r13,r18
   841f8:	0015883a 	mov	r10,zero
   841fc:	48801626 	beq	r9,r2,84258 <__pack_d+0x288>
   84200:	01001fc4 	movi	r4,127
   84204:	3905883a 	add	r2,r7,r4
   84208:	11cd803a 	cmpltu	r6,r2,r7
   8420c:	320d883a 	add	r6,r6,r8
   84210:	100f883a 	mov	r7,r2
   84214:	00840034 	movhi	r2,4096
   84218:	10bfffc4 	addi	r2,r2,-1
   8421c:	3011883a 	mov	r8,r6
   84220:	0007883a 	mov	r3,zero
   84224:	11801b36 	bltu	r2,r6,84294 <__pack_d+0x2c4>
   84228:	4004963a 	slli	r2,r8,24
   8422c:	3808d23a 	srli	r4,r7,8
   84230:	400ad23a 	srli	r5,r8,8
   84234:	1813883a 	mov	r9,r3
   84238:	1108b03a 	or	r4,r2,r4
   8423c:	00bfffc4 	movi	r2,-1
   84240:	00c00434 	movhi	r3,16
   84244:	18ffffc4 	addi	r3,r3,-1
   84248:	208c703a 	and	r6,r4,r2
   8424c:	28ce703a 	and	r7,r5,r3
   84250:	4a01ffcc 	andi	r8,r9,2047
   84254:	003f7206 	br	84020 <__pack_d+0x50>
   84258:	503fe91e 	bne	r10,zero,84200 <__pack_d+0x230>
   8425c:	01004004 	movi	r4,256
   84260:	3904703a 	and	r2,r7,r4
   84264:	0007883a 	mov	r3,zero
   84268:	10c4b03a 	or	r2,r2,r3
   8426c:	10000626 	beq	r2,zero,84288 <__pack_d+0x2b8>
   84270:	3a45883a 	add	r2,r7,r9
   84274:	11cd803a 	cmpltu	r6,r2,r7
   84278:	320d883a 	add	r6,r6,r8
   8427c:	100f883a 	mov	r7,r2
   84280:	3011883a 	mov	r8,r6
   84284:	0007883a 	mov	r3,zero
   84288:	00840034 	movhi	r2,4096
   8428c:	10bfffc4 	addi	r2,r2,-1
   84290:	123fe52e 	bgeu	r2,r8,84228 <__pack_d+0x258>
   84294:	00c00044 	movi	r3,1
   84298:	003fe306 	br	84228 <__pack_d+0x258>
   8429c:	0009883a 	mov	r4,zero
   842a0:	0013883a 	mov	r9,zero
   842a4:	000b883a 	mov	r5,zero
   842a8:	003fe406 	br	8423c <__pack_d+0x26c>
   842ac:	4a47883a 	add	r3,r9,r9
   842b0:	008007c4 	movi	r2,31
   842b4:	1105c83a 	sub	r2,r2,r4
   842b8:	1886983a 	sll	r3,r3,r2
   842bc:	4118d83a 	srl	r12,r8,r4
   842c0:	491ad83a 	srl	r13,r9,r4
   842c4:	1b18b03a 	or	r12,r3,r12
   842c8:	003fb506 	br	841a0 <__pack_d+0x1d0>
   842cc:	2806d07a 	srli	r3,r5,1
   842d0:	008007c4 	movi	r2,31
   842d4:	1105c83a 	sub	r2,r2,r4
   842d8:	1896d83a 	srl	r11,r3,r2
   842dc:	2914983a 	sll	r10,r5,r4
   842e0:	003fb506 	br	841b8 <__pack_d+0x1e8>

000842e4 <__unpack_d>:
   842e4:	20c00117 	ldw	r3,4(r4)
   842e8:	22400017 	ldw	r9,0(r4)
   842ec:	00800434 	movhi	r2,16
   842f0:	10bfffc4 	addi	r2,r2,-1
   842f4:	1808d53a 	srli	r4,r3,20
   842f8:	180cd7fa 	srli	r6,r3,31
   842fc:	1894703a 	and	r10,r3,r2
   84300:	2201ffcc 	andi	r8,r4,2047
   84304:	281b883a 	mov	r13,r5
   84308:	4817883a 	mov	r11,r9
   8430c:	29800115 	stw	r6,4(r5)
   84310:	5019883a 	mov	r12,r10
   84314:	40001e1e 	bne	r8,zero,84390 <__unpack_d+0xac>
   84318:	4a84b03a 	or	r2,r9,r10
   8431c:	10001926 	beq	r2,zero,84384 <__unpack_d+0xa0>
   84320:	4804d63a 	srli	r2,r9,24
   84324:	500c923a 	slli	r6,r10,8
   84328:	013f0084 	movi	r4,-1022
   8432c:	00c40034 	movhi	r3,4096
   84330:	18ffffc4 	addi	r3,r3,-1
   84334:	118cb03a 	or	r6,r2,r6
   84338:	008000c4 	movi	r2,3
   8433c:	480a923a 	slli	r5,r9,8
   84340:	68800015 	stw	r2,0(r13)
   84344:	69000215 	stw	r4,8(r13)
   84348:	19800b36 	bltu	r3,r6,84378 <__unpack_d+0x94>
   8434c:	200f883a 	mov	r7,r4
   84350:	1811883a 	mov	r8,r3
   84354:	2945883a 	add	r2,r5,r5
   84358:	1149803a 	cmpltu	r4,r2,r5
   8435c:	3187883a 	add	r3,r6,r6
   84360:	20c9883a 	add	r4,r4,r3
   84364:	100b883a 	mov	r5,r2
   84368:	200d883a 	mov	r6,r4
   8436c:	39ffffc4 	addi	r7,r7,-1
   84370:	413ff82e 	bgeu	r8,r4,84354 <__unpack_d+0x70>
   84374:	69c00215 	stw	r7,8(r13)
   84378:	69800415 	stw	r6,16(r13)
   8437c:	69400315 	stw	r5,12(r13)
   84380:	f800283a 	ret
   84384:	00800084 	movi	r2,2
   84388:	28800015 	stw	r2,0(r5)
   8438c:	f800283a 	ret
   84390:	0081ffc4 	movi	r2,2047
   84394:	40800f26 	beq	r8,r2,843d4 <__unpack_d+0xf0>
   84398:	480cd63a 	srli	r6,r9,24
   8439c:	5006923a 	slli	r3,r10,8
   843a0:	4804923a 	slli	r2,r9,8
   843a4:	0009883a 	mov	r4,zero
   843a8:	30c6b03a 	or	r3,r6,r3
   843ac:	01440034 	movhi	r5,4096
   843b0:	110cb03a 	or	r6,r2,r4
   843b4:	423f0044 	addi	r8,r8,-1023
   843b8:	194eb03a 	or	r7,r3,r5
   843bc:	008000c4 	movi	r2,3
   843c0:	69c00415 	stw	r7,16(r13)
   843c4:	6a000215 	stw	r8,8(r13)
   843c8:	68800015 	stw	r2,0(r13)
   843cc:	69800315 	stw	r6,12(r13)
   843d0:	f800283a 	ret
   843d4:	4a84b03a 	or	r2,r9,r10
   843d8:	1000031e 	bne	r2,zero,843e8 <__unpack_d+0x104>
   843dc:	00800104 	movi	r2,4
   843e0:	28800015 	stw	r2,0(r5)
   843e4:	f800283a 	ret
   843e8:	0009883a 	mov	r4,zero
   843ec:	01400234 	movhi	r5,8
   843f0:	4904703a 	and	r2,r9,r4
   843f4:	5146703a 	and	r3,r10,r5
   843f8:	10c4b03a 	or	r2,r2,r3
   843fc:	10000526 	beq	r2,zero,84414 <__unpack_d+0x130>
   84400:	00800044 	movi	r2,1
   84404:	68800015 	stw	r2,0(r13)
   84408:	6b000415 	stw	r12,16(r13)
   8440c:	6ac00315 	stw	r11,12(r13)
   84410:	f800283a 	ret
   84414:	68000015 	stw	zero,0(r13)
   84418:	003ffb06 	br	84408 <__unpack_d+0x124>

0008441c <__fpcmp_parts_d>:
   8441c:	21800017 	ldw	r6,0(r4)
   84420:	00c00044 	movi	r3,1
   84424:	19800a2e 	bgeu	r3,r6,84450 <__fpcmp_parts_d+0x34>
   84428:	28800017 	ldw	r2,0(r5)
   8442c:	1880082e 	bgeu	r3,r2,84450 <__fpcmp_parts_d+0x34>
   84430:	00c00104 	movi	r3,4
   84434:	30c02626 	beq	r6,r3,844d0 <__fpcmp_parts_d+0xb4>
   84438:	10c02226 	beq	r2,r3,844c4 <__fpcmp_parts_d+0xa8>
   8443c:	00c00084 	movi	r3,2
   84440:	30c00526 	beq	r6,r3,84458 <__fpcmp_parts_d+0x3c>
   84444:	10c0071e 	bne	r2,r3,84464 <__fpcmp_parts_d+0x48>
   84448:	20800117 	ldw	r2,4(r4)
   8444c:	1000091e 	bne	r2,zero,84474 <__fpcmp_parts_d+0x58>
   84450:	00800044 	movi	r2,1
   84454:	f800283a 	ret
   84458:	10c01a1e 	bne	r2,r3,844c4 <__fpcmp_parts_d+0xa8>
   8445c:	0005883a 	mov	r2,zero
   84460:	f800283a 	ret
   84464:	22000117 	ldw	r8,4(r4)
   84468:	28800117 	ldw	r2,4(r5)
   8446c:	40800326 	beq	r8,r2,8447c <__fpcmp_parts_d+0x60>
   84470:	403ff726 	beq	r8,zero,84450 <__fpcmp_parts_d+0x34>
   84474:	00bfffc4 	movi	r2,-1
   84478:	f800283a 	ret
   8447c:	20c00217 	ldw	r3,8(r4)
   84480:	28800217 	ldw	r2,8(r5)
   84484:	10fffa16 	blt	r2,r3,84470 <__fpcmp_parts_d+0x54>
   84488:	18800916 	blt	r3,r2,844b0 <__fpcmp_parts_d+0x94>
   8448c:	21c00417 	ldw	r7,16(r4)
   84490:	28c00417 	ldw	r3,16(r5)
   84494:	21800317 	ldw	r6,12(r4)
   84498:	28800317 	ldw	r2,12(r5)
   8449c:	19fff436 	bltu	r3,r7,84470 <__fpcmp_parts_d+0x54>
   844a0:	38c00526 	beq	r7,r3,844b8 <__fpcmp_parts_d+0x9c>
   844a4:	38c00236 	bltu	r7,r3,844b0 <__fpcmp_parts_d+0x94>
   844a8:	19ffec1e 	bne	r3,r7,8445c <__fpcmp_parts_d+0x40>
   844ac:	30bfeb2e 	bgeu	r6,r2,8445c <__fpcmp_parts_d+0x40>
   844b0:	403fe71e 	bne	r8,zero,84450 <__fpcmp_parts_d+0x34>
   844b4:	003fef06 	br	84474 <__fpcmp_parts_d+0x58>
   844b8:	11bffa2e 	bgeu	r2,r6,844a4 <__fpcmp_parts_d+0x88>
   844bc:	403fe426 	beq	r8,zero,84450 <__fpcmp_parts_d+0x34>
   844c0:	003fec06 	br	84474 <__fpcmp_parts_d+0x58>
   844c4:	28800117 	ldw	r2,4(r5)
   844c8:	103fe11e 	bne	r2,zero,84450 <__fpcmp_parts_d+0x34>
   844cc:	003fe906 	br	84474 <__fpcmp_parts_d+0x58>
   844d0:	11bfdd1e 	bne	r2,r6,84448 <__fpcmp_parts_d+0x2c>
   844d4:	28c00117 	ldw	r3,4(r5)
   844d8:	20800117 	ldw	r2,4(r4)
   844dc:	1885c83a 	sub	r2,r3,r2
   844e0:	f800283a 	ret

000844e4 <printf>:
   844e4:	defffb04 	addi	sp,sp,-20
   844e8:	dfc00115 	stw	ra,4(sp)
   844ec:	d9400215 	stw	r5,8(sp)
   844f0:	d9800315 	stw	r6,12(sp)
   844f4:	d9c00415 	stw	r7,16(sp)
   844f8:	00800274 	movhi	r2,9
   844fc:	1084af04 	addi	r2,r2,4796
   84500:	10c00017 	ldw	r3,0(r2)
   84504:	200b883a 	mov	r5,r4
   84508:	d8800204 	addi	r2,sp,8
   8450c:	19000217 	ldw	r4,8(r3)
   84510:	100d883a 	mov	r6,r2
   84514:	d8800015 	stw	r2,0(sp)
   84518:	00864600 	call	86460 <__vfprintf_internal>
   8451c:	dfc00117 	ldw	ra,4(sp)
   84520:	dec00504 	addi	sp,sp,20
   84524:	f800283a 	ret

00084528 <_printf_r>:
   84528:	defffc04 	addi	sp,sp,-16
   8452c:	dfc00115 	stw	ra,4(sp)
   84530:	d9800215 	stw	r6,8(sp)
   84534:	d9c00315 	stw	r7,12(sp)
   84538:	280d883a 	mov	r6,r5
   8453c:	21400217 	ldw	r5,8(r4)
   84540:	d8c00204 	addi	r3,sp,8
   84544:	180f883a 	mov	r7,r3
   84548:	d8c00015 	stw	r3,0(sp)
   8454c:	00845b40 	call	845b4 <___vfprintf_internal_r>
   84550:	dfc00117 	ldw	ra,4(sp)
   84554:	dec00404 	addi	sp,sp,16
   84558:	f800283a 	ret

0008455c <__sprint_r>:
   8455c:	30800217 	ldw	r2,8(r6)
   84560:	defffe04 	addi	sp,sp,-8
   84564:	dc000015 	stw	r16,0(sp)
   84568:	dfc00115 	stw	ra,4(sp)
   8456c:	3021883a 	mov	r16,r6
   84570:	0007883a 	mov	r3,zero
   84574:	1000061e 	bne	r2,zero,84590 <__sprint_r+0x34>
   84578:	1805883a 	mov	r2,r3
   8457c:	30000115 	stw	zero,4(r6)
   84580:	dfc00117 	ldw	ra,4(sp)
   84584:	dc000017 	ldw	r16,0(sp)
   84588:	dec00204 	addi	sp,sp,8
   8458c:	f800283a 	ret
   84590:	00886bc0 	call	886bc <__sfvwrite_r>
   84594:	1007883a 	mov	r3,r2
   84598:	1805883a 	mov	r2,r3
   8459c:	80000115 	stw	zero,4(r16)
   845a0:	80000215 	stw	zero,8(r16)
   845a4:	dfc00117 	ldw	ra,4(sp)
   845a8:	dc000017 	ldw	r16,0(sp)
   845ac:	dec00204 	addi	sp,sp,8
   845b0:	f800283a 	ret

000845b4 <___vfprintf_internal_r>:
   845b4:	defea404 	addi	sp,sp,-1392
   845b8:	dd815815 	stw	r22,1376(sp)
   845bc:	dc015215 	stw	r16,1352(sp)
   845c0:	d9c15115 	stw	r7,1348(sp)
   845c4:	dfc15b15 	stw	ra,1388(sp)
   845c8:	df015a15 	stw	fp,1384(sp)
   845cc:	ddc15915 	stw	r23,1380(sp)
   845d0:	dd415715 	stw	r21,1372(sp)
   845d4:	dd015615 	stw	r20,1368(sp)
   845d8:	dcc15515 	stw	r19,1364(sp)
   845dc:	dc815415 	stw	r18,1360(sp)
   845e0:	dc415315 	stw	r17,1356(sp)
   845e4:	282d883a 	mov	r22,r5
   845e8:	3021883a 	mov	r16,r6
   845ec:	d9014f15 	stw	r4,1340(sp)
   845f0:	0088ce00 	call	88ce0 <_localeconv_r>
   845f4:	10800017 	ldw	r2,0(r2)
   845f8:	d9c15117 	ldw	r7,1348(sp)
   845fc:	d8814915 	stw	r2,1316(sp)
   84600:	d8814f17 	ldw	r2,1340(sp)
   84604:	10000226 	beq	r2,zero,84610 <___vfprintf_internal_r+0x5c>
   84608:	10800e17 	ldw	r2,56(r2)
   8460c:	10020d26 	beq	r2,zero,84e44 <___vfprintf_internal_r+0x890>
   84610:	b080030b 	ldhu	r2,12(r22)
   84614:	1080020c 	andi	r2,r2,8
   84618:	10020e26 	beq	r2,zero,84e54 <___vfprintf_internal_r+0x8a0>
   8461c:	b0800417 	ldw	r2,16(r22)
   84620:	10020c26 	beq	r2,zero,84e54 <___vfprintf_internal_r+0x8a0>
   84624:	b200030b 	ldhu	r8,12(r22)
   84628:	00800284 	movi	r2,10
   8462c:	40c0068c 	andi	r3,r8,26
   84630:	18802f1e 	bne	r3,r2,846f0 <___vfprintf_internal_r+0x13c>
   84634:	b080038f 	ldh	r2,14(r22)
   84638:	10002d16 	blt	r2,zero,846f0 <___vfprintf_internal_r+0x13c>
   8463c:	b240038b 	ldhu	r9,14(r22)
   84640:	b2800717 	ldw	r10,28(r22)
   84644:	b2c00917 	ldw	r11,36(r22)
   84648:	d9014f17 	ldw	r4,1340(sp)
   8464c:	dc402904 	addi	r17,sp,164
   84650:	d8804004 	addi	r2,sp,256
   84654:	00c10004 	movi	r3,1024
   84658:	423fff4c 	andi	r8,r8,65533
   8465c:	800d883a 	mov	r6,r16
   84660:	880b883a 	mov	r5,r17
   84664:	da002c0d 	sth	r8,176(sp)
   84668:	da402c8d 	sth	r9,178(sp)
   8466c:	da803015 	stw	r10,192(sp)
   84670:	dac03215 	stw	r11,200(sp)
   84674:	d8802d15 	stw	r2,180(sp)
   84678:	d8c02e15 	stw	r3,184(sp)
   8467c:	d8802915 	stw	r2,164(sp)
   84680:	d8c02b15 	stw	r3,172(sp)
   84684:	d8002f15 	stw	zero,188(sp)
   84688:	00845b40 	call	845b4 <___vfprintf_internal_r>
   8468c:	d8814b15 	stw	r2,1324(sp)
   84690:	10000416 	blt	r2,zero,846a4 <___vfprintf_internal_r+0xf0>
   84694:	d9014f17 	ldw	r4,1340(sp)
   84698:	880b883a 	mov	r5,r17
   8469c:	0087d8c0 	call	87d8c <_fflush_r>
   846a0:	1002321e 	bne	r2,zero,84f6c <___vfprintf_internal_r+0x9b8>
   846a4:	d8802c0b 	ldhu	r2,176(sp)
   846a8:	1080100c 	andi	r2,r2,64
   846ac:	10000326 	beq	r2,zero,846bc <___vfprintf_internal_r+0x108>
   846b0:	b080030b 	ldhu	r2,12(r22)
   846b4:	10801014 	ori	r2,r2,64
   846b8:	b080030d 	sth	r2,12(r22)
   846bc:	d8814b17 	ldw	r2,1324(sp)
   846c0:	dfc15b17 	ldw	ra,1388(sp)
   846c4:	df015a17 	ldw	fp,1384(sp)
   846c8:	ddc15917 	ldw	r23,1380(sp)
   846cc:	dd815817 	ldw	r22,1376(sp)
   846d0:	dd415717 	ldw	r21,1372(sp)
   846d4:	dd015617 	ldw	r20,1368(sp)
   846d8:	dcc15517 	ldw	r19,1364(sp)
   846dc:	dc815417 	ldw	r18,1360(sp)
   846e0:	dc415317 	ldw	r17,1356(sp)
   846e4:	dc015217 	ldw	r16,1352(sp)
   846e8:	dec15c04 	addi	sp,sp,1392
   846ec:	f800283a 	ret
   846f0:	0005883a 	mov	r2,zero
   846f4:	0007883a 	mov	r3,zero
   846f8:	dd401904 	addi	r21,sp,100
   846fc:	d8814215 	stw	r2,1288(sp)
   84700:	802f883a 	mov	r23,r16
   84704:	d8c14315 	stw	r3,1292(sp)
   84708:	d8014b15 	stw	zero,1324(sp)
   8470c:	d8014815 	stw	zero,1312(sp)
   84710:	d8014415 	stw	zero,1296(sp)
   84714:	d8014715 	stw	zero,1308(sp)
   84718:	dd400c15 	stw	r21,48(sp)
   8471c:	d8000e15 	stw	zero,56(sp)
   84720:	d8000d15 	stw	zero,52(sp)
   84724:	b8800007 	ldb	r2,0(r23)
   84728:	10001926 	beq	r2,zero,84790 <___vfprintf_internal_r+0x1dc>
   8472c:	00c00944 	movi	r3,37
   84730:	10c01726 	beq	r2,r3,84790 <___vfprintf_internal_r+0x1dc>
   84734:	b821883a 	mov	r16,r23
   84738:	00000106 	br	84740 <___vfprintf_internal_r+0x18c>
   8473c:	10c00326 	beq	r2,r3,8474c <___vfprintf_internal_r+0x198>
   84740:	84000044 	addi	r16,r16,1
   84744:	80800007 	ldb	r2,0(r16)
   84748:	103ffc1e 	bne	r2,zero,8473c <___vfprintf_internal_r+0x188>
   8474c:	85e7c83a 	sub	r19,r16,r23
   84750:	98000e26 	beq	r19,zero,8478c <___vfprintf_internal_r+0x1d8>
   84754:	dc800e17 	ldw	r18,56(sp)
   84758:	dc400d17 	ldw	r17,52(sp)
   8475c:	008001c4 	movi	r2,7
   84760:	94e5883a 	add	r18,r18,r19
   84764:	8c400044 	addi	r17,r17,1
   84768:	adc00015 	stw	r23,0(r21)
   8476c:	dc800e15 	stw	r18,56(sp)
   84770:	acc00115 	stw	r19,4(r21)
   84774:	dc400d15 	stw	r17,52(sp)
   84778:	14428b16 	blt	r2,r17,851a8 <___vfprintf_internal_r+0xbf4>
   8477c:	ad400204 	addi	r21,r21,8
   84780:	d9014b17 	ldw	r4,1324(sp)
   84784:	24c9883a 	add	r4,r4,r19
   84788:	d9014b15 	stw	r4,1324(sp)
   8478c:	802f883a 	mov	r23,r16
   84790:	b8800007 	ldb	r2,0(r23)
   84794:	10013c26 	beq	r2,zero,84c88 <___vfprintf_internal_r+0x6d4>
   84798:	bdc00044 	addi	r23,r23,1
   8479c:	d8000405 	stb	zero,16(sp)
   847a0:	b8c00007 	ldb	r3,0(r23)
   847a4:	04ffffc4 	movi	r19,-1
   847a8:	d8014c15 	stw	zero,1328(sp)
   847ac:	d8014a15 	stw	zero,1320(sp)
   847b0:	d8c14d15 	stw	r3,1332(sp)
   847b4:	bdc00044 	addi	r23,r23,1
   847b8:	d9414d17 	ldw	r5,1332(sp)
   847bc:	00801604 	movi	r2,88
   847c0:	28fff804 	addi	r3,r5,-32
   847c4:	10c06036 	bltu	r2,r3,84948 <___vfprintf_internal_r+0x394>
   847c8:	18c5883a 	add	r2,r3,r3
   847cc:	1085883a 	add	r2,r2,r2
   847d0:	00c00234 	movhi	r3,8
   847d4:	18d1f904 	addi	r3,r3,18404
   847d8:	10c5883a 	add	r2,r2,r3
   847dc:	11000017 	ldw	r4,0(r2)
   847e0:	2000683a 	jmp	r4
   847e4:	00085758 	cmpnei	zero,zero,8541
   847e8:	00084948 	cmpgei	zero,zero,8485
   847ec:	00084948 	cmpgei	zero,zero,8485
   847f0:	00085744 	movi	zero,8541
   847f4:	00084948 	cmpgei	zero,zero,8485
   847f8:	00084948 	cmpgei	zero,zero,8485
   847fc:	00084948 	cmpgei	zero,zero,8485
   84800:	00084948 	cmpgei	zero,zero,8485
   84804:	00084948 	cmpgei	zero,zero,8485
   84808:	00084948 	cmpgei	zero,zero,8485
   8480c:	00085524 	muli	zero,zero,8532
   84810:	00085734 	movhi	zero,8540
   84814:	00084948 	cmpgei	zero,zero,8485
   84818:	0008553c 	xorhi	zero,zero,8532
   8481c:	000857d0 	cmplti	zero,zero,8543
   84820:	00084948 	cmpgei	zero,zero,8485
   84824:	000857bc 	xorhi	zero,zero,8542
   84828:	00085784 	movi	zero,8542
   8482c:	00085784 	movi	zero,8542
   84830:	00085784 	movi	zero,8542
   84834:	00085784 	movi	zero,8542
   84838:	00085784 	movi	zero,8542
   8483c:	00085784 	movi	zero,8542
   84840:	00085784 	movi	zero,8542
   84844:	00085784 	movi	zero,8542
   84848:	00085784 	movi	zero,8542
   8484c:	00084948 	cmpgei	zero,zero,8485
   84850:	00084948 	cmpgei	zero,zero,8485
   84854:	00084948 	cmpgei	zero,zero,8485
   84858:	00084948 	cmpgei	zero,zero,8485
   8485c:	00084948 	cmpgei	zero,zero,8485
   84860:	00084948 	cmpgei	zero,zero,8485
   84864:	00084948 	cmpgei	zero,zero,8485
   84868:	00084948 	cmpgei	zero,zero,8485
   8486c:	00084948 	cmpgei	zero,zero,8485
   84870:	00084948 	cmpgei	zero,zero,8485
   84874:	00084fa0 	cmpeqi	zero,zero,8510
   84878:	0008560c 	andi	zero,zero,8536
   8487c:	00084948 	cmpgei	zero,zero,8485
   84880:	0008560c 	andi	zero,zero,8536
   84884:	00084948 	cmpgei	zero,zero,8485
   84888:	00084948 	cmpgei	zero,zero,8485
   8488c:	00084948 	cmpgei	zero,zero,8485
   84890:	00084948 	cmpgei	zero,zero,8485
   84894:	00085770 	cmpltui	zero,zero,8541
   84898:	00084948 	cmpgei	zero,zero,8485
   8489c:	00084948 	cmpgei	zero,zero,8485
   848a0:	00085054 	movui	zero,8513
   848a4:	00084948 	cmpgei	zero,zero,8485
   848a8:	00084948 	cmpgei	zero,zero,8485
   848ac:	00084948 	cmpgei	zero,zero,8485
   848b0:	00084948 	cmpgei	zero,zero,8485
   848b4:	00084948 	cmpgei	zero,zero,8485
   848b8:	000850a0 	cmpeqi	zero,zero,8514
   848bc:	00084948 	cmpgei	zero,zero,8485
   848c0:	00084948 	cmpgei	zero,zero,8485
   848c4:	000856c0 	call	856c <__alt_mem_de2_sram_controller_0-0x77a94>
   848c8:	00084948 	cmpgei	zero,zero,8485
   848cc:	00084948 	cmpgei	zero,zero,8485
   848d0:	00084948 	cmpgei	zero,zero,8485
   848d4:	00084948 	cmpgei	zero,zero,8485
   848d8:	00084948 	cmpgei	zero,zero,8485
   848dc:	00084948 	cmpgei	zero,zero,8485
   848e0:	00084948 	cmpgei	zero,zero,8485
   848e4:	00084948 	cmpgei	zero,zero,8485
   848e8:	00084948 	cmpgei	zero,zero,8485
   848ec:	00084948 	cmpgei	zero,zero,8485
   848f0:	00085694 	movui	zero,8538
   848f4:	00084fac 	andhi	zero,zero,8510
   848f8:	0008560c 	andi	zero,zero,8536
   848fc:	0008560c 	andi	zero,zero,8536
   84900:	0008560c 	andi	zero,zero,8536
   84904:	000855f8 	rdprs	zero,zero,8535
   84908:	00084fac 	andhi	zero,zero,8510
   8490c:	00084948 	cmpgei	zero,zero,8485
   84910:	00084948 	cmpgei	zero,zero,8485
   84914:	00085580 	call	8558 <__alt_mem_de2_sram_controller_0-0x77aa8>
   84918:	00084948 	cmpgei	zero,zero,8485
   8491c:	00085550 	cmplti	zero,zero,8533
   84920:	00085060 	cmpeqi	zero,zero,8513
   84924:	000855b0 	cmpltui	zero,zero,8534
   84928:	0008559c 	xori	zero,zero,8534
   8492c:	00084948 	cmpgei	zero,zero,8485
   84930:	0008582c 	andhi	zero,zero,8544
   84934:	00084948 	cmpgei	zero,zero,8485
   84938:	000850ac 	andhi	zero,zero,8514
   8493c:	00084948 	cmpgei	zero,zero,8485
   84940:	00084948 	cmpgei	zero,zero,8485
   84944:	00085724 	muli	zero,zero,8540
   84948:	d9014d17 	ldw	r4,1332(sp)
   8494c:	2000ce26 	beq	r4,zero,84c88 <___vfprintf_internal_r+0x6d4>
   84950:	01400044 	movi	r5,1
   84954:	d9800f04 	addi	r6,sp,60
   84958:	d9c14015 	stw	r7,1280(sp)
   8495c:	d9414515 	stw	r5,1300(sp)
   84960:	d9814115 	stw	r6,1284(sp)
   84964:	280f883a 	mov	r7,r5
   84968:	d9000f05 	stb	r4,60(sp)
   8496c:	d8000405 	stb	zero,16(sp)
   84970:	d8014615 	stw	zero,1304(sp)
   84974:	d8c14c17 	ldw	r3,1328(sp)
   84978:	1880008c 	andi	r2,r3,2
   8497c:	1005003a 	cmpeq	r2,r2,zero
   84980:	d8815015 	stw	r2,1344(sp)
   84984:	1000031e 	bne	r2,zero,84994 <___vfprintf_internal_r+0x3e0>
   84988:	d9014517 	ldw	r4,1300(sp)
   8498c:	21000084 	addi	r4,r4,2
   84990:	d9014515 	stw	r4,1300(sp)
   84994:	d9414c17 	ldw	r5,1328(sp)
   84998:	2940210c 	andi	r5,r5,132
   8499c:	d9414e15 	stw	r5,1336(sp)
   849a0:	28002d1e 	bne	r5,zero,84a58 <___vfprintf_internal_r+0x4a4>
   849a4:	d9814a17 	ldw	r6,1320(sp)
   849a8:	d8814517 	ldw	r2,1300(sp)
   849ac:	30a1c83a 	sub	r16,r6,r2
   849b0:	0400290e 	bge	zero,r16,84a58 <___vfprintf_internal_r+0x4a4>
   849b4:	00800404 	movi	r2,16
   849b8:	1404580e 	bge	r2,r16,85b1c <___vfprintf_internal_r+0x1568>
   849bc:	dc800e17 	ldw	r18,56(sp)
   849c0:	dc400d17 	ldw	r17,52(sp)
   849c4:	1027883a 	mov	r19,r2
   849c8:	07000274 	movhi	fp,9
   849cc:	e73d2884 	addi	fp,fp,-2910
   849d0:	050001c4 	movi	r20,7
   849d4:	00000306 	br	849e4 <___vfprintf_internal_r+0x430>
   849d8:	843ffc04 	addi	r16,r16,-16
   849dc:	ad400204 	addi	r21,r21,8
   849e0:	9c00130e 	bge	r19,r16,84a30 <___vfprintf_internal_r+0x47c>
   849e4:	94800404 	addi	r18,r18,16
   849e8:	8c400044 	addi	r17,r17,1
   849ec:	af000015 	stw	fp,0(r21)
   849f0:	acc00115 	stw	r19,4(r21)
   849f4:	dc800e15 	stw	r18,56(sp)
   849f8:	dc400d15 	stw	r17,52(sp)
   849fc:	a47ff60e 	bge	r20,r17,849d8 <___vfprintf_internal_r+0x424>
   84a00:	d9014f17 	ldw	r4,1340(sp)
   84a04:	b00b883a 	mov	r5,r22
   84a08:	d9800c04 	addi	r6,sp,48
   84a0c:	d9c15115 	stw	r7,1348(sp)
   84a10:	008455c0 	call	8455c <__sprint_r>
   84a14:	d9c15117 	ldw	r7,1348(sp)
   84a18:	10009e1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84a1c:	843ffc04 	addi	r16,r16,-16
   84a20:	dc800e17 	ldw	r18,56(sp)
   84a24:	dc400d17 	ldw	r17,52(sp)
   84a28:	dd401904 	addi	r21,sp,100
   84a2c:	9c3fed16 	blt	r19,r16,849e4 <___vfprintf_internal_r+0x430>
   84a30:	9425883a 	add	r18,r18,r16
   84a34:	8c400044 	addi	r17,r17,1
   84a38:	008001c4 	movi	r2,7
   84a3c:	af000015 	stw	fp,0(r21)
   84a40:	ac000115 	stw	r16,4(r21)
   84a44:	dc800e15 	stw	r18,56(sp)
   84a48:	dc400d15 	stw	r17,52(sp)
   84a4c:	1441f516 	blt	r2,r17,85224 <___vfprintf_internal_r+0xc70>
   84a50:	ad400204 	addi	r21,r21,8
   84a54:	00000206 	br	84a60 <___vfprintf_internal_r+0x4ac>
   84a58:	dc800e17 	ldw	r18,56(sp)
   84a5c:	dc400d17 	ldw	r17,52(sp)
   84a60:	d8800407 	ldb	r2,16(sp)
   84a64:	10000b26 	beq	r2,zero,84a94 <___vfprintf_internal_r+0x4e0>
   84a68:	00800044 	movi	r2,1
   84a6c:	94800044 	addi	r18,r18,1
   84a70:	8c400044 	addi	r17,r17,1
   84a74:	a8800115 	stw	r2,4(r21)
   84a78:	d8c00404 	addi	r3,sp,16
   84a7c:	008001c4 	movi	r2,7
   84a80:	a8c00015 	stw	r3,0(r21)
   84a84:	dc800e15 	stw	r18,56(sp)
   84a88:	dc400d15 	stw	r17,52(sp)
   84a8c:	1441da16 	blt	r2,r17,851f8 <___vfprintf_internal_r+0xc44>
   84a90:	ad400204 	addi	r21,r21,8
   84a94:	d9015017 	ldw	r4,1344(sp)
   84a98:	20000b1e 	bne	r4,zero,84ac8 <___vfprintf_internal_r+0x514>
   84a9c:	d8800444 	addi	r2,sp,17
   84aa0:	94800084 	addi	r18,r18,2
   84aa4:	8c400044 	addi	r17,r17,1
   84aa8:	a8800015 	stw	r2,0(r21)
   84aac:	00c00084 	movi	r3,2
   84ab0:	008001c4 	movi	r2,7
   84ab4:	a8c00115 	stw	r3,4(r21)
   84ab8:	dc800e15 	stw	r18,56(sp)
   84abc:	dc400d15 	stw	r17,52(sp)
   84ac0:	1441c216 	blt	r2,r17,851cc <___vfprintf_internal_r+0xc18>
   84ac4:	ad400204 	addi	r21,r21,8
   84ac8:	d9414e17 	ldw	r5,1336(sp)
   84acc:	00802004 	movi	r2,128
   84ad0:	2880b126 	beq	r5,r2,84d98 <___vfprintf_internal_r+0x7e4>
   84ad4:	d8c14617 	ldw	r3,1304(sp)
   84ad8:	19e1c83a 	sub	r16,r3,r7
   84adc:	0400260e 	bge	zero,r16,84b78 <___vfprintf_internal_r+0x5c4>
   84ae0:	00800404 	movi	r2,16
   84ae4:	1403c90e 	bge	r2,r16,85a0c <___vfprintf_internal_r+0x1458>
   84ae8:	1027883a 	mov	r19,r2
   84aec:	07000274 	movhi	fp,9
   84af0:	e73d2484 	addi	fp,fp,-2926
   84af4:	050001c4 	movi	r20,7
   84af8:	00000306 	br	84b08 <___vfprintf_internal_r+0x554>
   84afc:	843ffc04 	addi	r16,r16,-16
   84b00:	ad400204 	addi	r21,r21,8
   84b04:	9c00130e 	bge	r19,r16,84b54 <___vfprintf_internal_r+0x5a0>
   84b08:	94800404 	addi	r18,r18,16
   84b0c:	8c400044 	addi	r17,r17,1
   84b10:	af000015 	stw	fp,0(r21)
   84b14:	acc00115 	stw	r19,4(r21)
   84b18:	dc800e15 	stw	r18,56(sp)
   84b1c:	dc400d15 	stw	r17,52(sp)
   84b20:	a47ff60e 	bge	r20,r17,84afc <___vfprintf_internal_r+0x548>
   84b24:	d9014f17 	ldw	r4,1340(sp)
   84b28:	b00b883a 	mov	r5,r22
   84b2c:	d9800c04 	addi	r6,sp,48
   84b30:	d9c15115 	stw	r7,1348(sp)
   84b34:	008455c0 	call	8455c <__sprint_r>
   84b38:	d9c15117 	ldw	r7,1348(sp)
   84b3c:	1000551e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84b40:	843ffc04 	addi	r16,r16,-16
   84b44:	dc800e17 	ldw	r18,56(sp)
   84b48:	dc400d17 	ldw	r17,52(sp)
   84b4c:	dd401904 	addi	r21,sp,100
   84b50:	9c3fed16 	blt	r19,r16,84b08 <___vfprintf_internal_r+0x554>
   84b54:	9425883a 	add	r18,r18,r16
   84b58:	8c400044 	addi	r17,r17,1
   84b5c:	008001c4 	movi	r2,7
   84b60:	af000015 	stw	fp,0(r21)
   84b64:	ac000115 	stw	r16,4(r21)
   84b68:	dc800e15 	stw	r18,56(sp)
   84b6c:	dc400d15 	stw	r17,52(sp)
   84b70:	14418216 	blt	r2,r17,8517c <___vfprintf_internal_r+0xbc8>
   84b74:	ad400204 	addi	r21,r21,8
   84b78:	d9014c17 	ldw	r4,1328(sp)
   84b7c:	2080400c 	andi	r2,r4,256
   84b80:	10004a1e 	bne	r2,zero,84cac <___vfprintf_internal_r+0x6f8>
   84b84:	d9414117 	ldw	r5,1284(sp)
   84b88:	91e5883a 	add	r18,r18,r7
   84b8c:	8c400044 	addi	r17,r17,1
   84b90:	008001c4 	movi	r2,7
   84b94:	a9400015 	stw	r5,0(r21)
   84b98:	a9c00115 	stw	r7,4(r21)
   84b9c:	dc800e15 	stw	r18,56(sp)
   84ba0:	dc400d15 	stw	r17,52(sp)
   84ba4:	14416716 	blt	r2,r17,85144 <___vfprintf_internal_r+0xb90>
   84ba8:	a8c00204 	addi	r3,r21,8
   84bac:	d9814c17 	ldw	r6,1328(sp)
   84bb0:	3080010c 	andi	r2,r6,4
   84bb4:	10002826 	beq	r2,zero,84c58 <___vfprintf_internal_r+0x6a4>
   84bb8:	d8814a17 	ldw	r2,1320(sp)
   84bbc:	d9014517 	ldw	r4,1300(sp)
   84bc0:	1121c83a 	sub	r16,r2,r4
   84bc4:	0400240e 	bge	zero,r16,84c58 <___vfprintf_internal_r+0x6a4>
   84bc8:	00800404 	movi	r2,16
   84bcc:	14044f0e 	bge	r2,r16,85d0c <___vfprintf_internal_r+0x1758>
   84bd0:	dc400d17 	ldw	r17,52(sp)
   84bd4:	1027883a 	mov	r19,r2
   84bd8:	07000274 	movhi	fp,9
   84bdc:	e73d2884 	addi	fp,fp,-2910
   84be0:	050001c4 	movi	r20,7
   84be4:	00000306 	br	84bf4 <___vfprintf_internal_r+0x640>
   84be8:	843ffc04 	addi	r16,r16,-16
   84bec:	18c00204 	addi	r3,r3,8
   84bf0:	9c00110e 	bge	r19,r16,84c38 <___vfprintf_internal_r+0x684>
   84bf4:	94800404 	addi	r18,r18,16
   84bf8:	8c400044 	addi	r17,r17,1
   84bfc:	1f000015 	stw	fp,0(r3)
   84c00:	1cc00115 	stw	r19,4(r3)
   84c04:	dc800e15 	stw	r18,56(sp)
   84c08:	dc400d15 	stw	r17,52(sp)
   84c0c:	a47ff60e 	bge	r20,r17,84be8 <___vfprintf_internal_r+0x634>
   84c10:	d9014f17 	ldw	r4,1340(sp)
   84c14:	b00b883a 	mov	r5,r22
   84c18:	d9800c04 	addi	r6,sp,48
   84c1c:	008455c0 	call	8455c <__sprint_r>
   84c20:	10001c1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84c24:	843ffc04 	addi	r16,r16,-16
   84c28:	dc800e17 	ldw	r18,56(sp)
   84c2c:	dc400d17 	ldw	r17,52(sp)
   84c30:	d8c01904 	addi	r3,sp,100
   84c34:	9c3fef16 	blt	r19,r16,84bf4 <___vfprintf_internal_r+0x640>
   84c38:	9425883a 	add	r18,r18,r16
   84c3c:	8c400044 	addi	r17,r17,1
   84c40:	008001c4 	movi	r2,7
   84c44:	1f000015 	stw	fp,0(r3)
   84c48:	1c000115 	stw	r16,4(r3)
   84c4c:	dc800e15 	stw	r18,56(sp)
   84c50:	dc400d15 	stw	r17,52(sp)
   84c54:	1440cb16 	blt	r2,r17,84f84 <___vfprintf_internal_r+0x9d0>
   84c58:	d8814a17 	ldw	r2,1320(sp)
   84c5c:	d9414517 	ldw	r5,1300(sp)
   84c60:	1140010e 	bge	r2,r5,84c68 <___vfprintf_internal_r+0x6b4>
   84c64:	2805883a 	mov	r2,r5
   84c68:	d9814b17 	ldw	r6,1324(sp)
   84c6c:	308d883a 	add	r6,r6,r2
   84c70:	d9814b15 	stw	r6,1324(sp)
   84c74:	90013b1e 	bne	r18,zero,85164 <___vfprintf_internal_r+0xbb0>
   84c78:	d9c14017 	ldw	r7,1280(sp)
   84c7c:	dd401904 	addi	r21,sp,100
   84c80:	d8000d15 	stw	zero,52(sp)
   84c84:	003ea706 	br	84724 <___vfprintf_internal_r+0x170>
   84c88:	d8800e17 	ldw	r2,56(sp)
   84c8c:	10053f1e 	bne	r2,zero,8618c <___vfprintf_internal_r+0x1bd8>
   84c90:	d8000d15 	stw	zero,52(sp)
   84c94:	b080030b 	ldhu	r2,12(r22)
   84c98:	1080100c 	andi	r2,r2,64
   84c9c:	103e8726 	beq	r2,zero,846bc <___vfprintf_internal_r+0x108>
   84ca0:	00bfffc4 	movi	r2,-1
   84ca4:	d8814b15 	stw	r2,1324(sp)
   84ca8:	003e8406 	br	846bc <___vfprintf_internal_r+0x108>
   84cac:	d9814d17 	ldw	r6,1332(sp)
   84cb0:	00801944 	movi	r2,101
   84cb4:	11806e16 	blt	r2,r6,84e70 <___vfprintf_internal_r+0x8bc>
   84cb8:	d9414717 	ldw	r5,1308(sp)
   84cbc:	00c00044 	movi	r3,1
   84cc0:	1943430e 	bge	r3,r5,859d0 <___vfprintf_internal_r+0x141c>
   84cc4:	d8814117 	ldw	r2,1284(sp)
   84cc8:	94800044 	addi	r18,r18,1
   84ccc:	8c400044 	addi	r17,r17,1
   84cd0:	a8800015 	stw	r2,0(r21)
   84cd4:	008001c4 	movi	r2,7
   84cd8:	a8c00115 	stw	r3,4(r21)
   84cdc:	dc800e15 	stw	r18,56(sp)
   84ce0:	dc400d15 	stw	r17,52(sp)
   84ce4:	1441ca16 	blt	r2,r17,85410 <___vfprintf_internal_r+0xe5c>
   84ce8:	a8c00204 	addi	r3,r21,8
   84cec:	d9014917 	ldw	r4,1316(sp)
   84cf0:	00800044 	movi	r2,1
   84cf4:	94800044 	addi	r18,r18,1
   84cf8:	8c400044 	addi	r17,r17,1
   84cfc:	18800115 	stw	r2,4(r3)
   84d00:	008001c4 	movi	r2,7
   84d04:	19000015 	stw	r4,0(r3)
   84d08:	dc800e15 	stw	r18,56(sp)
   84d0c:	dc400d15 	stw	r17,52(sp)
   84d10:	1441b616 	blt	r2,r17,853ec <___vfprintf_internal_r+0xe38>
   84d14:	1cc00204 	addi	r19,r3,8
   84d18:	d9014217 	ldw	r4,1288(sp)
   84d1c:	d9414317 	ldw	r5,1292(sp)
   84d20:	000d883a 	mov	r6,zero
   84d24:	000f883a 	mov	r7,zero
   84d28:	008c5280 	call	8c528 <__nedf2>
   84d2c:	10017426 	beq	r2,zero,85300 <___vfprintf_internal_r+0xd4c>
   84d30:	d9414717 	ldw	r5,1308(sp)
   84d34:	d9814117 	ldw	r6,1284(sp)
   84d38:	8c400044 	addi	r17,r17,1
   84d3c:	2c85883a 	add	r2,r5,r18
   84d40:	14bfffc4 	addi	r18,r2,-1
   84d44:	28bfffc4 	addi	r2,r5,-1
   84d48:	30c00044 	addi	r3,r6,1
   84d4c:	98800115 	stw	r2,4(r19)
   84d50:	008001c4 	movi	r2,7
   84d54:	98c00015 	stw	r3,0(r19)
   84d58:	dc800e15 	stw	r18,56(sp)
   84d5c:	dc400d15 	stw	r17,52(sp)
   84d60:	14418e16 	blt	r2,r17,8539c <___vfprintf_internal_r+0xde8>
   84d64:	9cc00204 	addi	r19,r19,8
   84d68:	d9414817 	ldw	r5,1312(sp)
   84d6c:	d8800804 	addi	r2,sp,32
   84d70:	8c400044 	addi	r17,r17,1
   84d74:	9165883a 	add	r18,r18,r5
   84d78:	98800015 	stw	r2,0(r19)
   84d7c:	008001c4 	movi	r2,7
   84d80:	99400115 	stw	r5,4(r19)
   84d84:	dc800e15 	stw	r18,56(sp)
   84d88:	dc400d15 	stw	r17,52(sp)
   84d8c:	1440ed16 	blt	r2,r17,85144 <___vfprintf_internal_r+0xb90>
   84d90:	98c00204 	addi	r3,r19,8
   84d94:	003f8506 	br	84bac <___vfprintf_internal_r+0x5f8>
   84d98:	d9814a17 	ldw	r6,1320(sp)
   84d9c:	d8814517 	ldw	r2,1300(sp)
   84da0:	30a1c83a 	sub	r16,r6,r2
   84da4:	043f4b0e 	bge	zero,r16,84ad4 <___vfprintf_internal_r+0x520>
   84da8:	00800404 	movi	r2,16
   84dac:	1404340e 	bge	r2,r16,85e80 <___vfprintf_internal_r+0x18cc>
   84db0:	1027883a 	mov	r19,r2
   84db4:	07000274 	movhi	fp,9
   84db8:	e73d2484 	addi	fp,fp,-2926
   84dbc:	050001c4 	movi	r20,7
   84dc0:	00000306 	br	84dd0 <___vfprintf_internal_r+0x81c>
   84dc4:	843ffc04 	addi	r16,r16,-16
   84dc8:	ad400204 	addi	r21,r21,8
   84dcc:	9c00130e 	bge	r19,r16,84e1c <___vfprintf_internal_r+0x868>
   84dd0:	94800404 	addi	r18,r18,16
   84dd4:	8c400044 	addi	r17,r17,1
   84dd8:	af000015 	stw	fp,0(r21)
   84ddc:	acc00115 	stw	r19,4(r21)
   84de0:	dc800e15 	stw	r18,56(sp)
   84de4:	dc400d15 	stw	r17,52(sp)
   84de8:	a47ff60e 	bge	r20,r17,84dc4 <___vfprintf_internal_r+0x810>
   84dec:	d9014f17 	ldw	r4,1340(sp)
   84df0:	b00b883a 	mov	r5,r22
   84df4:	d9800c04 	addi	r6,sp,48
   84df8:	d9c15115 	stw	r7,1348(sp)
   84dfc:	008455c0 	call	8455c <__sprint_r>
   84e00:	d9c15117 	ldw	r7,1348(sp)
   84e04:	103fa31e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84e08:	843ffc04 	addi	r16,r16,-16
   84e0c:	dc800e17 	ldw	r18,56(sp)
   84e10:	dc400d17 	ldw	r17,52(sp)
   84e14:	dd401904 	addi	r21,sp,100
   84e18:	9c3fed16 	blt	r19,r16,84dd0 <___vfprintf_internal_r+0x81c>
   84e1c:	9425883a 	add	r18,r18,r16
   84e20:	8c400044 	addi	r17,r17,1
   84e24:	008001c4 	movi	r2,7
   84e28:	af000015 	stw	fp,0(r21)
   84e2c:	ac000115 	stw	r16,4(r21)
   84e30:	dc800e15 	stw	r18,56(sp)
   84e34:	dc400d15 	stw	r17,52(sp)
   84e38:	14416116 	blt	r2,r17,853c0 <___vfprintf_internal_r+0xe0c>
   84e3c:	ad400204 	addi	r21,r21,8
   84e40:	003f2406 	br	84ad4 <___vfprintf_internal_r+0x520>
   84e44:	d9014f17 	ldw	r4,1340(sp)
   84e48:	00880240 	call	88024 <__sinit>
   84e4c:	d9c15117 	ldw	r7,1348(sp)
   84e50:	003def06 	br	84610 <___vfprintf_internal_r+0x5c>
   84e54:	d9014f17 	ldw	r4,1340(sp)
   84e58:	b00b883a 	mov	r5,r22
   84e5c:	d9c15115 	stw	r7,1348(sp)
   84e60:	00864840 	call	86484 <__swsetup_r>
   84e64:	d9c15117 	ldw	r7,1348(sp)
   84e68:	103dee26 	beq	r2,zero,84624 <___vfprintf_internal_r+0x70>
   84e6c:	003f8c06 	br	84ca0 <___vfprintf_internal_r+0x6ec>
   84e70:	d9014217 	ldw	r4,1288(sp)
   84e74:	d9414317 	ldw	r5,1292(sp)
   84e78:	000d883a 	mov	r6,zero
   84e7c:	000f883a 	mov	r7,zero
   84e80:	0083a040 	call	83a04 <__eqdf2>
   84e84:	1000f21e 	bne	r2,zero,85250 <___vfprintf_internal_r+0xc9c>
   84e88:	00800274 	movhi	r2,9
   84e8c:	10bd2404 	addi	r2,r2,-2928
   84e90:	94800044 	addi	r18,r18,1
   84e94:	8c400044 	addi	r17,r17,1
   84e98:	a8800015 	stw	r2,0(r21)
   84e9c:	00c00044 	movi	r3,1
   84ea0:	008001c4 	movi	r2,7
   84ea4:	a8c00115 	stw	r3,4(r21)
   84ea8:	dc800e15 	stw	r18,56(sp)
   84eac:	dc400d15 	stw	r17,52(sp)
   84eb0:	1442fa16 	blt	r2,r17,85a9c <___vfprintf_internal_r+0x14e8>
   84eb4:	a8c00204 	addi	r3,r21,8
   84eb8:	d8800517 	ldw	r2,20(sp)
   84ebc:	d9014717 	ldw	r4,1308(sp)
   84ec0:	11015c0e 	bge	r2,r4,85434 <___vfprintf_internal_r+0xe80>
   84ec4:	dc400d17 	ldw	r17,52(sp)
   84ec8:	d9814917 	ldw	r6,1316(sp)
   84ecc:	00800044 	movi	r2,1
   84ed0:	94800044 	addi	r18,r18,1
   84ed4:	8c400044 	addi	r17,r17,1
   84ed8:	18800115 	stw	r2,4(r3)
   84edc:	008001c4 	movi	r2,7
   84ee0:	19800015 	stw	r6,0(r3)
   84ee4:	dc800e15 	stw	r18,56(sp)
   84ee8:	dc400d15 	stw	r17,52(sp)
   84eec:	14431016 	blt	r2,r17,85b30 <___vfprintf_internal_r+0x157c>
   84ef0:	18c00204 	addi	r3,r3,8
   84ef4:	d8814717 	ldw	r2,1308(sp)
   84ef8:	143fffc4 	addi	r16,r2,-1
   84efc:	043f2b0e 	bge	zero,r16,84bac <___vfprintf_internal_r+0x5f8>
   84f00:	00800404 	movi	r2,16
   84f04:	1402a20e 	bge	r2,r16,85990 <___vfprintf_internal_r+0x13dc>
   84f08:	dc400d17 	ldw	r17,52(sp)
   84f0c:	1027883a 	mov	r19,r2
   84f10:	07000274 	movhi	fp,9
   84f14:	e73d2484 	addi	fp,fp,-2926
   84f18:	050001c4 	movi	r20,7
   84f1c:	00000306 	br	84f2c <___vfprintf_internal_r+0x978>
   84f20:	18c00204 	addi	r3,r3,8
   84f24:	843ffc04 	addi	r16,r16,-16
   84f28:	9c029c0e 	bge	r19,r16,8599c <___vfprintf_internal_r+0x13e8>
   84f2c:	94800404 	addi	r18,r18,16
   84f30:	8c400044 	addi	r17,r17,1
   84f34:	1f000015 	stw	fp,0(r3)
   84f38:	1cc00115 	stw	r19,4(r3)
   84f3c:	dc800e15 	stw	r18,56(sp)
   84f40:	dc400d15 	stw	r17,52(sp)
   84f44:	a47ff60e 	bge	r20,r17,84f20 <___vfprintf_internal_r+0x96c>
   84f48:	d9014f17 	ldw	r4,1340(sp)
   84f4c:	b00b883a 	mov	r5,r22
   84f50:	d9800c04 	addi	r6,sp,48
   84f54:	008455c0 	call	8455c <__sprint_r>
   84f58:	103f4e1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84f5c:	dc800e17 	ldw	r18,56(sp)
   84f60:	dc400d17 	ldw	r17,52(sp)
   84f64:	d8c01904 	addi	r3,sp,100
   84f68:	003fee06 	br	84f24 <___vfprintf_internal_r+0x970>
   84f6c:	d8802c0b 	ldhu	r2,176(sp)
   84f70:	00ffffc4 	movi	r3,-1
   84f74:	d8c14b15 	stw	r3,1324(sp)
   84f78:	1080100c 	andi	r2,r2,64
   84f7c:	103dcc1e 	bne	r2,zero,846b0 <___vfprintf_internal_r+0xfc>
   84f80:	003dce06 	br	846bc <___vfprintf_internal_r+0x108>
   84f84:	d9014f17 	ldw	r4,1340(sp)
   84f88:	b00b883a 	mov	r5,r22
   84f8c:	d9800c04 	addi	r6,sp,48
   84f90:	008455c0 	call	8455c <__sprint_r>
   84f94:	103f3f1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   84f98:	dc800e17 	ldw	r18,56(sp)
   84f9c:	003f2e06 	br	84c58 <___vfprintf_internal_r+0x6a4>
   84fa0:	d9414c17 	ldw	r5,1328(sp)
   84fa4:	29400414 	ori	r5,r5,16
   84fa8:	d9414c15 	stw	r5,1328(sp)
   84fac:	d9814c17 	ldw	r6,1328(sp)
   84fb0:	3080080c 	andi	r2,r6,32
   84fb4:	10014f1e 	bne	r2,zero,854f4 <___vfprintf_internal_r+0xf40>
   84fb8:	d8c14c17 	ldw	r3,1328(sp)
   84fbc:	1880040c 	andi	r2,r3,16
   84fc0:	1002ea1e 	bne	r2,zero,85b6c <___vfprintf_internal_r+0x15b8>
   84fc4:	d9014c17 	ldw	r4,1328(sp)
   84fc8:	2080100c 	andi	r2,r4,64
   84fcc:	1002e726 	beq	r2,zero,85b6c <___vfprintf_internal_r+0x15b8>
   84fd0:	3880000f 	ldh	r2,0(r7)
   84fd4:	39c00104 	addi	r7,r7,4
   84fd8:	d9c14015 	stw	r7,1280(sp)
   84fdc:	1023d7fa 	srai	r17,r2,31
   84fe0:	1021883a 	mov	r16,r2
   84fe4:	88037216 	blt	r17,zero,85db0 <___vfprintf_internal_r+0x17fc>
   84fe8:	01000044 	movi	r4,1
   84fec:	98000416 	blt	r19,zero,85000 <___vfprintf_internal_r+0xa4c>
   84ff0:	d8c14c17 	ldw	r3,1328(sp)
   84ff4:	00bfdfc4 	movi	r2,-129
   84ff8:	1886703a 	and	r3,r3,r2
   84ffc:	d8c14c15 	stw	r3,1328(sp)
   85000:	8444b03a 	or	r2,r16,r17
   85004:	1002261e 	bne	r2,zero,858a0 <___vfprintf_internal_r+0x12ec>
   85008:	9802251e 	bne	r19,zero,858a0 <___vfprintf_internal_r+0x12ec>
   8500c:	20803fcc 	andi	r2,r4,255
   85010:	10029b26 	beq	r2,zero,85a80 <___vfprintf_internal_r+0x14cc>
   85014:	d8c01904 	addi	r3,sp,100
   85018:	dd000f04 	addi	r20,sp,60
   8501c:	d8c14115 	stw	r3,1284(sp)
   85020:	d8c14117 	ldw	r3,1284(sp)
   85024:	dcc14515 	stw	r19,1300(sp)
   85028:	a0c5c83a 	sub	r2,r20,r3
   8502c:	11c00a04 	addi	r7,r2,40
   85030:	99c0010e 	bge	r19,r7,85038 <___vfprintf_internal_r+0xa84>
   85034:	d9c14515 	stw	r7,1300(sp)
   85038:	dcc14615 	stw	r19,1304(sp)
   8503c:	d8800407 	ldb	r2,16(sp)
   85040:	103e4c26 	beq	r2,zero,84974 <___vfprintf_internal_r+0x3c0>
   85044:	d8814517 	ldw	r2,1300(sp)
   85048:	10800044 	addi	r2,r2,1
   8504c:	d8814515 	stw	r2,1300(sp)
   85050:	003e4806 	br	84974 <___vfprintf_internal_r+0x3c0>
   85054:	d9814c17 	ldw	r6,1328(sp)
   85058:	31800414 	ori	r6,r6,16
   8505c:	d9814c15 	stw	r6,1328(sp)
   85060:	d8c14c17 	ldw	r3,1328(sp)
   85064:	1880080c 	andi	r2,r3,32
   85068:	1001271e 	bne	r2,zero,85508 <___vfprintf_internal_r+0xf54>
   8506c:	d9414c17 	ldw	r5,1328(sp)
   85070:	2880040c 	andi	r2,r5,16
   85074:	1002b61e 	bne	r2,zero,85b50 <___vfprintf_internal_r+0x159c>
   85078:	d9814c17 	ldw	r6,1328(sp)
   8507c:	3080100c 	andi	r2,r6,64
   85080:	1002b326 	beq	r2,zero,85b50 <___vfprintf_internal_r+0x159c>
   85084:	3c00000b 	ldhu	r16,0(r7)
   85088:	0009883a 	mov	r4,zero
   8508c:	39c00104 	addi	r7,r7,4
   85090:	0023883a 	mov	r17,zero
   85094:	d9c14015 	stw	r7,1280(sp)
   85098:	d8000405 	stb	zero,16(sp)
   8509c:	003fd306 	br	84fec <___vfprintf_internal_r+0xa38>
   850a0:	d9014c17 	ldw	r4,1328(sp)
   850a4:	21000414 	ori	r4,r4,16
   850a8:	d9014c15 	stw	r4,1328(sp)
   850ac:	d9414c17 	ldw	r5,1328(sp)
   850b0:	2880080c 	andi	r2,r5,32
   850b4:	1001081e 	bne	r2,zero,854d8 <___vfprintf_internal_r+0xf24>
   850b8:	d8c14c17 	ldw	r3,1328(sp)
   850bc:	1880040c 	andi	r2,r3,16
   850c0:	1002b01e 	bne	r2,zero,85b84 <___vfprintf_internal_r+0x15d0>
   850c4:	d9014c17 	ldw	r4,1328(sp)
   850c8:	2080100c 	andi	r2,r4,64
   850cc:	1002ad26 	beq	r2,zero,85b84 <___vfprintf_internal_r+0x15d0>
   850d0:	3c00000b 	ldhu	r16,0(r7)
   850d4:	01000044 	movi	r4,1
   850d8:	39c00104 	addi	r7,r7,4
   850dc:	0023883a 	mov	r17,zero
   850e0:	d9c14015 	stw	r7,1280(sp)
   850e4:	d8000405 	stb	zero,16(sp)
   850e8:	003fc006 	br	84fec <___vfprintf_internal_r+0xa38>
   850ec:	d9014f17 	ldw	r4,1340(sp)
   850f0:	b00b883a 	mov	r5,r22
   850f4:	d9800c04 	addi	r6,sp,48
   850f8:	008455c0 	call	8455c <__sprint_r>
   850fc:	103ee51e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85100:	dc800e17 	ldw	r18,56(sp)
   85104:	d8c01904 	addi	r3,sp,100
   85108:	d9814c17 	ldw	r6,1328(sp)
   8510c:	3080004c 	andi	r2,r6,1
   85110:	1005003a 	cmpeq	r2,r2,zero
   85114:	103ea51e 	bne	r2,zero,84bac <___vfprintf_internal_r+0x5f8>
   85118:	00800044 	movi	r2,1
   8511c:	dc400d17 	ldw	r17,52(sp)
   85120:	18800115 	stw	r2,4(r3)
   85124:	d8814917 	ldw	r2,1316(sp)
   85128:	94800044 	addi	r18,r18,1
   8512c:	8c400044 	addi	r17,r17,1
   85130:	18800015 	stw	r2,0(r3)
   85134:	008001c4 	movi	r2,7
   85138:	dc800e15 	stw	r18,56(sp)
   8513c:	dc400d15 	stw	r17,52(sp)
   85140:	14421e0e 	bge	r2,r17,859bc <___vfprintf_internal_r+0x1408>
   85144:	d9014f17 	ldw	r4,1340(sp)
   85148:	b00b883a 	mov	r5,r22
   8514c:	d9800c04 	addi	r6,sp,48
   85150:	008455c0 	call	8455c <__sprint_r>
   85154:	103ecf1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85158:	dc800e17 	ldw	r18,56(sp)
   8515c:	d8c01904 	addi	r3,sp,100
   85160:	003e9206 	br	84bac <___vfprintf_internal_r+0x5f8>
   85164:	d9014f17 	ldw	r4,1340(sp)
   85168:	b00b883a 	mov	r5,r22
   8516c:	d9800c04 	addi	r6,sp,48
   85170:	008455c0 	call	8455c <__sprint_r>
   85174:	103ec026 	beq	r2,zero,84c78 <___vfprintf_internal_r+0x6c4>
   85178:	003ec606 	br	84c94 <___vfprintf_internal_r+0x6e0>
   8517c:	d9014f17 	ldw	r4,1340(sp)
   85180:	b00b883a 	mov	r5,r22
   85184:	d9800c04 	addi	r6,sp,48
   85188:	d9c15115 	stw	r7,1348(sp)
   8518c:	008455c0 	call	8455c <__sprint_r>
   85190:	d9c15117 	ldw	r7,1348(sp)
   85194:	103ebf1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85198:	dc800e17 	ldw	r18,56(sp)
   8519c:	dc400d17 	ldw	r17,52(sp)
   851a0:	dd401904 	addi	r21,sp,100
   851a4:	003e7406 	br	84b78 <___vfprintf_internal_r+0x5c4>
   851a8:	d9014f17 	ldw	r4,1340(sp)
   851ac:	b00b883a 	mov	r5,r22
   851b0:	d9800c04 	addi	r6,sp,48
   851b4:	d9c15115 	stw	r7,1348(sp)
   851b8:	008455c0 	call	8455c <__sprint_r>
   851bc:	d9c15117 	ldw	r7,1348(sp)
   851c0:	103eb41e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   851c4:	dd401904 	addi	r21,sp,100
   851c8:	003d6d06 	br	84780 <___vfprintf_internal_r+0x1cc>
   851cc:	d9014f17 	ldw	r4,1340(sp)
   851d0:	b00b883a 	mov	r5,r22
   851d4:	d9800c04 	addi	r6,sp,48
   851d8:	d9c15115 	stw	r7,1348(sp)
   851dc:	008455c0 	call	8455c <__sprint_r>
   851e0:	d9c15117 	ldw	r7,1348(sp)
   851e4:	103eab1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   851e8:	dc800e17 	ldw	r18,56(sp)
   851ec:	dc400d17 	ldw	r17,52(sp)
   851f0:	dd401904 	addi	r21,sp,100
   851f4:	003e3406 	br	84ac8 <___vfprintf_internal_r+0x514>
   851f8:	d9014f17 	ldw	r4,1340(sp)
   851fc:	b00b883a 	mov	r5,r22
   85200:	d9800c04 	addi	r6,sp,48
   85204:	d9c15115 	stw	r7,1348(sp)
   85208:	008455c0 	call	8455c <__sprint_r>
   8520c:	d9c15117 	ldw	r7,1348(sp)
   85210:	103ea01e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85214:	dc800e17 	ldw	r18,56(sp)
   85218:	dc400d17 	ldw	r17,52(sp)
   8521c:	dd401904 	addi	r21,sp,100
   85220:	003e1c06 	br	84a94 <___vfprintf_internal_r+0x4e0>
   85224:	d9014f17 	ldw	r4,1340(sp)
   85228:	b00b883a 	mov	r5,r22
   8522c:	d9800c04 	addi	r6,sp,48
   85230:	d9c15115 	stw	r7,1348(sp)
   85234:	008455c0 	call	8455c <__sprint_r>
   85238:	d9c15117 	ldw	r7,1348(sp)
   8523c:	103e951e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85240:	dc800e17 	ldw	r18,56(sp)
   85244:	dc400d17 	ldw	r17,52(sp)
   85248:	dd401904 	addi	r21,sp,100
   8524c:	003e0406 	br	84a60 <___vfprintf_internal_r+0x4ac>
   85250:	d9000517 	ldw	r4,20(sp)
   85254:	0102520e 	bge	zero,r4,85ba0 <___vfprintf_internal_r+0x15ec>
   85258:	d9814717 	ldw	r6,1308(sp)
   8525c:	21807a16 	blt	r4,r6,85448 <___vfprintf_internal_r+0xe94>
   85260:	d8814117 	ldw	r2,1284(sp)
   85264:	91a5883a 	add	r18,r18,r6
   85268:	8c400044 	addi	r17,r17,1
   8526c:	a8800015 	stw	r2,0(r21)
   85270:	008001c4 	movi	r2,7
   85274:	a9800115 	stw	r6,4(r21)
   85278:	dc800e15 	stw	r18,56(sp)
   8527c:	dc400d15 	stw	r17,52(sp)
   85280:	1442f616 	blt	r2,r17,85e5c <___vfprintf_internal_r+0x18a8>
   85284:	a8c00204 	addi	r3,r21,8
   85288:	d9414717 	ldw	r5,1308(sp)
   8528c:	2161c83a 	sub	r16,r4,r5
   85290:	043f9d0e 	bge	zero,r16,85108 <___vfprintf_internal_r+0xb54>
   85294:	00800404 	movi	r2,16
   85298:	1402130e 	bge	r2,r16,85ae8 <___vfprintf_internal_r+0x1534>
   8529c:	dc400d17 	ldw	r17,52(sp)
   852a0:	1027883a 	mov	r19,r2
   852a4:	07000274 	movhi	fp,9
   852a8:	e73d2484 	addi	fp,fp,-2926
   852ac:	050001c4 	movi	r20,7
   852b0:	00000306 	br	852c0 <___vfprintf_internal_r+0xd0c>
   852b4:	18c00204 	addi	r3,r3,8
   852b8:	843ffc04 	addi	r16,r16,-16
   852bc:	9c020d0e 	bge	r19,r16,85af4 <___vfprintf_internal_r+0x1540>
   852c0:	94800404 	addi	r18,r18,16
   852c4:	8c400044 	addi	r17,r17,1
   852c8:	1f000015 	stw	fp,0(r3)
   852cc:	1cc00115 	stw	r19,4(r3)
   852d0:	dc800e15 	stw	r18,56(sp)
   852d4:	dc400d15 	stw	r17,52(sp)
   852d8:	a47ff60e 	bge	r20,r17,852b4 <___vfprintf_internal_r+0xd00>
   852dc:	d9014f17 	ldw	r4,1340(sp)
   852e0:	b00b883a 	mov	r5,r22
   852e4:	d9800c04 	addi	r6,sp,48
   852e8:	008455c0 	call	8455c <__sprint_r>
   852ec:	103e691e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   852f0:	dc800e17 	ldw	r18,56(sp)
   852f4:	dc400d17 	ldw	r17,52(sp)
   852f8:	d8c01904 	addi	r3,sp,100
   852fc:	003fee06 	br	852b8 <___vfprintf_internal_r+0xd04>
   85300:	d8814717 	ldw	r2,1308(sp)
   85304:	143fffc4 	addi	r16,r2,-1
   85308:	043e970e 	bge	zero,r16,84d68 <___vfprintf_internal_r+0x7b4>
   8530c:	00800404 	movi	r2,16
   85310:	1400180e 	bge	r2,r16,85374 <___vfprintf_internal_r+0xdc0>
   85314:	1029883a 	mov	r20,r2
   85318:	07000274 	movhi	fp,9
   8531c:	e73d2484 	addi	fp,fp,-2926
   85320:	054001c4 	movi	r21,7
   85324:	00000306 	br	85334 <___vfprintf_internal_r+0xd80>
   85328:	9cc00204 	addi	r19,r19,8
   8532c:	843ffc04 	addi	r16,r16,-16
   85330:	a400120e 	bge	r20,r16,8537c <___vfprintf_internal_r+0xdc8>
   85334:	94800404 	addi	r18,r18,16
   85338:	8c400044 	addi	r17,r17,1
   8533c:	9f000015 	stw	fp,0(r19)
   85340:	9d000115 	stw	r20,4(r19)
   85344:	dc800e15 	stw	r18,56(sp)
   85348:	dc400d15 	stw	r17,52(sp)
   8534c:	ac7ff60e 	bge	r21,r17,85328 <___vfprintf_internal_r+0xd74>
   85350:	d9014f17 	ldw	r4,1340(sp)
   85354:	b00b883a 	mov	r5,r22
   85358:	d9800c04 	addi	r6,sp,48
   8535c:	008455c0 	call	8455c <__sprint_r>
   85360:	103e4c1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85364:	dc800e17 	ldw	r18,56(sp)
   85368:	dc400d17 	ldw	r17,52(sp)
   8536c:	dcc01904 	addi	r19,sp,100
   85370:	003fee06 	br	8532c <___vfprintf_internal_r+0xd78>
   85374:	07000274 	movhi	fp,9
   85378:	e73d2484 	addi	fp,fp,-2926
   8537c:	9425883a 	add	r18,r18,r16
   85380:	8c400044 	addi	r17,r17,1
   85384:	008001c4 	movi	r2,7
   85388:	9f000015 	stw	fp,0(r19)
   8538c:	9c000115 	stw	r16,4(r19)
   85390:	dc800e15 	stw	r18,56(sp)
   85394:	dc400d15 	stw	r17,52(sp)
   85398:	147e720e 	bge	r2,r17,84d64 <___vfprintf_internal_r+0x7b0>
   8539c:	d9014f17 	ldw	r4,1340(sp)
   853a0:	b00b883a 	mov	r5,r22
   853a4:	d9800c04 	addi	r6,sp,48
   853a8:	008455c0 	call	8455c <__sprint_r>
   853ac:	103e391e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   853b0:	dc800e17 	ldw	r18,56(sp)
   853b4:	dc400d17 	ldw	r17,52(sp)
   853b8:	dcc01904 	addi	r19,sp,100
   853bc:	003e6a06 	br	84d68 <___vfprintf_internal_r+0x7b4>
   853c0:	d9014f17 	ldw	r4,1340(sp)
   853c4:	b00b883a 	mov	r5,r22
   853c8:	d9800c04 	addi	r6,sp,48
   853cc:	d9c15115 	stw	r7,1348(sp)
   853d0:	008455c0 	call	8455c <__sprint_r>
   853d4:	d9c15117 	ldw	r7,1348(sp)
   853d8:	103e2e1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   853dc:	dc800e17 	ldw	r18,56(sp)
   853e0:	dc400d17 	ldw	r17,52(sp)
   853e4:	dd401904 	addi	r21,sp,100
   853e8:	003dba06 	br	84ad4 <___vfprintf_internal_r+0x520>
   853ec:	d9014f17 	ldw	r4,1340(sp)
   853f0:	b00b883a 	mov	r5,r22
   853f4:	d9800c04 	addi	r6,sp,48
   853f8:	008455c0 	call	8455c <__sprint_r>
   853fc:	103e251e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85400:	dc800e17 	ldw	r18,56(sp)
   85404:	dc400d17 	ldw	r17,52(sp)
   85408:	dcc01904 	addi	r19,sp,100
   8540c:	003e4206 	br	84d18 <___vfprintf_internal_r+0x764>
   85410:	d9014f17 	ldw	r4,1340(sp)
   85414:	b00b883a 	mov	r5,r22
   85418:	d9800c04 	addi	r6,sp,48
   8541c:	008455c0 	call	8455c <__sprint_r>
   85420:	103e1c1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85424:	dc800e17 	ldw	r18,56(sp)
   85428:	dc400d17 	ldw	r17,52(sp)
   8542c:	d8c01904 	addi	r3,sp,100
   85430:	003e2e06 	br	84cec <___vfprintf_internal_r+0x738>
   85434:	d9414c17 	ldw	r5,1328(sp)
   85438:	2880004c 	andi	r2,r5,1
   8543c:	1005003a 	cmpeq	r2,r2,zero
   85440:	103dda1e 	bne	r2,zero,84bac <___vfprintf_internal_r+0x5f8>
   85444:	003e9f06 	br	84ec4 <___vfprintf_internal_r+0x910>
   85448:	d8c14117 	ldw	r3,1284(sp)
   8544c:	9125883a 	add	r18,r18,r4
   85450:	8c400044 	addi	r17,r17,1
   85454:	008001c4 	movi	r2,7
   85458:	a8c00015 	stw	r3,0(r21)
   8545c:	a9000115 	stw	r4,4(r21)
   85460:	dc800e15 	stw	r18,56(sp)
   85464:	dc400d15 	stw	r17,52(sp)
   85468:	14426616 	blt	r2,r17,85e04 <___vfprintf_internal_r+0x1850>
   8546c:	a8c00204 	addi	r3,r21,8
   85470:	d9414917 	ldw	r5,1316(sp)
   85474:	00800044 	movi	r2,1
   85478:	94800044 	addi	r18,r18,1
   8547c:	8c400044 	addi	r17,r17,1
   85480:	18800115 	stw	r2,4(r3)
   85484:	008001c4 	movi	r2,7
   85488:	19400015 	stw	r5,0(r3)
   8548c:	dc800e15 	stw	r18,56(sp)
   85490:	dc400d15 	stw	r17,52(sp)
   85494:	2021883a 	mov	r16,r4
   85498:	14425016 	blt	r2,r17,85ddc <___vfprintf_internal_r+0x1828>
   8549c:	19400204 	addi	r5,r3,8
   854a0:	d9814717 	ldw	r6,1308(sp)
   854a4:	8c400044 	addi	r17,r17,1
   854a8:	dc400d15 	stw	r17,52(sp)
   854ac:	3107c83a 	sub	r3,r6,r4
   854b0:	d9014117 	ldw	r4,1284(sp)
   854b4:	90e5883a 	add	r18,r18,r3
   854b8:	28c00115 	stw	r3,4(r5)
   854bc:	8105883a 	add	r2,r16,r4
   854c0:	28800015 	stw	r2,0(r5)
   854c4:	008001c4 	movi	r2,7
   854c8:	dc800e15 	stw	r18,56(sp)
   854cc:	147f1d16 	blt	r2,r17,85144 <___vfprintf_internal_r+0xb90>
   854d0:	28c00204 	addi	r3,r5,8
   854d4:	003db506 	br	84bac <___vfprintf_internal_r+0x5f8>
   854d8:	3c000017 	ldw	r16,0(r7)
   854dc:	3c400117 	ldw	r17,4(r7)
   854e0:	39800204 	addi	r6,r7,8
   854e4:	01000044 	movi	r4,1
   854e8:	d9814015 	stw	r6,1280(sp)
   854ec:	d8000405 	stb	zero,16(sp)
   854f0:	003ebe06 	br	84fec <___vfprintf_internal_r+0xa38>
   854f4:	3c000017 	ldw	r16,0(r7)
   854f8:	3c400117 	ldw	r17,4(r7)
   854fc:	38800204 	addi	r2,r7,8
   85500:	d8814015 	stw	r2,1280(sp)
   85504:	003eb706 	br	84fe4 <___vfprintf_internal_r+0xa30>
   85508:	3c000017 	ldw	r16,0(r7)
   8550c:	3c400117 	ldw	r17,4(r7)
   85510:	39000204 	addi	r4,r7,8
   85514:	d9014015 	stw	r4,1280(sp)
   85518:	0009883a 	mov	r4,zero
   8551c:	d8000405 	stb	zero,16(sp)
   85520:	003eb206 	br	84fec <___vfprintf_internal_r+0xa38>
   85524:	38c00017 	ldw	r3,0(r7)
   85528:	39c00104 	addi	r7,r7,4
   8552c:	d8c14a15 	stw	r3,1320(sp)
   85530:	1800d10e 	bge	r3,zero,85878 <___vfprintf_internal_r+0x12c4>
   85534:	00c7c83a 	sub	r3,zero,r3
   85538:	d8c14a15 	stw	r3,1320(sp)
   8553c:	d9014c17 	ldw	r4,1328(sp)
   85540:	b8c00007 	ldb	r3,0(r23)
   85544:	21000114 	ori	r4,r4,4
   85548:	d9014c15 	stw	r4,1328(sp)
   8554c:	003c9806 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85550:	d9814c17 	ldw	r6,1328(sp)
   85554:	3080080c 	andi	r2,r6,32
   85558:	1001f026 	beq	r2,zero,85d1c <___vfprintf_internal_r+0x1768>
   8555c:	d9014b17 	ldw	r4,1324(sp)
   85560:	38800017 	ldw	r2,0(r7)
   85564:	39c00104 	addi	r7,r7,4
   85568:	d9c14015 	stw	r7,1280(sp)
   8556c:	2007d7fa 	srai	r3,r4,31
   85570:	d9c14017 	ldw	r7,1280(sp)
   85574:	11000015 	stw	r4,0(r2)
   85578:	10c00115 	stw	r3,4(r2)
   8557c:	003c6906 	br	84724 <___vfprintf_internal_r+0x170>
   85580:	b8c00007 	ldb	r3,0(r23)
   85584:	00801b04 	movi	r2,108
   85588:	18824f26 	beq	r3,r2,85ec8 <___vfprintf_internal_r+0x1914>
   8558c:	d9414c17 	ldw	r5,1328(sp)
   85590:	29400414 	ori	r5,r5,16
   85594:	d9414c15 	stw	r5,1328(sp)
   85598:	003c8506 	br	847b0 <___vfprintf_internal_r+0x1fc>
   8559c:	d9814c17 	ldw	r6,1328(sp)
   855a0:	b8c00007 	ldb	r3,0(r23)
   855a4:	31800814 	ori	r6,r6,32
   855a8:	d9814c15 	stw	r6,1328(sp)
   855ac:	003c8006 	br	847b0 <___vfprintf_internal_r+0x1fc>
   855b0:	d8814c17 	ldw	r2,1328(sp)
   855b4:	3c000017 	ldw	r16,0(r7)
   855b8:	00c01e04 	movi	r3,120
   855bc:	10800094 	ori	r2,r2,2
   855c0:	d8814c15 	stw	r2,1328(sp)
   855c4:	39c00104 	addi	r7,r7,4
   855c8:	01400274 	movhi	r5,9
   855cc:	297d0d04 	addi	r5,r5,-3020
   855d0:	00800c04 	movi	r2,48
   855d4:	0023883a 	mov	r17,zero
   855d8:	01000084 	movi	r4,2
   855dc:	d9c14015 	stw	r7,1280(sp)
   855e0:	d8c14d15 	stw	r3,1332(sp)
   855e4:	d9414415 	stw	r5,1296(sp)
   855e8:	d8800445 	stb	r2,17(sp)
   855ec:	d8c00485 	stb	r3,18(sp)
   855f0:	d8000405 	stb	zero,16(sp)
   855f4:	003e7d06 	br	84fec <___vfprintf_internal_r+0xa38>
   855f8:	d8814c17 	ldw	r2,1328(sp)
   855fc:	b8c00007 	ldb	r3,0(r23)
   85600:	10801014 	ori	r2,r2,64
   85604:	d8814c15 	stw	r2,1328(sp)
   85608:	003c6906 	br	847b0 <___vfprintf_internal_r+0x1fc>
   8560c:	d9414c17 	ldw	r5,1328(sp)
   85610:	2880020c 	andi	r2,r5,8
   85614:	1001df26 	beq	r2,zero,85d94 <___vfprintf_internal_r+0x17e0>
   85618:	39800017 	ldw	r6,0(r7)
   8561c:	38800204 	addi	r2,r7,8
   85620:	d8814015 	stw	r2,1280(sp)
   85624:	d9814215 	stw	r6,1288(sp)
   85628:	39c00117 	ldw	r7,4(r7)
   8562c:	d9c14315 	stw	r7,1292(sp)
   85630:	d9014217 	ldw	r4,1288(sp)
   85634:	d9414317 	ldw	r5,1292(sp)
   85638:	008af540 	call	8af54 <__isinfd>
   8563c:	10021726 	beq	r2,zero,85e9c <___vfprintf_internal_r+0x18e8>
   85640:	d9014217 	ldw	r4,1288(sp)
   85644:	d9414317 	ldw	r5,1292(sp)
   85648:	000d883a 	mov	r6,zero
   8564c:	000f883a 	mov	r7,zero
   85650:	008c5b00 	call	8c5b0 <__ltdf2>
   85654:	1002ca16 	blt	r2,zero,86180 <___vfprintf_internal_r+0x1bcc>
   85658:	d9414d17 	ldw	r5,1332(sp)
   8565c:	008011c4 	movi	r2,71
   85660:	11420a16 	blt	r2,r5,85e8c <___vfprintf_internal_r+0x18d8>
   85664:	01800274 	movhi	r6,9
   85668:	31bd1204 	addi	r6,r6,-3000
   8566c:	d9814115 	stw	r6,1284(sp)
   85670:	d9014c17 	ldw	r4,1328(sp)
   85674:	00c000c4 	movi	r3,3
   85678:	00bfdfc4 	movi	r2,-129
   8567c:	2088703a 	and	r4,r4,r2
   85680:	180f883a 	mov	r7,r3
   85684:	d8c14515 	stw	r3,1300(sp)
   85688:	d9014c15 	stw	r4,1328(sp)
   8568c:	d8014615 	stw	zero,1304(sp)
   85690:	003e6a06 	br	8503c <___vfprintf_internal_r+0xa88>
   85694:	38800017 	ldw	r2,0(r7)
   85698:	00c00044 	movi	r3,1
   8569c:	39c00104 	addi	r7,r7,4
   856a0:	d9c14015 	stw	r7,1280(sp)
   856a4:	d9000f04 	addi	r4,sp,60
   856a8:	180f883a 	mov	r7,r3
   856ac:	d8c14515 	stw	r3,1300(sp)
   856b0:	d9014115 	stw	r4,1284(sp)
   856b4:	d8800f05 	stb	r2,60(sp)
   856b8:	d8000405 	stb	zero,16(sp)
   856bc:	003cac06 	br	84970 <___vfprintf_internal_r+0x3bc>
   856c0:	01400274 	movhi	r5,9
   856c4:	297d1804 	addi	r5,r5,-2976
   856c8:	d9414415 	stw	r5,1296(sp)
   856cc:	d9814c17 	ldw	r6,1328(sp)
   856d0:	3080080c 	andi	r2,r6,32
   856d4:	1000f926 	beq	r2,zero,85abc <___vfprintf_internal_r+0x1508>
   856d8:	3c000017 	ldw	r16,0(r7)
   856dc:	3c400117 	ldw	r17,4(r7)
   856e0:	38800204 	addi	r2,r7,8
   856e4:	d8814015 	stw	r2,1280(sp)
   856e8:	d9414c17 	ldw	r5,1328(sp)
   856ec:	2880004c 	andi	r2,r5,1
   856f0:	1005003a 	cmpeq	r2,r2,zero
   856f4:	1000b31e 	bne	r2,zero,859c4 <___vfprintf_internal_r+0x1410>
   856f8:	8444b03a 	or	r2,r16,r17
   856fc:	1000b126 	beq	r2,zero,859c4 <___vfprintf_internal_r+0x1410>
   85700:	d9814d17 	ldw	r6,1332(sp)
   85704:	29400094 	ori	r5,r5,2
   85708:	00800c04 	movi	r2,48
   8570c:	01000084 	movi	r4,2
   85710:	d9414c15 	stw	r5,1328(sp)
   85714:	d8800445 	stb	r2,17(sp)
   85718:	d9800485 	stb	r6,18(sp)
   8571c:	d8000405 	stb	zero,16(sp)
   85720:	003e3206 	br	84fec <___vfprintf_internal_r+0xa38>
   85724:	01800274 	movhi	r6,9
   85728:	31bd0d04 	addi	r6,r6,-3020
   8572c:	d9814415 	stw	r6,1296(sp)
   85730:	003fe606 	br	856cc <___vfprintf_internal_r+0x1118>
   85734:	00800ac4 	movi	r2,43
   85738:	d8800405 	stb	r2,16(sp)
   8573c:	b8c00007 	ldb	r3,0(r23)
   85740:	003c1b06 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85744:	d8814c17 	ldw	r2,1328(sp)
   85748:	b8c00007 	ldb	r3,0(r23)
   8574c:	10800054 	ori	r2,r2,1
   85750:	d8814c15 	stw	r2,1328(sp)
   85754:	003c1606 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85758:	d8800407 	ldb	r2,16(sp)
   8575c:	1000461e 	bne	r2,zero,85878 <___vfprintf_internal_r+0x12c4>
   85760:	00800804 	movi	r2,32
   85764:	d8800405 	stb	r2,16(sp)
   85768:	b8c00007 	ldb	r3,0(r23)
   8576c:	003c1006 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85770:	d9814c17 	ldw	r6,1328(sp)
   85774:	b8c00007 	ldb	r3,0(r23)
   85778:	31800214 	ori	r6,r6,8
   8577c:	d9814c15 	stw	r6,1328(sp)
   85780:	003c0b06 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85784:	0007883a 	mov	r3,zero
   85788:	01000244 	movi	r4,9
   8578c:	188002a4 	muli	r2,r3,10
   85790:	b8c00007 	ldb	r3,0(r23)
   85794:	d9814d17 	ldw	r6,1332(sp)
   85798:	bdc00044 	addi	r23,r23,1
   8579c:	d8c14d15 	stw	r3,1332(sp)
   857a0:	d9414d17 	ldw	r5,1332(sp)
   857a4:	3085883a 	add	r2,r6,r2
   857a8:	10fff404 	addi	r3,r2,-48
   857ac:	28bff404 	addi	r2,r5,-48
   857b0:	20bff62e 	bgeu	r4,r2,8578c <___vfprintf_internal_r+0x11d8>
   857b4:	d8c14a15 	stw	r3,1320(sp)
   857b8:	003bff06 	br	847b8 <___vfprintf_internal_r+0x204>
   857bc:	d9414c17 	ldw	r5,1328(sp)
   857c0:	b8c00007 	ldb	r3,0(r23)
   857c4:	29402014 	ori	r5,r5,128
   857c8:	d9414c15 	stw	r5,1328(sp)
   857cc:	003bf806 	br	847b0 <___vfprintf_internal_r+0x1fc>
   857d0:	b8c00007 	ldb	r3,0(r23)
   857d4:	00800a84 	movi	r2,42
   857d8:	bdc00044 	addi	r23,r23,1
   857dc:	18831526 	beq	r3,r2,86434 <___vfprintf_internal_r+0x1e80>
   857e0:	d8c14d15 	stw	r3,1332(sp)
   857e4:	18bff404 	addi	r2,r3,-48
   857e8:	00c00244 	movi	r3,9
   857ec:	18827836 	bltu	r3,r2,861d0 <___vfprintf_internal_r+0x1c1c>
   857f0:	000d883a 	mov	r6,zero
   857f4:	308002a4 	muli	r2,r6,10
   857f8:	b9800007 	ldb	r6,0(r23)
   857fc:	d9414d17 	ldw	r5,1332(sp)
   85800:	bdc00044 	addi	r23,r23,1
   85804:	d9814d15 	stw	r6,1332(sp)
   85808:	d9014d17 	ldw	r4,1332(sp)
   8580c:	1145883a 	add	r2,r2,r5
   85810:	11bff404 	addi	r6,r2,-48
   85814:	20bff404 	addi	r2,r4,-48
   85818:	18bff62e 	bgeu	r3,r2,857f4 <___vfprintf_internal_r+0x1240>
   8581c:	3027883a 	mov	r19,r6
   85820:	303be50e 	bge	r6,zero,847b8 <___vfprintf_internal_r+0x204>
   85824:	04ffffc4 	movi	r19,-1
   85828:	003be306 	br	847b8 <___vfprintf_internal_r+0x204>
   8582c:	d8000405 	stb	zero,16(sp)
   85830:	39800017 	ldw	r6,0(r7)
   85834:	39c00104 	addi	r7,r7,4
   85838:	d9c14015 	stw	r7,1280(sp)
   8583c:	d9814115 	stw	r6,1284(sp)
   85840:	3001c926 	beq	r6,zero,85f68 <___vfprintf_internal_r+0x19b4>
   85844:	98000e16 	blt	r19,zero,85880 <___vfprintf_internal_r+0x12cc>
   85848:	d9014117 	ldw	r4,1284(sp)
   8584c:	000b883a 	mov	r5,zero
   85850:	980d883a 	mov	r6,r19
   85854:	00896700 	call	89670 <memchr>
   85858:	10025926 	beq	r2,zero,861c0 <___vfprintf_internal_r+0x1c0c>
   8585c:	d8c14117 	ldw	r3,1284(sp)
   85860:	10cfc83a 	sub	r7,r2,r3
   85864:	99c19e16 	blt	r19,r7,85ee0 <___vfprintf_internal_r+0x192c>
   85868:	d9c14515 	stw	r7,1300(sp)
   8586c:	38000916 	blt	r7,zero,85894 <___vfprintf_internal_r+0x12e0>
   85870:	d8014615 	stw	zero,1304(sp)
   85874:	003df106 	br	8503c <___vfprintf_internal_r+0xa88>
   85878:	b8c00007 	ldb	r3,0(r23)
   8587c:	003bcc06 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85880:	d9014117 	ldw	r4,1284(sp)
   85884:	008b23c0 	call	8b23c <strlen>
   85888:	d8814515 	stw	r2,1300(sp)
   8588c:	100f883a 	mov	r7,r2
   85890:	103ff70e 	bge	r2,zero,85870 <___vfprintf_internal_r+0x12bc>
   85894:	d8014515 	stw	zero,1300(sp)
   85898:	d8014615 	stw	zero,1304(sp)
   8589c:	003de706 	br	8503c <___vfprintf_internal_r+0xa88>
   858a0:	20c03fcc 	andi	r3,r4,255
   858a4:	00800044 	movi	r2,1
   858a8:	18802d26 	beq	r3,r2,85960 <___vfprintf_internal_r+0x13ac>
   858ac:	18800e36 	bltu	r3,r2,858e8 <___vfprintf_internal_r+0x1334>
   858b0:	00800084 	movi	r2,2
   858b4:	1880fa26 	beq	r3,r2,85ca0 <___vfprintf_internal_r+0x16ec>
   858b8:	01000274 	movhi	r4,9
   858bc:	213d1d04 	addi	r4,r4,-2956
   858c0:	008b23c0 	call	8b23c <strlen>
   858c4:	100f883a 	mov	r7,r2
   858c8:	dcc14515 	stw	r19,1300(sp)
   858cc:	9880010e 	bge	r19,r2,858d4 <___vfprintf_internal_r+0x1320>
   858d0:	d8814515 	stw	r2,1300(sp)
   858d4:	00800274 	movhi	r2,9
   858d8:	10bd1d04 	addi	r2,r2,-2956
   858dc:	dcc14615 	stw	r19,1304(sp)
   858e0:	d8814115 	stw	r2,1284(sp)
   858e4:	003dd506 	br	8503c <___vfprintf_internal_r+0xa88>
   858e8:	d9401904 	addi	r5,sp,100
   858ec:	dd000f04 	addi	r20,sp,60
   858f0:	d9414115 	stw	r5,1284(sp)
   858f4:	880a977a 	slli	r5,r17,29
   858f8:	d9814117 	ldw	r6,1284(sp)
   858fc:	8004d0fa 	srli	r2,r16,3
   85900:	8806d0fa 	srli	r3,r17,3
   85904:	810001cc 	andi	r4,r16,7
   85908:	2884b03a 	or	r2,r5,r2
   8590c:	31bfffc4 	addi	r6,r6,-1
   85910:	21000c04 	addi	r4,r4,48
   85914:	d9814115 	stw	r6,1284(sp)
   85918:	10cab03a 	or	r5,r2,r3
   8591c:	31000005 	stb	r4,0(r6)
   85920:	1021883a 	mov	r16,r2
   85924:	1823883a 	mov	r17,r3
   85928:	283ff21e 	bne	r5,zero,858f4 <___vfprintf_internal_r+0x1340>
   8592c:	d8c14c17 	ldw	r3,1328(sp)
   85930:	1880004c 	andi	r2,r3,1
   85934:	1005003a 	cmpeq	r2,r2,zero
   85938:	103db91e 	bne	r2,zero,85020 <___vfprintf_internal_r+0xa6c>
   8593c:	20803fcc 	andi	r2,r4,255
   85940:	1080201c 	xori	r2,r2,128
   85944:	10bfe004 	addi	r2,r2,-128
   85948:	00c00c04 	movi	r3,48
   8594c:	10fdb426 	beq	r2,r3,85020 <___vfprintf_internal_r+0xa6c>
   85950:	31bfffc4 	addi	r6,r6,-1
   85954:	d9814115 	stw	r6,1284(sp)
   85958:	30c00005 	stb	r3,0(r6)
   8595c:	003db006 	br	85020 <___vfprintf_internal_r+0xa6c>
   85960:	88800068 	cmpgeui	r2,r17,1
   85964:	10002c1e 	bne	r2,zero,85a18 <___vfprintf_internal_r+0x1464>
   85968:	8800021e 	bne	r17,zero,85974 <___vfprintf_internal_r+0x13c0>
   8596c:	00800244 	movi	r2,9
   85970:	14002936 	bltu	r2,r16,85a18 <___vfprintf_internal_r+0x1464>
   85974:	d90018c4 	addi	r4,sp,99
   85978:	dd000f04 	addi	r20,sp,60
   8597c:	d9014115 	stw	r4,1284(sp)
   85980:	d9014117 	ldw	r4,1284(sp)
   85984:	80800c04 	addi	r2,r16,48
   85988:	20800005 	stb	r2,0(r4)
   8598c:	003da406 	br	85020 <___vfprintf_internal_r+0xa6c>
   85990:	dc400d17 	ldw	r17,52(sp)
   85994:	07000274 	movhi	fp,9
   85998:	e73d2484 	addi	fp,fp,-2926
   8599c:	9425883a 	add	r18,r18,r16
   859a0:	8c400044 	addi	r17,r17,1
   859a4:	008001c4 	movi	r2,7
   859a8:	1f000015 	stw	fp,0(r3)
   859ac:	1c000115 	stw	r16,4(r3)
   859b0:	dc800e15 	stw	r18,56(sp)
   859b4:	dc400d15 	stw	r17,52(sp)
   859b8:	147de216 	blt	r2,r17,85144 <___vfprintf_internal_r+0xb90>
   859bc:	18c00204 	addi	r3,r3,8
   859c0:	003c7a06 	br	84bac <___vfprintf_internal_r+0x5f8>
   859c4:	01000084 	movi	r4,2
   859c8:	d8000405 	stb	zero,16(sp)
   859cc:	003d8706 	br	84fec <___vfprintf_internal_r+0xa38>
   859d0:	d9814c17 	ldw	r6,1328(sp)
   859d4:	30c4703a 	and	r2,r6,r3
   859d8:	1005003a 	cmpeq	r2,r2,zero
   859dc:	103cb926 	beq	r2,zero,84cc4 <___vfprintf_internal_r+0x710>
   859e0:	d9014117 	ldw	r4,1284(sp)
   859e4:	94800044 	addi	r18,r18,1
   859e8:	8c400044 	addi	r17,r17,1
   859ec:	008001c4 	movi	r2,7
   859f0:	a9000015 	stw	r4,0(r21)
   859f4:	a8c00115 	stw	r3,4(r21)
   859f8:	dc800e15 	stw	r18,56(sp)
   859fc:	dc400d15 	stw	r17,52(sp)
   85a00:	147e6616 	blt	r2,r17,8539c <___vfprintf_internal_r+0xde8>
   85a04:	acc00204 	addi	r19,r21,8
   85a08:	003cd706 	br	84d68 <___vfprintf_internal_r+0x7b4>
   85a0c:	07000274 	movhi	fp,9
   85a10:	e73d2484 	addi	fp,fp,-2926
   85a14:	003c4f06 	br	84b54 <___vfprintf_internal_r+0x5a0>
   85a18:	dd000f04 	addi	r20,sp,60
   85a1c:	dc801904 	addi	r18,sp,100
   85a20:	8009883a 	mov	r4,r16
   85a24:	880b883a 	mov	r5,r17
   85a28:	01800284 	movi	r6,10
   85a2c:	000f883a 	mov	r7,zero
   85a30:	008bd200 	call	8bd20 <__umoddi3>
   85a34:	12000c04 	addi	r8,r2,48
   85a38:	94bfffc4 	addi	r18,r18,-1
   85a3c:	8009883a 	mov	r4,r16
   85a40:	880b883a 	mov	r5,r17
   85a44:	01800284 	movi	r6,10
   85a48:	000f883a 	mov	r7,zero
   85a4c:	92000005 	stb	r8,0(r18)
   85a50:	008b7440 	call	8b744 <__udivdi3>
   85a54:	1009883a 	mov	r4,r2
   85a58:	1021883a 	mov	r16,r2
   85a5c:	18800068 	cmpgeui	r2,r3,1
   85a60:	1823883a 	mov	r17,r3
   85a64:	103fee1e 	bne	r2,zero,85a20 <___vfprintf_internal_r+0x146c>
   85a68:	1800021e 	bne	r3,zero,85a74 <___vfprintf_internal_r+0x14c0>
   85a6c:	00800244 	movi	r2,9
   85a70:	113feb36 	bltu	r2,r4,85a20 <___vfprintf_internal_r+0x146c>
   85a74:	94bfffc4 	addi	r18,r18,-1
   85a78:	dc814115 	stw	r18,1284(sp)
   85a7c:	003fc006 	br	85980 <___vfprintf_internal_r+0x13cc>
   85a80:	d9014c17 	ldw	r4,1328(sp)
   85a84:	2080004c 	andi	r2,r4,1
   85a88:	10009a1e 	bne	r2,zero,85cf4 <___vfprintf_internal_r+0x1740>
   85a8c:	d9401904 	addi	r5,sp,100
   85a90:	dd000f04 	addi	r20,sp,60
   85a94:	d9414115 	stw	r5,1284(sp)
   85a98:	003d6106 	br	85020 <___vfprintf_internal_r+0xa6c>
   85a9c:	d9014f17 	ldw	r4,1340(sp)
   85aa0:	b00b883a 	mov	r5,r22
   85aa4:	d9800c04 	addi	r6,sp,48
   85aa8:	008455c0 	call	8455c <__sprint_r>
   85aac:	103c791e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85ab0:	dc800e17 	ldw	r18,56(sp)
   85ab4:	d8c01904 	addi	r3,sp,100
   85ab8:	003cff06 	br	84eb8 <___vfprintf_internal_r+0x904>
   85abc:	d8c14c17 	ldw	r3,1328(sp)
   85ac0:	1880040c 	andi	r2,r3,16
   85ac4:	1000711e 	bne	r2,zero,85c8c <___vfprintf_internal_r+0x16d8>
   85ac8:	d9014c17 	ldw	r4,1328(sp)
   85acc:	2080100c 	andi	r2,r4,64
   85ad0:	10006e26 	beq	r2,zero,85c8c <___vfprintf_internal_r+0x16d8>
   85ad4:	3c00000b 	ldhu	r16,0(r7)
   85ad8:	0023883a 	mov	r17,zero
   85adc:	39c00104 	addi	r7,r7,4
   85ae0:	d9c14015 	stw	r7,1280(sp)
   85ae4:	003f0006 	br	856e8 <___vfprintf_internal_r+0x1134>
   85ae8:	dc400d17 	ldw	r17,52(sp)
   85aec:	07000274 	movhi	fp,9
   85af0:	e73d2484 	addi	fp,fp,-2926
   85af4:	9425883a 	add	r18,r18,r16
   85af8:	8c400044 	addi	r17,r17,1
   85afc:	008001c4 	movi	r2,7
   85b00:	1f000015 	stw	fp,0(r3)
   85b04:	1c000115 	stw	r16,4(r3)
   85b08:	dc800e15 	stw	r18,56(sp)
   85b0c:	dc400d15 	stw	r17,52(sp)
   85b10:	147d7616 	blt	r2,r17,850ec <___vfprintf_internal_r+0xb38>
   85b14:	18c00204 	addi	r3,r3,8
   85b18:	003d7b06 	br	85108 <___vfprintf_internal_r+0xb54>
   85b1c:	dc800e17 	ldw	r18,56(sp)
   85b20:	dc400d17 	ldw	r17,52(sp)
   85b24:	07000274 	movhi	fp,9
   85b28:	e73d2884 	addi	fp,fp,-2910
   85b2c:	003bc006 	br	84a30 <___vfprintf_internal_r+0x47c>
   85b30:	d9014f17 	ldw	r4,1340(sp)
   85b34:	b00b883a 	mov	r5,r22
   85b38:	d9800c04 	addi	r6,sp,48
   85b3c:	008455c0 	call	8455c <__sprint_r>
   85b40:	103c541e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85b44:	dc800e17 	ldw	r18,56(sp)
   85b48:	d8c01904 	addi	r3,sp,100
   85b4c:	003ce906 	br	84ef4 <___vfprintf_internal_r+0x940>
   85b50:	3c000017 	ldw	r16,0(r7)
   85b54:	0009883a 	mov	r4,zero
   85b58:	39c00104 	addi	r7,r7,4
   85b5c:	0023883a 	mov	r17,zero
   85b60:	d9c14015 	stw	r7,1280(sp)
   85b64:	d8000405 	stb	zero,16(sp)
   85b68:	003d2006 	br	84fec <___vfprintf_internal_r+0xa38>
   85b6c:	38800017 	ldw	r2,0(r7)
   85b70:	39c00104 	addi	r7,r7,4
   85b74:	d9c14015 	stw	r7,1280(sp)
   85b78:	1023d7fa 	srai	r17,r2,31
   85b7c:	1021883a 	mov	r16,r2
   85b80:	003d1806 	br	84fe4 <___vfprintf_internal_r+0xa30>
   85b84:	3c000017 	ldw	r16,0(r7)
   85b88:	01000044 	movi	r4,1
   85b8c:	39c00104 	addi	r7,r7,4
   85b90:	0023883a 	mov	r17,zero
   85b94:	d9c14015 	stw	r7,1280(sp)
   85b98:	d8000405 	stb	zero,16(sp)
   85b9c:	003d1306 	br	84fec <___vfprintf_internal_r+0xa38>
   85ba0:	00800274 	movhi	r2,9
   85ba4:	10bd2404 	addi	r2,r2,-2928
   85ba8:	94800044 	addi	r18,r18,1
   85bac:	8c400044 	addi	r17,r17,1
   85bb0:	a8800015 	stw	r2,0(r21)
   85bb4:	00c00044 	movi	r3,1
   85bb8:	008001c4 	movi	r2,7
   85bbc:	a8c00115 	stw	r3,4(r21)
   85bc0:	dc800e15 	stw	r18,56(sp)
   85bc4:	dc400d15 	stw	r17,52(sp)
   85bc8:	1440ca16 	blt	r2,r17,85ef4 <___vfprintf_internal_r+0x1940>
   85bcc:	a8c00204 	addi	r3,r21,8
   85bd0:	2000061e 	bne	r4,zero,85bec <___vfprintf_internal_r+0x1638>
   85bd4:	d9414717 	ldw	r5,1308(sp)
   85bd8:	2800041e 	bne	r5,zero,85bec <___vfprintf_internal_r+0x1638>
   85bdc:	d9814c17 	ldw	r6,1328(sp)
   85be0:	3080004c 	andi	r2,r6,1
   85be4:	1005003a 	cmpeq	r2,r2,zero
   85be8:	103bf01e 	bne	r2,zero,84bac <___vfprintf_internal_r+0x5f8>
   85bec:	00800044 	movi	r2,1
   85bf0:	dc400d17 	ldw	r17,52(sp)
   85bf4:	18800115 	stw	r2,4(r3)
   85bf8:	d8814917 	ldw	r2,1316(sp)
   85bfc:	94800044 	addi	r18,r18,1
   85c00:	8c400044 	addi	r17,r17,1
   85c04:	18800015 	stw	r2,0(r3)
   85c08:	008001c4 	movi	r2,7
   85c0c:	dc800e15 	stw	r18,56(sp)
   85c10:	dc400d15 	stw	r17,52(sp)
   85c14:	1440ca16 	blt	r2,r17,85f40 <___vfprintf_internal_r+0x198c>
   85c18:	18c00204 	addi	r3,r3,8
   85c1c:	0121c83a 	sub	r16,zero,r4
   85c20:	0400500e 	bge	zero,r16,85d64 <___vfprintf_internal_r+0x17b0>
   85c24:	00800404 	movi	r2,16
   85c28:	1400800e 	bge	r2,r16,85e2c <___vfprintf_internal_r+0x1878>
   85c2c:	1027883a 	mov	r19,r2
   85c30:	07000274 	movhi	fp,9
   85c34:	e73d2484 	addi	fp,fp,-2926
   85c38:	050001c4 	movi	r20,7
   85c3c:	00000306 	br	85c4c <___vfprintf_internal_r+0x1698>
   85c40:	18c00204 	addi	r3,r3,8
   85c44:	843ffc04 	addi	r16,r16,-16
   85c48:	9c007a0e 	bge	r19,r16,85e34 <___vfprintf_internal_r+0x1880>
   85c4c:	94800404 	addi	r18,r18,16
   85c50:	8c400044 	addi	r17,r17,1
   85c54:	1f000015 	stw	fp,0(r3)
   85c58:	1cc00115 	stw	r19,4(r3)
   85c5c:	dc800e15 	stw	r18,56(sp)
   85c60:	dc400d15 	stw	r17,52(sp)
   85c64:	a47ff60e 	bge	r20,r17,85c40 <___vfprintf_internal_r+0x168c>
   85c68:	d9014f17 	ldw	r4,1340(sp)
   85c6c:	b00b883a 	mov	r5,r22
   85c70:	d9800c04 	addi	r6,sp,48
   85c74:	008455c0 	call	8455c <__sprint_r>
   85c78:	103c061e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85c7c:	dc800e17 	ldw	r18,56(sp)
   85c80:	dc400d17 	ldw	r17,52(sp)
   85c84:	d8c01904 	addi	r3,sp,100
   85c88:	003fee06 	br	85c44 <___vfprintf_internal_r+0x1690>
   85c8c:	3c000017 	ldw	r16,0(r7)
   85c90:	0023883a 	mov	r17,zero
   85c94:	39c00104 	addi	r7,r7,4
   85c98:	d9c14015 	stw	r7,1280(sp)
   85c9c:	003e9206 	br	856e8 <___vfprintf_internal_r+0x1134>
   85ca0:	d9401904 	addi	r5,sp,100
   85ca4:	dd000f04 	addi	r20,sp,60
   85ca8:	d9414115 	stw	r5,1284(sp)
   85cac:	d9814417 	ldw	r6,1296(sp)
   85cb0:	880a973a 	slli	r5,r17,28
   85cb4:	8004d13a 	srli	r2,r16,4
   85cb8:	810003cc 	andi	r4,r16,15
   85cbc:	3109883a 	add	r4,r6,r4
   85cc0:	2884b03a 	or	r2,r5,r2
   85cc4:	21400003 	ldbu	r5,0(r4)
   85cc8:	d9014117 	ldw	r4,1284(sp)
   85ccc:	8806d13a 	srli	r3,r17,4
   85cd0:	1021883a 	mov	r16,r2
   85cd4:	213fffc4 	addi	r4,r4,-1
   85cd8:	d9014115 	stw	r4,1284(sp)
   85cdc:	d9814117 	ldw	r6,1284(sp)
   85ce0:	10c8b03a 	or	r4,r2,r3
   85ce4:	1823883a 	mov	r17,r3
   85ce8:	31400005 	stb	r5,0(r6)
   85cec:	203fef1e 	bne	r4,zero,85cac <___vfprintf_internal_r+0x16f8>
   85cf0:	003ccb06 	br	85020 <___vfprintf_internal_r+0xa6c>
   85cf4:	00800c04 	movi	r2,48
   85cf8:	d98018c4 	addi	r6,sp,99
   85cfc:	dd000f04 	addi	r20,sp,60
   85d00:	d88018c5 	stb	r2,99(sp)
   85d04:	d9814115 	stw	r6,1284(sp)
   85d08:	003cc506 	br	85020 <___vfprintf_internal_r+0xa6c>
   85d0c:	dc400d17 	ldw	r17,52(sp)
   85d10:	07000274 	movhi	fp,9
   85d14:	e73d2884 	addi	fp,fp,-2910
   85d18:	003bc706 	br	84c38 <___vfprintf_internal_r+0x684>
   85d1c:	d9414c17 	ldw	r5,1328(sp)
   85d20:	2880040c 	andi	r2,r5,16
   85d24:	10007c26 	beq	r2,zero,85f18 <___vfprintf_internal_r+0x1964>
   85d28:	38800017 	ldw	r2,0(r7)
   85d2c:	39c00104 	addi	r7,r7,4
   85d30:	d9c14015 	stw	r7,1280(sp)
   85d34:	d9814b17 	ldw	r6,1324(sp)
   85d38:	d9c14017 	ldw	r7,1280(sp)
   85d3c:	11800015 	stw	r6,0(r2)
   85d40:	003a7806 	br	84724 <___vfprintf_internal_r+0x170>
   85d44:	d9014f17 	ldw	r4,1340(sp)
   85d48:	b00b883a 	mov	r5,r22
   85d4c:	d9800c04 	addi	r6,sp,48
   85d50:	008455c0 	call	8455c <__sprint_r>
   85d54:	103bcf1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85d58:	dc800e17 	ldw	r18,56(sp)
   85d5c:	dc400d17 	ldw	r17,52(sp)
   85d60:	d8c01904 	addi	r3,sp,100
   85d64:	d9014717 	ldw	r4,1308(sp)
   85d68:	d9414117 	ldw	r5,1284(sp)
   85d6c:	8c400044 	addi	r17,r17,1
   85d70:	9125883a 	add	r18,r18,r4
   85d74:	008001c4 	movi	r2,7
   85d78:	19400015 	stw	r5,0(r3)
   85d7c:	19000115 	stw	r4,4(r3)
   85d80:	dc800e15 	stw	r18,56(sp)
   85d84:	dc400d15 	stw	r17,52(sp)
   85d88:	147cee16 	blt	r2,r17,85144 <___vfprintf_internal_r+0xb90>
   85d8c:	18c00204 	addi	r3,r3,8
   85d90:	003b8606 	br	84bac <___vfprintf_internal_r+0x5f8>
   85d94:	38c00017 	ldw	r3,0(r7)
   85d98:	39000204 	addi	r4,r7,8
   85d9c:	d9014015 	stw	r4,1280(sp)
   85da0:	d8c14215 	stw	r3,1288(sp)
   85da4:	39c00117 	ldw	r7,4(r7)
   85da8:	d9c14315 	stw	r7,1292(sp)
   85dac:	003e2006 	br	85630 <___vfprintf_internal_r+0x107c>
   85db0:	0005883a 	mov	r2,zero
   85db4:	1409c83a 	sub	r4,r2,r16
   85db8:	1105803a 	cmpltu	r2,r2,r4
   85dbc:	044bc83a 	sub	r5,zero,r17
   85dc0:	2885c83a 	sub	r2,r5,r2
   85dc4:	2021883a 	mov	r16,r4
   85dc8:	1023883a 	mov	r17,r2
   85dcc:	01000044 	movi	r4,1
   85dd0:	00800b44 	movi	r2,45
   85dd4:	d8800405 	stb	r2,16(sp)
   85dd8:	003c8406 	br	84fec <___vfprintf_internal_r+0xa38>
   85ddc:	d9014f17 	ldw	r4,1340(sp)
   85de0:	b00b883a 	mov	r5,r22
   85de4:	d9800c04 	addi	r6,sp,48
   85de8:	008455c0 	call	8455c <__sprint_r>
   85dec:	103ba91e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85df0:	dc800e17 	ldw	r18,56(sp)
   85df4:	dc400d17 	ldw	r17,52(sp)
   85df8:	d9000517 	ldw	r4,20(sp)
   85dfc:	d9401904 	addi	r5,sp,100
   85e00:	003da706 	br	854a0 <___vfprintf_internal_r+0xeec>
   85e04:	d9014f17 	ldw	r4,1340(sp)
   85e08:	b00b883a 	mov	r5,r22
   85e0c:	d9800c04 	addi	r6,sp,48
   85e10:	008455c0 	call	8455c <__sprint_r>
   85e14:	103b9f1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85e18:	dc800e17 	ldw	r18,56(sp)
   85e1c:	dc400d17 	ldw	r17,52(sp)
   85e20:	d9000517 	ldw	r4,20(sp)
   85e24:	d8c01904 	addi	r3,sp,100
   85e28:	003d9106 	br	85470 <___vfprintf_internal_r+0xebc>
   85e2c:	07000274 	movhi	fp,9
   85e30:	e73d2484 	addi	fp,fp,-2926
   85e34:	9425883a 	add	r18,r18,r16
   85e38:	8c400044 	addi	r17,r17,1
   85e3c:	008001c4 	movi	r2,7
   85e40:	1f000015 	stw	fp,0(r3)
   85e44:	1c000115 	stw	r16,4(r3)
   85e48:	dc800e15 	stw	r18,56(sp)
   85e4c:	dc400d15 	stw	r17,52(sp)
   85e50:	147fbc16 	blt	r2,r17,85d44 <___vfprintf_internal_r+0x1790>
   85e54:	18c00204 	addi	r3,r3,8
   85e58:	003fc206 	br	85d64 <___vfprintf_internal_r+0x17b0>
   85e5c:	d9014f17 	ldw	r4,1340(sp)
   85e60:	b00b883a 	mov	r5,r22
   85e64:	d9800c04 	addi	r6,sp,48
   85e68:	008455c0 	call	8455c <__sprint_r>
   85e6c:	103b891e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85e70:	dc800e17 	ldw	r18,56(sp)
   85e74:	d9000517 	ldw	r4,20(sp)
   85e78:	d8c01904 	addi	r3,sp,100
   85e7c:	003d0206 	br	85288 <___vfprintf_internal_r+0xcd4>
   85e80:	07000274 	movhi	fp,9
   85e84:	e73d2484 	addi	fp,fp,-2926
   85e88:	003be406 	br	84e1c <___vfprintf_internal_r+0x868>
   85e8c:	00800274 	movhi	r2,9
   85e90:	10bd1304 	addi	r2,r2,-2996
   85e94:	d8814115 	stw	r2,1284(sp)
   85e98:	003df506 	br	85670 <___vfprintf_internal_r+0x10bc>
   85e9c:	d9014217 	ldw	r4,1288(sp)
   85ea0:	d9414317 	ldw	r5,1292(sp)
   85ea4:	008af940 	call	8af94 <__isnand>
   85ea8:	10003926 	beq	r2,zero,85f90 <___vfprintf_internal_r+0x19dc>
   85eac:	d9414d17 	ldw	r5,1332(sp)
   85eb0:	008011c4 	movi	r2,71
   85eb4:	1140ce16 	blt	r2,r5,861f0 <___vfprintf_internal_r+0x1c3c>
   85eb8:	01800274 	movhi	r6,9
   85ebc:	31bd1404 	addi	r6,r6,-2992
   85ec0:	d9814115 	stw	r6,1284(sp)
   85ec4:	003dea06 	br	85670 <___vfprintf_internal_r+0x10bc>
   85ec8:	d9014c17 	ldw	r4,1328(sp)
   85ecc:	bdc00044 	addi	r23,r23,1
   85ed0:	b8c00007 	ldb	r3,0(r23)
   85ed4:	21000814 	ori	r4,r4,32
   85ed8:	d9014c15 	stw	r4,1328(sp)
   85edc:	003a3406 	br	847b0 <___vfprintf_internal_r+0x1fc>
   85ee0:	dcc14515 	stw	r19,1300(sp)
   85ee4:	98011016 	blt	r19,zero,86328 <___vfprintf_internal_r+0x1d74>
   85ee8:	980f883a 	mov	r7,r19
   85eec:	d8014615 	stw	zero,1304(sp)
   85ef0:	003c5206 	br	8503c <___vfprintf_internal_r+0xa88>
   85ef4:	d9014f17 	ldw	r4,1340(sp)
   85ef8:	b00b883a 	mov	r5,r22
   85efc:	d9800c04 	addi	r6,sp,48
   85f00:	008455c0 	call	8455c <__sprint_r>
   85f04:	103b631e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85f08:	dc800e17 	ldw	r18,56(sp)
   85f0c:	d9000517 	ldw	r4,20(sp)
   85f10:	d8c01904 	addi	r3,sp,100
   85f14:	003f2e06 	br	85bd0 <___vfprintf_internal_r+0x161c>
   85f18:	d8c14c17 	ldw	r3,1328(sp)
   85f1c:	1880100c 	andi	r2,r3,64
   85f20:	1000a026 	beq	r2,zero,861a4 <___vfprintf_internal_r+0x1bf0>
   85f24:	38800017 	ldw	r2,0(r7)
   85f28:	39c00104 	addi	r7,r7,4
   85f2c:	d9c14015 	stw	r7,1280(sp)
   85f30:	d9014b17 	ldw	r4,1324(sp)
   85f34:	d9c14017 	ldw	r7,1280(sp)
   85f38:	1100000d 	sth	r4,0(r2)
   85f3c:	0039f906 	br	84724 <___vfprintf_internal_r+0x170>
   85f40:	d9014f17 	ldw	r4,1340(sp)
   85f44:	b00b883a 	mov	r5,r22
   85f48:	d9800c04 	addi	r6,sp,48
   85f4c:	008455c0 	call	8455c <__sprint_r>
   85f50:	103b501e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   85f54:	dc800e17 	ldw	r18,56(sp)
   85f58:	dc400d17 	ldw	r17,52(sp)
   85f5c:	d9000517 	ldw	r4,20(sp)
   85f60:	d8c01904 	addi	r3,sp,100
   85f64:	003f2d06 	br	85c1c <___vfprintf_internal_r+0x1668>
   85f68:	00800184 	movi	r2,6
   85f6c:	14c09a36 	bltu	r2,r19,861d8 <___vfprintf_internal_r+0x1c24>
   85f70:	dcc14515 	stw	r19,1300(sp)
   85f74:	9800010e 	bge	r19,zero,85f7c <___vfprintf_internal_r+0x19c8>
   85f78:	d8014515 	stw	zero,1300(sp)
   85f7c:	00800274 	movhi	r2,9
   85f80:	10bd1604 	addi	r2,r2,-2984
   85f84:	980f883a 	mov	r7,r19
   85f88:	d8814115 	stw	r2,1284(sp)
   85f8c:	003a7806 	br	84970 <___vfprintf_internal_r+0x3bc>
   85f90:	00bfffc4 	movi	r2,-1
   85f94:	9880e226 	beq	r19,r2,86320 <___vfprintf_internal_r+0x1d6c>
   85f98:	d9414d17 	ldw	r5,1332(sp)
   85f9c:	008019c4 	movi	r2,103
   85fa0:	2880dc26 	beq	r5,r2,86314 <___vfprintf_internal_r+0x1d60>
   85fa4:	008011c4 	movi	r2,71
   85fa8:	2880da26 	beq	r5,r2,86314 <___vfprintf_internal_r+0x1d60>
   85fac:	d9414c17 	ldw	r5,1328(sp)
   85fb0:	d9014317 	ldw	r4,1292(sp)
   85fb4:	d9814217 	ldw	r6,1288(sp)
   85fb8:	29404014 	ori	r5,r5,256
   85fbc:	d9414c15 	stw	r5,1328(sp)
   85fc0:	2000cc16 	blt	r4,zero,862f4 <___vfprintf_internal_r+0x1d40>
   85fc4:	3021883a 	mov	r16,r6
   85fc8:	2023883a 	mov	r17,r4
   85fcc:	0039883a 	mov	fp,zero
   85fd0:	d9414d17 	ldw	r5,1332(sp)
   85fd4:	00801984 	movi	r2,102
   85fd8:	2880b726 	beq	r5,r2,862b8 <___vfprintf_internal_r+0x1d04>
   85fdc:	00801184 	movi	r2,70
   85fe0:	2880b526 	beq	r5,r2,862b8 <___vfprintf_internal_r+0x1d04>
   85fe4:	00801944 	movi	r2,101
   85fe8:	2880c826 	beq	r5,r2,8630c <___vfprintf_internal_r+0x1d58>
   85fec:	00801144 	movi	r2,69
   85ff0:	2880c626 	beq	r5,r2,8630c <___vfprintf_internal_r+0x1d58>
   85ff4:	9829883a 	mov	r20,r19
   85ff8:	d9014f17 	ldw	r4,1340(sp)
   85ffc:	d8800504 	addi	r2,sp,20
   86000:	880d883a 	mov	r6,r17
   86004:	d8800115 	stw	r2,4(sp)
   86008:	d8c00604 	addi	r3,sp,24
   8600c:	d8800704 	addi	r2,sp,28
   86010:	800b883a 	mov	r5,r16
   86014:	01c00084 	movi	r7,2
   86018:	d8c00215 	stw	r3,8(sp)
   8601c:	d8800315 	stw	r2,12(sp)
   86020:	dd000015 	stw	r20,0(sp)
   86024:	00867d80 	call	867d8 <_dtoa_r>
   86028:	d9814d17 	ldw	r6,1332(sp)
   8602c:	d8814115 	stw	r2,1284(sp)
   86030:	008019c4 	movi	r2,103
   86034:	30809526 	beq	r6,r2,8628c <___vfprintf_internal_r+0x1cd8>
   86038:	d8c14d17 	ldw	r3,1332(sp)
   8603c:	008011c4 	movi	r2,71
   86040:	18809226 	beq	r3,r2,8628c <___vfprintf_internal_r+0x1cd8>
   86044:	d9414117 	ldw	r5,1284(sp)
   86048:	d9814d17 	ldw	r6,1332(sp)
   8604c:	00801984 	movi	r2,102
   86050:	2d25883a 	add	r18,r5,r20
   86054:	30808626 	beq	r6,r2,86270 <___vfprintf_internal_r+0x1cbc>
   86058:	00801184 	movi	r2,70
   8605c:	30808426 	beq	r6,r2,86270 <___vfprintf_internal_r+0x1cbc>
   86060:	000d883a 	mov	r6,zero
   86064:	000f883a 	mov	r7,zero
   86068:	880b883a 	mov	r5,r17
   8606c:	8009883a 	mov	r4,r16
   86070:	0083a040 	call	83a04 <__eqdf2>
   86074:	1000751e 	bne	r2,zero,8624c <___vfprintf_internal_r+0x1c98>
   86078:	9005883a 	mov	r2,r18
   8607c:	dc800715 	stw	r18,28(sp)
   86080:	d9014117 	ldw	r4,1284(sp)
   86084:	d9414d17 	ldw	r5,1332(sp)
   86088:	00c019c4 	movi	r3,103
   8608c:	1125c83a 	sub	r18,r2,r4
   86090:	28c06826 	beq	r5,r3,86234 <___vfprintf_internal_r+0x1c80>
   86094:	008011c4 	movi	r2,71
   86098:	28806626 	beq	r5,r2,86234 <___vfprintf_internal_r+0x1c80>
   8609c:	d9000517 	ldw	r4,20(sp)
   860a0:	d8c14d17 	ldw	r3,1332(sp)
   860a4:	00801944 	movi	r2,101
   860a8:	10c05516 	blt	r2,r3,86200 <___vfprintf_internal_r+0x1c4c>
   860ac:	213fffc4 	addi	r4,r4,-1
   860b0:	d9000515 	stw	r4,20(sp)
   860b4:	d8c00805 	stb	r3,32(sp)
   860b8:	2021883a 	mov	r16,r4
   860bc:	2000c116 	blt	r4,zero,863c4 <___vfprintf_internal_r+0x1e10>
   860c0:	00800ac4 	movi	r2,43
   860c4:	d8800845 	stb	r2,33(sp)
   860c8:	00800244 	movi	r2,9
   860cc:	1400af0e 	bge	r2,r16,8638c <___vfprintf_internal_r+0x1dd8>
   860d0:	1027883a 	mov	r19,r2
   860d4:	dc400b84 	addi	r17,sp,46
   860d8:	8009883a 	mov	r4,r16
   860dc:	01400284 	movi	r5,10
   860e0:	0083e480 	call	83e48 <__modsi3>
   860e4:	10800c04 	addi	r2,r2,48
   860e8:	8c7fffc4 	addi	r17,r17,-1
   860ec:	8009883a 	mov	r4,r16
   860f0:	01400284 	movi	r5,10
   860f4:	88800005 	stb	r2,0(r17)
   860f8:	0083de80 	call	83de8 <__divsi3>
   860fc:	1021883a 	mov	r16,r2
   86100:	98bff516 	blt	r19,r2,860d8 <___vfprintf_internal_r+0x1b24>
   86104:	10c00c04 	addi	r3,r2,48
   86108:	d88009c4 	addi	r2,sp,39
   8610c:	108001c4 	addi	r2,r2,7
   86110:	897fffc4 	addi	r5,r17,-1
   86114:	88ffffc5 	stb	r3,-1(r17)
   86118:	2880a72e 	bgeu	r5,r2,863b8 <___vfprintf_internal_r+0x1e04>
   8611c:	1009883a 	mov	r4,r2
   86120:	d9800804 	addi	r6,sp,32
   86124:	d8c00884 	addi	r3,sp,34
   86128:	28800003 	ldbu	r2,0(r5)
   8612c:	29400044 	addi	r5,r5,1
   86130:	18800005 	stb	r2,0(r3)
   86134:	18c00044 	addi	r3,r3,1
   86138:	293ffb36 	bltu	r5,r4,86128 <___vfprintf_internal_r+0x1b74>
   8613c:	1987c83a 	sub	r3,r3,r6
   86140:	00800044 	movi	r2,1
   86144:	d8c14815 	stw	r3,1312(sp)
   86148:	90cf883a 	add	r7,r18,r3
   8614c:	1480960e 	bge	r2,r18,863a8 <___vfprintf_internal_r+0x1df4>
   86150:	39c00044 	addi	r7,r7,1
   86154:	d9c14515 	stw	r7,1300(sp)
   86158:	38003416 	blt	r7,zero,8622c <___vfprintf_internal_r+0x1c78>
   8615c:	e0803fcc 	andi	r2,fp,255
   86160:	1080201c 	xori	r2,r2,128
   86164:	10bfe004 	addi	r2,r2,-128
   86168:	10004e26 	beq	r2,zero,862a4 <___vfprintf_internal_r+0x1cf0>
   8616c:	00800b44 	movi	r2,45
   86170:	dc814715 	stw	r18,1308(sp)
   86174:	d8014615 	stw	zero,1304(sp)
   86178:	d8800405 	stb	r2,16(sp)
   8617c:	003bb106 	br	85044 <___vfprintf_internal_r+0xa90>
   86180:	00800b44 	movi	r2,45
   86184:	d8800405 	stb	r2,16(sp)
   86188:	003d3306 	br	85658 <___vfprintf_internal_r+0x10a4>
   8618c:	d9014f17 	ldw	r4,1340(sp)
   86190:	b00b883a 	mov	r5,r22
   86194:	d9800c04 	addi	r6,sp,48
   86198:	008455c0 	call	8455c <__sprint_r>
   8619c:	103abd1e 	bne	r2,zero,84c94 <___vfprintf_internal_r+0x6e0>
   861a0:	003abb06 	br	84c90 <___vfprintf_internal_r+0x6dc>
   861a4:	38800017 	ldw	r2,0(r7)
   861a8:	39c00104 	addi	r7,r7,4
   861ac:	d9c14015 	stw	r7,1280(sp)
   861b0:	d9414b17 	ldw	r5,1324(sp)
   861b4:	d9c14017 	ldw	r7,1280(sp)
   861b8:	11400015 	stw	r5,0(r2)
   861bc:	00395906 	br	84724 <___vfprintf_internal_r+0x170>
   861c0:	980f883a 	mov	r7,r19
   861c4:	dcc14515 	stw	r19,1300(sp)
   861c8:	d8014615 	stw	zero,1304(sp)
   861cc:	003b9b06 	br	8503c <___vfprintf_internal_r+0xa88>
   861d0:	0027883a 	mov	r19,zero
   861d4:	00397806 	br	847b8 <___vfprintf_internal_r+0x204>
   861d8:	00c00274 	movhi	r3,9
   861dc:	18fd1604 	addi	r3,r3,-2984
   861e0:	100f883a 	mov	r7,r2
   861e4:	d8814515 	stw	r2,1300(sp)
   861e8:	d8c14115 	stw	r3,1284(sp)
   861ec:	0039e006 	br	84970 <___vfprintf_internal_r+0x3bc>
   861f0:	00800274 	movhi	r2,9
   861f4:	10bd1504 	addi	r2,r2,-2988
   861f8:	d8814115 	stw	r2,1284(sp)
   861fc:	003d1c06 	br	85670 <___vfprintf_internal_r+0x10bc>
   86200:	d9414d17 	ldw	r5,1332(sp)
   86204:	00801984 	movi	r2,102
   86208:	28804926 	beq	r5,r2,86330 <___vfprintf_internal_r+0x1d7c>
   8620c:	200f883a 	mov	r7,r4
   86210:	24805716 	blt	r4,r18,86370 <___vfprintf_internal_r+0x1dbc>
   86214:	d9414c17 	ldw	r5,1328(sp)
   86218:	2880004c 	andi	r2,r5,1
   8621c:	10000126 	beq	r2,zero,86224 <___vfprintf_internal_r+0x1c70>
   86220:	21c00044 	addi	r7,r4,1
   86224:	d9c14515 	stw	r7,1300(sp)
   86228:	383fcc0e 	bge	r7,zero,8615c <___vfprintf_internal_r+0x1ba8>
   8622c:	d8014515 	stw	zero,1300(sp)
   86230:	003fca06 	br	8615c <___vfprintf_internal_r+0x1ba8>
   86234:	d9000517 	ldw	r4,20(sp)
   86238:	00bfff04 	movi	r2,-4
   8623c:	1100480e 	bge	r2,r4,86360 <___vfprintf_internal_r+0x1dac>
   86240:	99004716 	blt	r19,r4,86360 <___vfprintf_internal_r+0x1dac>
   86244:	d8c14d15 	stw	r3,1332(sp)
   86248:	003ff006 	br	8620c <___vfprintf_internal_r+0x1c58>
   8624c:	d8800717 	ldw	r2,28(sp)
   86250:	14bf8b2e 	bgeu	r2,r18,86080 <___vfprintf_internal_r+0x1acc>
   86254:	9007883a 	mov	r3,r18
   86258:	01000c04 	movi	r4,48
   8625c:	11000005 	stb	r4,0(r2)
   86260:	10800044 	addi	r2,r2,1
   86264:	d8800715 	stw	r2,28(sp)
   86268:	18bffc1e 	bne	r3,r2,8625c <___vfprintf_internal_r+0x1ca8>
   8626c:	003f8406 	br	86080 <___vfprintf_internal_r+0x1acc>
   86270:	d8814117 	ldw	r2,1284(sp)
   86274:	10c00007 	ldb	r3,0(r2)
   86278:	00800c04 	movi	r2,48
   8627c:	18805b26 	beq	r3,r2,863ec <___vfprintf_internal_r+0x1e38>
   86280:	d9000517 	ldw	r4,20(sp)
   86284:	9125883a 	add	r18,r18,r4
   86288:	003f7506 	br	86060 <___vfprintf_internal_r+0x1aac>
   8628c:	d9014c17 	ldw	r4,1328(sp)
   86290:	2080004c 	andi	r2,r4,1
   86294:	1005003a 	cmpeq	r2,r2,zero
   86298:	103f6a26 	beq	r2,zero,86044 <___vfprintf_internal_r+0x1a90>
   8629c:	d8800717 	ldw	r2,28(sp)
   862a0:	003f7706 	br	86080 <___vfprintf_internal_r+0x1acc>
   862a4:	d9c14515 	stw	r7,1300(sp)
   862a8:	38004d16 	blt	r7,zero,863e0 <___vfprintf_internal_r+0x1e2c>
   862ac:	dc814715 	stw	r18,1308(sp)
   862b0:	d8014615 	stw	zero,1304(sp)
   862b4:	003b6106 	br	8503c <___vfprintf_internal_r+0xa88>
   862b8:	d9014f17 	ldw	r4,1340(sp)
   862bc:	d8800504 	addi	r2,sp,20
   862c0:	d8800115 	stw	r2,4(sp)
   862c4:	d8c00604 	addi	r3,sp,24
   862c8:	d8800704 	addi	r2,sp,28
   862cc:	800b883a 	mov	r5,r16
   862d0:	880d883a 	mov	r6,r17
   862d4:	01c000c4 	movi	r7,3
   862d8:	d8c00215 	stw	r3,8(sp)
   862dc:	d8800315 	stw	r2,12(sp)
   862e0:	dcc00015 	stw	r19,0(sp)
   862e4:	9829883a 	mov	r20,r19
   862e8:	00867d80 	call	867d8 <_dtoa_r>
   862ec:	d8814115 	stw	r2,1284(sp)
   862f0:	003f5106 	br	86038 <___vfprintf_internal_r+0x1a84>
   862f4:	d8c14217 	ldw	r3,1288(sp)
   862f8:	d9014317 	ldw	r4,1292(sp)
   862fc:	07000b44 	movi	fp,45
   86300:	1821883a 	mov	r16,r3
   86304:	2460003c 	xorhi	r17,r4,32768
   86308:	003f3106 	br	85fd0 <___vfprintf_internal_r+0x1a1c>
   8630c:	9d000044 	addi	r20,r19,1
   86310:	003f3906 	br	85ff8 <___vfprintf_internal_r+0x1a44>
   86314:	983f251e 	bne	r19,zero,85fac <___vfprintf_internal_r+0x19f8>
   86318:	04c00044 	movi	r19,1
   8631c:	003f2306 	br	85fac <___vfprintf_internal_r+0x19f8>
   86320:	04c00184 	movi	r19,6
   86324:	003f2106 	br	85fac <___vfprintf_internal_r+0x19f8>
   86328:	d8014515 	stw	zero,1300(sp)
   8632c:	003eee06 	br	85ee8 <___vfprintf_internal_r+0x1934>
   86330:	200f883a 	mov	r7,r4
   86334:	0100370e 	bge	zero,r4,86414 <___vfprintf_internal_r+0x1e60>
   86338:	9800031e 	bne	r19,zero,86348 <___vfprintf_internal_r+0x1d94>
   8633c:	d9814c17 	ldw	r6,1328(sp)
   86340:	3080004c 	andi	r2,r6,1
   86344:	103fb726 	beq	r2,zero,86224 <___vfprintf_internal_r+0x1c70>
   86348:	20800044 	addi	r2,r4,1
   8634c:	98a7883a 	add	r19,r19,r2
   86350:	dcc14515 	stw	r19,1300(sp)
   86354:	980f883a 	mov	r7,r19
   86358:	983f800e 	bge	r19,zero,8615c <___vfprintf_internal_r+0x1ba8>
   8635c:	003fb306 	br	8622c <___vfprintf_internal_r+0x1c78>
   86360:	d9814d17 	ldw	r6,1332(sp)
   86364:	31bfff84 	addi	r6,r6,-2
   86368:	d9814d15 	stw	r6,1332(sp)
   8636c:	003f4c06 	br	860a0 <___vfprintf_internal_r+0x1aec>
   86370:	0100180e 	bge	zero,r4,863d4 <___vfprintf_internal_r+0x1e20>
   86374:	00800044 	movi	r2,1
   86378:	1485883a 	add	r2,r2,r18
   8637c:	d8814515 	stw	r2,1300(sp)
   86380:	100f883a 	mov	r7,r2
   86384:	103f750e 	bge	r2,zero,8615c <___vfprintf_internal_r+0x1ba8>
   86388:	003fa806 	br	8622c <___vfprintf_internal_r+0x1c78>
   8638c:	80c00c04 	addi	r3,r16,48
   86390:	00800c04 	movi	r2,48
   86394:	d8c008c5 	stb	r3,35(sp)
   86398:	d9800804 	addi	r6,sp,32
   8639c:	d8c00904 	addi	r3,sp,36
   863a0:	d8800885 	stb	r2,34(sp)
   863a4:	003f6506 	br	8613c <___vfprintf_internal_r+0x1b88>
   863a8:	d9014c17 	ldw	r4,1328(sp)
   863ac:	2084703a 	and	r2,r4,r2
   863b0:	103f9c26 	beq	r2,zero,86224 <___vfprintf_internal_r+0x1c70>
   863b4:	003f6606 	br	86150 <___vfprintf_internal_r+0x1b9c>
   863b8:	d9800804 	addi	r6,sp,32
   863bc:	d8c00884 	addi	r3,sp,34
   863c0:	003f5e06 	br	8613c <___vfprintf_internal_r+0x1b88>
   863c4:	00800b44 	movi	r2,45
   863c8:	0121c83a 	sub	r16,zero,r4
   863cc:	d8800845 	stb	r2,33(sp)
   863d0:	003f3d06 	br	860c8 <___vfprintf_internal_r+0x1b14>
   863d4:	00800084 	movi	r2,2
   863d8:	1105c83a 	sub	r2,r2,r4
   863dc:	003fe606 	br	86378 <___vfprintf_internal_r+0x1dc4>
   863e0:	d8014515 	stw	zero,1300(sp)
   863e4:	dc814715 	stw	r18,1308(sp)
   863e8:	003fb106 	br	862b0 <___vfprintf_internal_r+0x1cfc>
   863ec:	000d883a 	mov	r6,zero
   863f0:	000f883a 	mov	r7,zero
   863f4:	8009883a 	mov	r4,r16
   863f8:	880b883a 	mov	r5,r17
   863fc:	008c5280 	call	8c528 <__nedf2>
   86400:	103f9f26 	beq	r2,zero,86280 <___vfprintf_internal_r+0x1ccc>
   86404:	00800044 	movi	r2,1
   86408:	1509c83a 	sub	r4,r2,r20
   8640c:	d9000515 	stw	r4,20(sp)
   86410:	003f9b06 	br	86280 <___vfprintf_internal_r+0x1ccc>
   86414:	98000d1e 	bne	r19,zero,8644c <___vfprintf_internal_r+0x1e98>
   86418:	d8c14c17 	ldw	r3,1328(sp)
   8641c:	1880004c 	andi	r2,r3,1
   86420:	10000a1e 	bne	r2,zero,8644c <___vfprintf_internal_r+0x1e98>
   86424:	01000044 	movi	r4,1
   86428:	200f883a 	mov	r7,r4
   8642c:	d9014515 	stw	r4,1300(sp)
   86430:	003f4a06 	br	8615c <___vfprintf_internal_r+0x1ba8>
   86434:	3cc00017 	ldw	r19,0(r7)
   86438:	39c00104 	addi	r7,r7,4
   8643c:	983d0e0e 	bge	r19,zero,85878 <___vfprintf_internal_r+0x12c4>
   86440:	b8c00007 	ldb	r3,0(r23)
   86444:	04ffffc4 	movi	r19,-1
   86448:	0038d906 	br	847b0 <___vfprintf_internal_r+0x1fc>
   8644c:	9cc00084 	addi	r19,r19,2
   86450:	dcc14515 	stw	r19,1300(sp)
   86454:	980f883a 	mov	r7,r19
   86458:	983f400e 	bge	r19,zero,8615c <___vfprintf_internal_r+0x1ba8>
   8645c:	003f7306 	br	8622c <___vfprintf_internal_r+0x1c78>

00086460 <__vfprintf_internal>:
   86460:	00800274 	movhi	r2,9
   86464:	1084af04 	addi	r2,r2,4796
   86468:	2013883a 	mov	r9,r4
   8646c:	11000017 	ldw	r4,0(r2)
   86470:	2805883a 	mov	r2,r5
   86474:	300f883a 	mov	r7,r6
   86478:	480b883a 	mov	r5,r9
   8647c:	100d883a 	mov	r6,r2
   86480:	00845b41 	jmpi	845b4 <___vfprintf_internal_r>

00086484 <__swsetup_r>:
   86484:	00800274 	movhi	r2,9
   86488:	1084af04 	addi	r2,r2,4796
   8648c:	10c00017 	ldw	r3,0(r2)
   86490:	defffd04 	addi	sp,sp,-12
   86494:	dc400115 	stw	r17,4(sp)
   86498:	dc000015 	stw	r16,0(sp)
   8649c:	dfc00215 	stw	ra,8(sp)
   864a0:	2023883a 	mov	r17,r4
   864a4:	2821883a 	mov	r16,r5
   864a8:	18000226 	beq	r3,zero,864b4 <__swsetup_r+0x30>
   864ac:	18800e17 	ldw	r2,56(r3)
   864b0:	10001f26 	beq	r2,zero,86530 <__swsetup_r+0xac>
   864b4:	8100030b 	ldhu	r4,12(r16)
   864b8:	2080020c 	andi	r2,r4,8
   864bc:	10002826 	beq	r2,zero,86560 <__swsetup_r+0xdc>
   864c0:	81400417 	ldw	r5,16(r16)
   864c4:	28001d26 	beq	r5,zero,8653c <__swsetup_r+0xb8>
   864c8:	2080004c 	andi	r2,r4,1
   864cc:	1005003a 	cmpeq	r2,r2,zero
   864d0:	10000b26 	beq	r2,zero,86500 <__swsetup_r+0x7c>
   864d4:	2080008c 	andi	r2,r4,2
   864d8:	10001226 	beq	r2,zero,86524 <__swsetup_r+0xa0>
   864dc:	0005883a 	mov	r2,zero
   864e0:	80800215 	stw	r2,8(r16)
   864e4:	28000b26 	beq	r5,zero,86514 <__swsetup_r+0x90>
   864e8:	0005883a 	mov	r2,zero
   864ec:	dfc00217 	ldw	ra,8(sp)
   864f0:	dc400117 	ldw	r17,4(sp)
   864f4:	dc000017 	ldw	r16,0(sp)
   864f8:	dec00304 	addi	sp,sp,12
   864fc:	f800283a 	ret
   86500:	80800517 	ldw	r2,20(r16)
   86504:	80000215 	stw	zero,8(r16)
   86508:	0085c83a 	sub	r2,zero,r2
   8650c:	80800615 	stw	r2,24(r16)
   86510:	283ff51e 	bne	r5,zero,864e8 <__swsetup_r+0x64>
   86514:	2080200c 	andi	r2,r4,128
   86518:	103ff326 	beq	r2,zero,864e8 <__swsetup_r+0x64>
   8651c:	00bfffc4 	movi	r2,-1
   86520:	003ff206 	br	864ec <__swsetup_r+0x68>
   86524:	80800517 	ldw	r2,20(r16)
   86528:	80800215 	stw	r2,8(r16)
   8652c:	003fed06 	br	864e4 <__swsetup_r+0x60>
   86530:	1809883a 	mov	r4,r3
   86534:	00880240 	call	88024 <__sinit>
   86538:	003fde06 	br	864b4 <__swsetup_r+0x30>
   8653c:	20c0a00c 	andi	r3,r4,640
   86540:	00808004 	movi	r2,512
   86544:	18bfe026 	beq	r3,r2,864c8 <__swsetup_r+0x44>
   86548:	8809883a 	mov	r4,r17
   8654c:	800b883a 	mov	r5,r16
   86550:	0088d9c0 	call	88d9c <__smakebuf_r>
   86554:	8100030b 	ldhu	r4,12(r16)
   86558:	81400417 	ldw	r5,16(r16)
   8655c:	003fda06 	br	864c8 <__swsetup_r+0x44>
   86560:	2080040c 	andi	r2,r4,16
   86564:	103fed26 	beq	r2,zero,8651c <__swsetup_r+0x98>
   86568:	2080010c 	andi	r2,r4,4
   8656c:	10001226 	beq	r2,zero,865b8 <__swsetup_r+0x134>
   86570:	81400c17 	ldw	r5,48(r16)
   86574:	28000526 	beq	r5,zero,8658c <__swsetup_r+0x108>
   86578:	80801004 	addi	r2,r16,64
   8657c:	28800226 	beq	r5,r2,86588 <__swsetup_r+0x104>
   86580:	8809883a 	mov	r4,r17
   86584:	00883a80 	call	883a8 <_free_r>
   86588:	80000c15 	stw	zero,48(r16)
   8658c:	8080030b 	ldhu	r2,12(r16)
   86590:	81400417 	ldw	r5,16(r16)
   86594:	80000115 	stw	zero,4(r16)
   86598:	10bff6cc 	andi	r2,r2,65499
   8659c:	8080030d 	sth	r2,12(r16)
   865a0:	81400015 	stw	r5,0(r16)
   865a4:	8080030b 	ldhu	r2,12(r16)
   865a8:	10800214 	ori	r2,r2,8
   865ac:	113fffcc 	andi	r4,r2,65535
   865b0:	8080030d 	sth	r2,12(r16)
   865b4:	003fc306 	br	864c4 <__swsetup_r+0x40>
   865b8:	81400417 	ldw	r5,16(r16)
   865bc:	003ff906 	br	865a4 <__swsetup_r+0x120>

000865c0 <quorem>:
   865c0:	28c00417 	ldw	r3,16(r5)
   865c4:	20800417 	ldw	r2,16(r4)
   865c8:	defff604 	addi	sp,sp,-40
   865cc:	ddc00715 	stw	r23,28(sp)
   865d0:	dd400515 	stw	r21,20(sp)
   865d4:	dfc00915 	stw	ra,36(sp)
   865d8:	df000815 	stw	fp,32(sp)
   865dc:	dd800615 	stw	r22,24(sp)
   865e0:	dd000415 	stw	r20,16(sp)
   865e4:	dcc00315 	stw	r19,12(sp)
   865e8:	dc800215 	stw	r18,8(sp)
   865ec:	dc400115 	stw	r17,4(sp)
   865f0:	dc000015 	stw	r16,0(sp)
   865f4:	202f883a 	mov	r23,r4
   865f8:	282b883a 	mov	r21,r5
   865fc:	10c07416 	blt	r2,r3,867d0 <quorem+0x210>
   86600:	1c7fffc4 	addi	r17,r3,-1
   86604:	8c45883a 	add	r2,r17,r17
   86608:	1085883a 	add	r2,r2,r2
   8660c:	2c000504 	addi	r16,r5,20
   86610:	24c00504 	addi	r19,r4,20
   86614:	14ed883a 	add	r22,r2,r19
   86618:	80a5883a 	add	r18,r16,r2
   8661c:	b7000017 	ldw	fp,0(r22)
   86620:	91400017 	ldw	r5,0(r18)
   86624:	e009883a 	mov	r4,fp
   86628:	29400044 	addi	r5,r5,1
   8662c:	0083ea80 	call	83ea8 <__udivsi3>
   86630:	1029883a 	mov	r20,r2
   86634:	10003c1e 	bne	r2,zero,86728 <quorem+0x168>
   86638:	a80b883a 	mov	r5,r21
   8663c:	b809883a 	mov	r4,r23
   86640:	0089ac80 	call	89ac8 <__mcmp>
   86644:	10002b16 	blt	r2,zero,866f4 <quorem+0x134>
   86648:	a5000044 	addi	r20,r20,1
   8664c:	980f883a 	mov	r7,r19
   86650:	0011883a 	mov	r8,zero
   86654:	0009883a 	mov	r4,zero
   86658:	81400017 	ldw	r5,0(r16)
   8665c:	38c00017 	ldw	r3,0(r7)
   86660:	84000104 	addi	r16,r16,4
   86664:	28bfffcc 	andi	r2,r5,65535
   86668:	2085883a 	add	r2,r4,r2
   8666c:	11bfffcc 	andi	r6,r2,65535
   86670:	193fffcc 	andi	r4,r3,65535
   86674:	1004d43a 	srli	r2,r2,16
   86678:	280ad43a 	srli	r5,r5,16
   8667c:	2189c83a 	sub	r4,r4,r6
   86680:	2209883a 	add	r4,r4,r8
   86684:	1806d43a 	srli	r3,r3,16
   86688:	288b883a 	add	r5,r5,r2
   8668c:	200dd43a 	srai	r6,r4,16
   86690:	28bfffcc 	andi	r2,r5,65535
   86694:	1887c83a 	sub	r3,r3,r2
   86698:	1987883a 	add	r3,r3,r6
   8669c:	3900000d 	sth	r4,0(r7)
   866a0:	38c0008d 	sth	r3,2(r7)
   866a4:	2808d43a 	srli	r4,r5,16
   866a8:	39c00104 	addi	r7,r7,4
   866ac:	1811d43a 	srai	r8,r3,16
   866b0:	943fe92e 	bgeu	r18,r16,86658 <quorem+0x98>
   866b4:	8c45883a 	add	r2,r17,r17
   866b8:	1085883a 	add	r2,r2,r2
   866bc:	9885883a 	add	r2,r19,r2
   866c0:	10c00017 	ldw	r3,0(r2)
   866c4:	18000b1e 	bne	r3,zero,866f4 <quorem+0x134>
   866c8:	113fff04 	addi	r4,r2,-4
   866cc:	9900082e 	bgeu	r19,r4,866f0 <quorem+0x130>
   866d0:	10bfff17 	ldw	r2,-4(r2)
   866d4:	10000326 	beq	r2,zero,866e4 <quorem+0x124>
   866d8:	00000506 	br	866f0 <quorem+0x130>
   866dc:	20800017 	ldw	r2,0(r4)
   866e0:	1000031e 	bne	r2,zero,866f0 <quorem+0x130>
   866e4:	213fff04 	addi	r4,r4,-4
   866e8:	8c7fffc4 	addi	r17,r17,-1
   866ec:	993ffb36 	bltu	r19,r4,866dc <quorem+0x11c>
   866f0:	bc400415 	stw	r17,16(r23)
   866f4:	a005883a 	mov	r2,r20
   866f8:	dfc00917 	ldw	ra,36(sp)
   866fc:	df000817 	ldw	fp,32(sp)
   86700:	ddc00717 	ldw	r23,28(sp)
   86704:	dd800617 	ldw	r22,24(sp)
   86708:	dd400517 	ldw	r21,20(sp)
   8670c:	dd000417 	ldw	r20,16(sp)
   86710:	dcc00317 	ldw	r19,12(sp)
   86714:	dc800217 	ldw	r18,8(sp)
   86718:	dc400117 	ldw	r17,4(sp)
   8671c:	dc000017 	ldw	r16,0(sp)
   86720:	dec00a04 	addi	sp,sp,40
   86724:	f800283a 	ret
   86728:	980f883a 	mov	r7,r19
   8672c:	8011883a 	mov	r8,r16
   86730:	0013883a 	mov	r9,zero
   86734:	000d883a 	mov	r6,zero
   86738:	40c00017 	ldw	r3,0(r8)
   8673c:	39000017 	ldw	r4,0(r7)
   86740:	42000104 	addi	r8,r8,4
   86744:	18bfffcc 	andi	r2,r3,65535
   86748:	a085383a 	mul	r2,r20,r2
   8674c:	1806d43a 	srli	r3,r3,16
   86750:	217fffcc 	andi	r5,r4,65535
   86754:	3085883a 	add	r2,r6,r2
   86758:	11bfffcc 	andi	r6,r2,65535
   8675c:	a0c7383a 	mul	r3,r20,r3
   86760:	1004d43a 	srli	r2,r2,16
   86764:	298bc83a 	sub	r5,r5,r6
   86768:	2a4b883a 	add	r5,r5,r9
   8676c:	2008d43a 	srli	r4,r4,16
   86770:	1887883a 	add	r3,r3,r2
   86774:	280dd43a 	srai	r6,r5,16
   86778:	18bfffcc 	andi	r2,r3,65535
   8677c:	2089c83a 	sub	r4,r4,r2
   86780:	2189883a 	add	r4,r4,r6
   86784:	3900008d 	sth	r4,2(r7)
   86788:	3940000d 	sth	r5,0(r7)
   8678c:	180cd43a 	srli	r6,r3,16
   86790:	39c00104 	addi	r7,r7,4
   86794:	2013d43a 	srai	r9,r4,16
   86798:	923fe72e 	bgeu	r18,r8,86738 <quorem+0x178>
   8679c:	e03fa61e 	bne	fp,zero,86638 <quorem+0x78>
   867a0:	b0ffff04 	addi	r3,r22,-4
   867a4:	98c0082e 	bgeu	r19,r3,867c8 <quorem+0x208>
   867a8:	b0bfff17 	ldw	r2,-4(r22)
   867ac:	10000326 	beq	r2,zero,867bc <quorem+0x1fc>
   867b0:	00000506 	br	867c8 <quorem+0x208>
   867b4:	18800017 	ldw	r2,0(r3)
   867b8:	1000031e 	bne	r2,zero,867c8 <quorem+0x208>
   867bc:	18ffff04 	addi	r3,r3,-4
   867c0:	8c7fffc4 	addi	r17,r17,-1
   867c4:	98fffb36 	bltu	r19,r3,867b4 <quorem+0x1f4>
   867c8:	bc400415 	stw	r17,16(r23)
   867cc:	003f9a06 	br	86638 <quorem+0x78>
   867d0:	0005883a 	mov	r2,zero
   867d4:	003fc806 	br	866f8 <quorem+0x138>

000867d8 <_dtoa_r>:
   867d8:	22001017 	ldw	r8,64(r4)
   867dc:	deffda04 	addi	sp,sp,-152
   867e0:	dd402115 	stw	r21,132(sp)
   867e4:	dd002015 	stw	r20,128(sp)
   867e8:	dc801e15 	stw	r18,120(sp)
   867ec:	dc401d15 	stw	r17,116(sp)
   867f0:	dfc02515 	stw	ra,148(sp)
   867f4:	df002415 	stw	fp,144(sp)
   867f8:	ddc02315 	stw	r23,140(sp)
   867fc:	dd802215 	stw	r22,136(sp)
   86800:	dcc01f15 	stw	r19,124(sp)
   86804:	dc001c15 	stw	r16,112(sp)
   86808:	d9001615 	stw	r4,88(sp)
   8680c:	3023883a 	mov	r17,r6
   86810:	2829883a 	mov	r20,r5
   86814:	d9c01715 	stw	r7,92(sp)
   86818:	dc802817 	ldw	r18,160(sp)
   8681c:	302b883a 	mov	r21,r6
   86820:	40000a26 	beq	r8,zero,8684c <_dtoa_r+0x74>
   86824:	20801117 	ldw	r2,68(r4)
   86828:	400b883a 	mov	r5,r8
   8682c:	40800115 	stw	r2,4(r8)
   86830:	20c01117 	ldw	r3,68(r4)
   86834:	00800044 	movi	r2,1
   86838:	10c4983a 	sll	r2,r2,r3
   8683c:	40800215 	stw	r2,8(r8)
   86840:	008996c0 	call	8996c <_Bfree>
   86844:	d8c01617 	ldw	r3,88(sp)
   86848:	18001015 	stw	zero,64(r3)
   8684c:	8800a316 	blt	r17,zero,86adc <_dtoa_r+0x304>
   86850:	90000015 	stw	zero,0(r18)
   86854:	a8dffc2c 	andhi	r3,r21,32752
   86858:	009ffc34 	movhi	r2,32752
   8685c:	18809126 	beq	r3,r2,86aa4 <_dtoa_r+0x2cc>
   86860:	000d883a 	mov	r6,zero
   86864:	000f883a 	mov	r7,zero
   86868:	a009883a 	mov	r4,r20
   8686c:	a80b883a 	mov	r5,r21
   86870:	dd001215 	stw	r20,72(sp)
   86874:	dd401315 	stw	r21,76(sp)
   86878:	008c5280 	call	8c528 <__nedf2>
   8687c:	1000171e 	bne	r2,zero,868dc <_dtoa_r+0x104>
   86880:	d9802717 	ldw	r6,156(sp)
   86884:	00800044 	movi	r2,1
   86888:	30800015 	stw	r2,0(r6)
   8688c:	d8802917 	ldw	r2,164(sp)
   86890:	10029b26 	beq	r2,zero,87300 <_dtoa_r+0xb28>
   86894:	d9002917 	ldw	r4,164(sp)
   86898:	00800274 	movhi	r2,9
   8689c:	10bd2444 	addi	r2,r2,-2927
   868a0:	10ffffc4 	addi	r3,r2,-1
   868a4:	20800015 	stw	r2,0(r4)
   868a8:	1805883a 	mov	r2,r3
   868ac:	dfc02517 	ldw	ra,148(sp)
   868b0:	df002417 	ldw	fp,144(sp)
   868b4:	ddc02317 	ldw	r23,140(sp)
   868b8:	dd802217 	ldw	r22,136(sp)
   868bc:	dd402117 	ldw	r21,132(sp)
   868c0:	dd002017 	ldw	r20,128(sp)
   868c4:	dcc01f17 	ldw	r19,124(sp)
   868c8:	dc801e17 	ldw	r18,120(sp)
   868cc:	dc401d17 	ldw	r17,116(sp)
   868d0:	dc001c17 	ldw	r16,112(sp)
   868d4:	dec02604 	addi	sp,sp,152
   868d8:	f800283a 	ret
   868dc:	d9001617 	ldw	r4,88(sp)
   868e0:	d9401217 	ldw	r5,72(sp)
   868e4:	d8800104 	addi	r2,sp,4
   868e8:	a80d883a 	mov	r6,r21
   868ec:	d9c00204 	addi	r7,sp,8
   868f0:	d8800015 	stw	r2,0(sp)
   868f4:	0089fa80 	call	89fa8 <__d2b>
   868f8:	d8800715 	stw	r2,28(sp)
   868fc:	a804d53a 	srli	r2,r21,20
   86900:	1101ffcc 	andi	r4,r2,2047
   86904:	20008626 	beq	r4,zero,86b20 <_dtoa_r+0x348>
   86908:	d8c01217 	ldw	r3,72(sp)
   8690c:	00800434 	movhi	r2,16
   86910:	10bfffc4 	addi	r2,r2,-1
   86914:	ddc00117 	ldw	r23,4(sp)
   86918:	a884703a 	and	r2,r21,r2
   8691c:	1811883a 	mov	r8,r3
   86920:	124ffc34 	orhi	r9,r2,16368
   86924:	25bf0044 	addi	r22,r4,-1023
   86928:	d8000815 	stw	zero,32(sp)
   8692c:	0005883a 	mov	r2,zero
   86930:	00cffe34 	movhi	r3,16376
   86934:	480b883a 	mov	r5,r9
   86938:	4009883a 	mov	r4,r8
   8693c:	180f883a 	mov	r7,r3
   86940:	100d883a 	mov	r6,r2
   86944:	008354c0 	call	8354c <__subdf3>
   86948:	0218dbf4 	movhi	r8,25455
   8694c:	4210d844 	addi	r8,r8,17249
   86950:	024ff4f4 	movhi	r9,16339
   86954:	4a61e9c4 	addi	r9,r9,-30809
   86958:	480f883a 	mov	r7,r9
   8695c:	400d883a 	mov	r6,r8
   86960:	180b883a 	mov	r5,r3
   86964:	1009883a 	mov	r4,r2
   86968:	00836400 	call	83640 <__muldf3>
   8696c:	0222d874 	movhi	r8,35681
   86970:	42322cc4 	addi	r8,r8,-14157
   86974:	024ff1f4 	movhi	r9,16327
   86978:	4a628a04 	addi	r9,r9,-30168
   8697c:	480f883a 	mov	r7,r9
   86980:	400d883a 	mov	r6,r8
   86984:	180b883a 	mov	r5,r3
   86988:	1009883a 	mov	r4,r2
   8698c:	00835cc0 	call	835cc <__adddf3>
   86990:	b009883a 	mov	r4,r22
   86994:	1021883a 	mov	r16,r2
   86998:	1823883a 	mov	r17,r3
   8699c:	0083b9c0 	call	83b9c <__floatsidf>
   869a0:	021427f4 	movhi	r8,20639
   869a4:	421e7ec4 	addi	r8,r8,31227
   869a8:	024ff4f4 	movhi	r9,16339
   869ac:	4a5104c4 	addi	r9,r9,17427
   869b0:	480f883a 	mov	r7,r9
   869b4:	400d883a 	mov	r6,r8
   869b8:	180b883a 	mov	r5,r3
   869bc:	1009883a 	mov	r4,r2
   869c0:	00836400 	call	83640 <__muldf3>
   869c4:	180f883a 	mov	r7,r3
   869c8:	880b883a 	mov	r5,r17
   869cc:	100d883a 	mov	r6,r2
   869d0:	8009883a 	mov	r4,r16
   869d4:	00835cc0 	call	835cc <__adddf3>
   869d8:	1009883a 	mov	r4,r2
   869dc:	180b883a 	mov	r5,r3
   869e0:	1021883a 	mov	r16,r2
   869e4:	1823883a 	mov	r17,r3
   869e8:	0083c940 	call	83c94 <__fixdfsi>
   869ec:	000d883a 	mov	r6,zero
   869f0:	000f883a 	mov	r7,zero
   869f4:	8009883a 	mov	r4,r16
   869f8:	880b883a 	mov	r5,r17
   869fc:	d8800d15 	stw	r2,52(sp)
   86a00:	008c5b00 	call	8c5b0 <__ltdf2>
   86a04:	10031716 	blt	r2,zero,87664 <_dtoa_r+0xe8c>
   86a08:	d8c00d17 	ldw	r3,52(sp)
   86a0c:	00800584 	movi	r2,22
   86a10:	10c1482e 	bgeu	r2,r3,86f34 <_dtoa_r+0x75c>
   86a14:	01000044 	movi	r4,1
   86a18:	d9000c15 	stw	r4,48(sp)
   86a1c:	bd85c83a 	sub	r2,r23,r22
   86a20:	11bfffc4 	addi	r6,r2,-1
   86a24:	30030b16 	blt	r6,zero,87654 <_dtoa_r+0xe7c>
   86a28:	d9800a15 	stw	r6,40(sp)
   86a2c:	d8001115 	stw	zero,68(sp)
   86a30:	d8c00d17 	ldw	r3,52(sp)
   86a34:	1802ff16 	blt	r3,zero,87634 <_dtoa_r+0xe5c>
   86a38:	d9000a17 	ldw	r4,40(sp)
   86a3c:	d8c00915 	stw	r3,36(sp)
   86a40:	d8001015 	stw	zero,64(sp)
   86a44:	20c9883a 	add	r4,r4,r3
   86a48:	d9000a15 	stw	r4,40(sp)
   86a4c:	d9001717 	ldw	r4,92(sp)
   86a50:	00800244 	movi	r2,9
   86a54:	11004636 	bltu	r2,r4,86b70 <_dtoa_r+0x398>
   86a58:	00800144 	movi	r2,5
   86a5c:	11020416 	blt	r2,r4,87270 <_dtoa_r+0xa98>
   86a60:	04400044 	movi	r17,1
   86a64:	d8c01717 	ldw	r3,92(sp)
   86a68:	00800144 	movi	r2,5
   86a6c:	10c1ed36 	bltu	r2,r3,87224 <_dtoa_r+0xa4c>
   86a70:	18c5883a 	add	r2,r3,r3
   86a74:	1085883a 	add	r2,r2,r2
   86a78:	00c00234 	movhi	r3,8
   86a7c:	18daa304 	addi	r3,r3,27276
   86a80:	10c5883a 	add	r2,r2,r3
   86a84:	11000017 	ldw	r4,0(r2)
   86a88:	2000683a 	jmp	r4
   86a8c:	00086b78 	rdprs	zero,zero,8621
   86a90:	00086b78 	rdprs	zero,zero,8621
   86a94:	00087578 	rdprs	zero,zero,8661
   86a98:	00087550 	cmplti	zero,zero,8661
   86a9c:	00087594 	movui	zero,8662
   86aa0:	000875a0 	cmpeqi	zero,zero,8662
   86aa4:	d9002717 	ldw	r4,156(sp)
   86aa8:	0089c3c4 	movi	r2,9999
   86aac:	20800015 	stw	r2,0(r4)
   86ab0:	a0001026 	beq	r20,zero,86af4 <_dtoa_r+0x31c>
   86ab4:	00c00274 	movhi	r3,9
   86ab8:	18fd3004 	addi	r3,r3,-2880
   86abc:	d9802917 	ldw	r6,164(sp)
   86ac0:	303f7926 	beq	r6,zero,868a8 <_dtoa_r+0xd0>
   86ac4:	188000c7 	ldb	r2,3(r3)
   86ac8:	190000c4 	addi	r4,r3,3
   86acc:	1000101e 	bne	r2,zero,86b10 <_dtoa_r+0x338>
   86ad0:	d8802917 	ldw	r2,164(sp)
   86ad4:	11000015 	stw	r4,0(r2)
   86ad8:	003f7306 	br	868a8 <_dtoa_r+0xd0>
   86adc:	00a00034 	movhi	r2,32768
   86ae0:	10bfffc4 	addi	r2,r2,-1
   86ae4:	00c00044 	movi	r3,1
   86ae8:	88aa703a 	and	r21,r17,r2
   86aec:	90c00015 	stw	r3,0(r18)
   86af0:	003f5806 	br	86854 <_dtoa_r+0x7c>
   86af4:	00800434 	movhi	r2,16
   86af8:	10bfffc4 	addi	r2,r2,-1
   86afc:	a884703a 	and	r2,r21,r2
   86b00:	103fec1e 	bne	r2,zero,86ab4 <_dtoa_r+0x2dc>
   86b04:	00c00274 	movhi	r3,9
   86b08:	18fd2d04 	addi	r3,r3,-2892
   86b0c:	003feb06 	br	86abc <_dtoa_r+0x2e4>
   86b10:	d8802917 	ldw	r2,164(sp)
   86b14:	19000204 	addi	r4,r3,8
   86b18:	11000015 	stw	r4,0(r2)
   86b1c:	003f6206 	br	868a8 <_dtoa_r+0xd0>
   86b20:	ddc00117 	ldw	r23,4(sp)
   86b24:	d8800217 	ldw	r2,8(sp)
   86b28:	01000804 	movi	r4,32
   86b2c:	b8c10c84 	addi	r3,r23,1074
   86b30:	18a3883a 	add	r17,r3,r2
   86b34:	2441b80e 	bge	r4,r17,87218 <_dtoa_r+0xa40>
   86b38:	00c01004 	movi	r3,64
   86b3c:	1c47c83a 	sub	r3,r3,r17
   86b40:	88bff804 	addi	r2,r17,-32
   86b44:	a8c6983a 	sll	r3,r21,r3
   86b48:	a084d83a 	srl	r2,r20,r2
   86b4c:	1888b03a 	or	r4,r3,r2
   86b50:	008c6380 	call	8c638 <__floatunsidf>
   86b54:	1011883a 	mov	r8,r2
   86b58:	00bf8434 	movhi	r2,65040
   86b5c:	01000044 	movi	r4,1
   86b60:	10d3883a 	add	r9,r2,r3
   86b64:	8dbef344 	addi	r22,r17,-1075
   86b68:	d9000815 	stw	r4,32(sp)
   86b6c:	003f6f06 	br	8692c <_dtoa_r+0x154>
   86b70:	d8001715 	stw	zero,92(sp)
   86b74:	04400044 	movi	r17,1
   86b78:	00bfffc4 	movi	r2,-1
   86b7c:	00c00044 	movi	r3,1
   86b80:	d8800e15 	stw	r2,56(sp)
   86b84:	d8002615 	stw	zero,152(sp)
   86b88:	d8800f15 	stw	r2,60(sp)
   86b8c:	d8c00b15 	stw	r3,44(sp)
   86b90:	1021883a 	mov	r16,r2
   86b94:	d8801617 	ldw	r2,88(sp)
   86b98:	10001115 	stw	zero,68(r2)
   86b9c:	d8801617 	ldw	r2,88(sp)
   86ba0:	11401117 	ldw	r5,68(r2)
   86ba4:	1009883a 	mov	r4,r2
   86ba8:	0089eec0 	call	89eec <_Balloc>
   86bac:	d8c01617 	ldw	r3,88(sp)
   86bb0:	d8800515 	stw	r2,20(sp)
   86bb4:	18801015 	stw	r2,64(r3)
   86bb8:	00800384 	movi	r2,14
   86bbc:	14006836 	bltu	r2,r16,86d60 <_dtoa_r+0x588>
   86bc0:	8805003a 	cmpeq	r2,r17,zero
   86bc4:	1000661e 	bne	r2,zero,86d60 <_dtoa_r+0x588>
   86bc8:	d9000d17 	ldw	r4,52(sp)
   86bcc:	0102300e 	bge	zero,r4,87490 <_dtoa_r+0xcb8>
   86bd0:	208003cc 	andi	r2,r4,15
   86bd4:	100490fa 	slli	r2,r2,3
   86bd8:	2025d13a 	srai	r18,r4,4
   86bdc:	00c00274 	movhi	r3,9
   86be0:	18fd4204 	addi	r3,r3,-2808
   86be4:	10c5883a 	add	r2,r2,r3
   86be8:	90c0040c 	andi	r3,r18,16
   86bec:	14000017 	ldw	r16,0(r2)
   86bf0:	14400117 	ldw	r17,4(r2)
   86bf4:	18036a1e 	bne	r3,zero,879a0 <_dtoa_r+0x11c8>
   86bf8:	05800084 	movi	r22,2
   86bfc:	90001026 	beq	r18,zero,86c40 <_dtoa_r+0x468>
   86c00:	04c00274 	movhi	r19,9
   86c04:	9cfd7404 	addi	r19,r19,-2608
   86c08:	9080004c 	andi	r2,r18,1
   86c0c:	1005003a 	cmpeq	r2,r2,zero
   86c10:	1000081e 	bne	r2,zero,86c34 <_dtoa_r+0x45c>
   86c14:	99800017 	ldw	r6,0(r19)
   86c18:	99c00117 	ldw	r7,4(r19)
   86c1c:	880b883a 	mov	r5,r17
   86c20:	8009883a 	mov	r4,r16
   86c24:	00836400 	call	83640 <__muldf3>
   86c28:	1021883a 	mov	r16,r2
   86c2c:	b5800044 	addi	r22,r22,1
   86c30:	1823883a 	mov	r17,r3
   86c34:	9025d07a 	srai	r18,r18,1
   86c38:	9cc00204 	addi	r19,r19,8
   86c3c:	903ff21e 	bne	r18,zero,86c08 <_dtoa_r+0x430>
   86c40:	a80b883a 	mov	r5,r21
   86c44:	a009883a 	mov	r4,r20
   86c48:	880f883a 	mov	r7,r17
   86c4c:	800d883a 	mov	r6,r16
   86c50:	008c2d00 	call	8c2d0 <__divdf3>
   86c54:	1029883a 	mov	r20,r2
   86c58:	182b883a 	mov	r21,r3
   86c5c:	d8c00c17 	ldw	r3,48(sp)
   86c60:	1805003a 	cmpeq	r2,r3,zero
   86c64:	1000081e 	bne	r2,zero,86c88 <_dtoa_r+0x4b0>
   86c68:	0005883a 	mov	r2,zero
   86c6c:	00cffc34 	movhi	r3,16368
   86c70:	180f883a 	mov	r7,r3
   86c74:	a009883a 	mov	r4,r20
   86c78:	a80b883a 	mov	r5,r21
   86c7c:	100d883a 	mov	r6,r2
   86c80:	008c5b00 	call	8c5b0 <__ltdf2>
   86c84:	1003fe16 	blt	r2,zero,87c80 <_dtoa_r+0x14a8>
   86c88:	b009883a 	mov	r4,r22
   86c8c:	0083b9c0 	call	83b9c <__floatsidf>
   86c90:	180b883a 	mov	r5,r3
   86c94:	1009883a 	mov	r4,r2
   86c98:	a00d883a 	mov	r6,r20
   86c9c:	a80f883a 	mov	r7,r21
   86ca0:	00836400 	call	83640 <__muldf3>
   86ca4:	0011883a 	mov	r8,zero
   86ca8:	02500734 	movhi	r9,16412
   86cac:	1009883a 	mov	r4,r2
   86cb0:	180b883a 	mov	r5,r3
   86cb4:	480f883a 	mov	r7,r9
   86cb8:	400d883a 	mov	r6,r8
   86cbc:	00835cc0 	call	835cc <__adddf3>
   86cc0:	d9000f17 	ldw	r4,60(sp)
   86cc4:	102d883a 	mov	r22,r2
   86cc8:	00bf3034 	movhi	r2,64704
   86ccc:	18b9883a 	add	fp,r3,r2
   86cd0:	e02f883a 	mov	r23,fp
   86cd4:	20028f1e 	bne	r4,zero,87714 <_dtoa_r+0xf3c>
   86cd8:	0005883a 	mov	r2,zero
   86cdc:	00d00534 	movhi	r3,16404
   86ce0:	a009883a 	mov	r4,r20
   86ce4:	a80b883a 	mov	r5,r21
   86ce8:	180f883a 	mov	r7,r3
   86cec:	100d883a 	mov	r6,r2
   86cf0:	008354c0 	call	8354c <__subdf3>
   86cf4:	1009883a 	mov	r4,r2
   86cf8:	e00f883a 	mov	r7,fp
   86cfc:	180b883a 	mov	r5,r3
   86d00:	b00d883a 	mov	r6,r22
   86d04:	1025883a 	mov	r18,r2
   86d08:	1827883a 	mov	r19,r3
   86d0c:	0083a8c0 	call	83a8c <__gtdf2>
   86d10:	00834f16 	blt	zero,r2,87a50 <_dtoa_r+0x1278>
   86d14:	e0e0003c 	xorhi	r3,fp,32768
   86d18:	9009883a 	mov	r4,r18
   86d1c:	980b883a 	mov	r5,r19
   86d20:	180f883a 	mov	r7,r3
   86d24:	b00d883a 	mov	r6,r22
   86d28:	008c5b00 	call	8c5b0 <__ltdf2>
   86d2c:	1000080e 	bge	r2,zero,86d50 <_dtoa_r+0x578>
   86d30:	0027883a 	mov	r19,zero
   86d34:	0025883a 	mov	r18,zero
   86d38:	d8802617 	ldw	r2,152(sp)
   86d3c:	df000517 	ldw	fp,20(sp)
   86d40:	d8000615 	stw	zero,24(sp)
   86d44:	0084303a 	nor	r2,zero,r2
   86d48:	d8800d15 	stw	r2,52(sp)
   86d4c:	00019b06 	br	873bc <_dtoa_r+0xbe4>
   86d50:	d9801217 	ldw	r6,72(sp)
   86d54:	d8801317 	ldw	r2,76(sp)
   86d58:	3029883a 	mov	r20,r6
   86d5c:	102b883a 	mov	r21,r2
   86d60:	d8c00217 	ldw	r3,8(sp)
   86d64:	18008516 	blt	r3,zero,86f7c <_dtoa_r+0x7a4>
   86d68:	d9000d17 	ldw	r4,52(sp)
   86d6c:	00800384 	movi	r2,14
   86d70:	11008216 	blt	r2,r4,86f7c <_dtoa_r+0x7a4>
   86d74:	200490fa 	slli	r2,r4,3
   86d78:	d9802617 	ldw	r6,152(sp)
   86d7c:	00c00274 	movhi	r3,9
   86d80:	18fd4204 	addi	r3,r3,-2808
   86d84:	10c5883a 	add	r2,r2,r3
   86d88:	14800017 	ldw	r18,0(r2)
   86d8c:	14c00117 	ldw	r19,4(r2)
   86d90:	30031e16 	blt	r6,zero,87a0c <_dtoa_r+0x1234>
   86d94:	d9000517 	ldw	r4,20(sp)
   86d98:	d8c00f17 	ldw	r3,60(sp)
   86d9c:	a823883a 	mov	r17,r21
   86da0:	a021883a 	mov	r16,r20
   86da4:	192b883a 	add	r21,r3,r4
   86da8:	2039883a 	mov	fp,r4
   86dac:	00000f06 	br	86dec <_dtoa_r+0x614>
   86db0:	0005883a 	mov	r2,zero
   86db4:	00d00934 	movhi	r3,16420
   86db8:	5009883a 	mov	r4,r10
   86dbc:	580b883a 	mov	r5,r11
   86dc0:	180f883a 	mov	r7,r3
   86dc4:	100d883a 	mov	r6,r2
   86dc8:	00836400 	call	83640 <__muldf3>
   86dcc:	180b883a 	mov	r5,r3
   86dd0:	000d883a 	mov	r6,zero
   86dd4:	000f883a 	mov	r7,zero
   86dd8:	1009883a 	mov	r4,r2
   86ddc:	1021883a 	mov	r16,r2
   86de0:	1823883a 	mov	r17,r3
   86de4:	008c5280 	call	8c528 <__nedf2>
   86de8:	10004526 	beq	r2,zero,86f00 <_dtoa_r+0x728>
   86dec:	900d883a 	mov	r6,r18
   86df0:	980f883a 	mov	r7,r19
   86df4:	8009883a 	mov	r4,r16
   86df8:	880b883a 	mov	r5,r17
   86dfc:	008c2d00 	call	8c2d0 <__divdf3>
   86e00:	180b883a 	mov	r5,r3
   86e04:	1009883a 	mov	r4,r2
   86e08:	0083c940 	call	83c94 <__fixdfsi>
   86e0c:	1009883a 	mov	r4,r2
   86e10:	1029883a 	mov	r20,r2
   86e14:	0083b9c0 	call	83b9c <__floatsidf>
   86e18:	180f883a 	mov	r7,r3
   86e1c:	9009883a 	mov	r4,r18
   86e20:	980b883a 	mov	r5,r19
   86e24:	100d883a 	mov	r6,r2
   86e28:	00836400 	call	83640 <__muldf3>
   86e2c:	180f883a 	mov	r7,r3
   86e30:	880b883a 	mov	r5,r17
   86e34:	8009883a 	mov	r4,r16
   86e38:	100d883a 	mov	r6,r2
   86e3c:	008354c0 	call	8354c <__subdf3>
   86e40:	1015883a 	mov	r10,r2
   86e44:	a0800c04 	addi	r2,r20,48
   86e48:	e0800005 	stb	r2,0(fp)
   86e4c:	e7000044 	addi	fp,fp,1
   86e50:	1817883a 	mov	r11,r3
   86e54:	e57fd61e 	bne	fp,r21,86db0 <_dtoa_r+0x5d8>
   86e58:	500d883a 	mov	r6,r10
   86e5c:	180f883a 	mov	r7,r3
   86e60:	5009883a 	mov	r4,r10
   86e64:	180b883a 	mov	r5,r3
   86e68:	00835cc0 	call	835cc <__adddf3>
   86e6c:	100d883a 	mov	r6,r2
   86e70:	9009883a 	mov	r4,r18
   86e74:	980b883a 	mov	r5,r19
   86e78:	180f883a 	mov	r7,r3
   86e7c:	1021883a 	mov	r16,r2
   86e80:	1823883a 	mov	r17,r3
   86e84:	008c5b00 	call	8c5b0 <__ltdf2>
   86e88:	10000816 	blt	r2,zero,86eac <_dtoa_r+0x6d4>
   86e8c:	980b883a 	mov	r5,r19
   86e90:	800d883a 	mov	r6,r16
   86e94:	880f883a 	mov	r7,r17
   86e98:	9009883a 	mov	r4,r18
   86e9c:	0083a040 	call	83a04 <__eqdf2>
   86ea0:	1000171e 	bne	r2,zero,86f00 <_dtoa_r+0x728>
   86ea4:	a080004c 	andi	r2,r20,1
   86ea8:	10001526 	beq	r2,zero,86f00 <_dtoa_r+0x728>
   86eac:	d8800d17 	ldw	r2,52(sp)
   86eb0:	d8800415 	stw	r2,16(sp)
   86eb4:	e009883a 	mov	r4,fp
   86eb8:	213fffc4 	addi	r4,r4,-1
   86ebc:	20c00007 	ldb	r3,0(r4)
   86ec0:	00800e44 	movi	r2,57
   86ec4:	1880081e 	bne	r3,r2,86ee8 <_dtoa_r+0x710>
   86ec8:	d8800517 	ldw	r2,20(sp)
   86ecc:	113ffa1e 	bne	r2,r4,86eb8 <_dtoa_r+0x6e0>
   86ed0:	d8c00417 	ldw	r3,16(sp)
   86ed4:	d9800517 	ldw	r6,20(sp)
   86ed8:	00800c04 	movi	r2,48
   86edc:	18c00044 	addi	r3,r3,1
   86ee0:	d8c00415 	stw	r3,16(sp)
   86ee4:	30800005 	stb	r2,0(r6)
   86ee8:	20800003 	ldbu	r2,0(r4)
   86eec:	d8c00417 	ldw	r3,16(sp)
   86ef0:	27000044 	addi	fp,r4,1
   86ef4:	10800044 	addi	r2,r2,1
   86ef8:	d8c00d15 	stw	r3,52(sp)
   86efc:	20800005 	stb	r2,0(r4)
   86f00:	d9001617 	ldw	r4,88(sp)
   86f04:	d9400717 	ldw	r5,28(sp)
   86f08:	008996c0 	call	8996c <_Bfree>
   86f0c:	e0000005 	stb	zero,0(fp)
   86f10:	d9800d17 	ldw	r6,52(sp)
   86f14:	d8c02717 	ldw	r3,156(sp)
   86f18:	d9002917 	ldw	r4,164(sp)
   86f1c:	30800044 	addi	r2,r6,1
   86f20:	18800015 	stw	r2,0(r3)
   86f24:	20029c26 	beq	r4,zero,87998 <_dtoa_r+0x11c0>
   86f28:	d8c00517 	ldw	r3,20(sp)
   86f2c:	27000015 	stw	fp,0(r4)
   86f30:	003e5d06 	br	868a8 <_dtoa_r+0xd0>
   86f34:	d9800d17 	ldw	r6,52(sp)
   86f38:	00c00274 	movhi	r3,9
   86f3c:	18fd4204 	addi	r3,r3,-2808
   86f40:	d9001217 	ldw	r4,72(sp)
   86f44:	300490fa 	slli	r2,r6,3
   86f48:	d9401317 	ldw	r5,76(sp)
   86f4c:	10c5883a 	add	r2,r2,r3
   86f50:	12000017 	ldw	r8,0(r2)
   86f54:	12400117 	ldw	r9,4(r2)
   86f58:	400d883a 	mov	r6,r8
   86f5c:	480f883a 	mov	r7,r9
   86f60:	008c5b00 	call	8c5b0 <__ltdf2>
   86f64:	1000030e 	bge	r2,zero,86f74 <_dtoa_r+0x79c>
   86f68:	d8800d17 	ldw	r2,52(sp)
   86f6c:	10bfffc4 	addi	r2,r2,-1
   86f70:	d8800d15 	stw	r2,52(sp)
   86f74:	d8000c15 	stw	zero,48(sp)
   86f78:	003ea806 	br	86a1c <_dtoa_r+0x244>
   86f7c:	d9000b17 	ldw	r4,44(sp)
   86f80:	202cc03a 	cmpne	r22,r4,zero
   86f84:	b000c71e 	bne	r22,zero,872a4 <_dtoa_r+0xacc>
   86f88:	dc001117 	ldw	r16,68(sp)
   86f8c:	dc801017 	ldw	r18,64(sp)
   86f90:	0027883a 	mov	r19,zero
   86f94:	04000b0e 	bge	zero,r16,86fc4 <_dtoa_r+0x7ec>
   86f98:	d8c00a17 	ldw	r3,40(sp)
   86f9c:	00c0090e 	bge	zero,r3,86fc4 <_dtoa_r+0x7ec>
   86fa0:	8005883a 	mov	r2,r16
   86fa4:	1c011316 	blt	r3,r16,873f4 <_dtoa_r+0xc1c>
   86fa8:	d9000a17 	ldw	r4,40(sp)
   86fac:	d9801117 	ldw	r6,68(sp)
   86fb0:	80a1c83a 	sub	r16,r16,r2
   86fb4:	2089c83a 	sub	r4,r4,r2
   86fb8:	308dc83a 	sub	r6,r6,r2
   86fbc:	d9000a15 	stw	r4,40(sp)
   86fc0:	d9801115 	stw	r6,68(sp)
   86fc4:	d8801017 	ldw	r2,64(sp)
   86fc8:	0080150e 	bge	zero,r2,87020 <_dtoa_r+0x848>
   86fcc:	d8c00b17 	ldw	r3,44(sp)
   86fd0:	1805003a 	cmpeq	r2,r3,zero
   86fd4:	1001c91e 	bne	r2,zero,876fc <_dtoa_r+0xf24>
   86fd8:	04800e0e 	bge	zero,r18,87014 <_dtoa_r+0x83c>
   86fdc:	d9001617 	ldw	r4,88(sp)
   86fe0:	980b883a 	mov	r5,r19
   86fe4:	900d883a 	mov	r6,r18
   86fe8:	008a7200 	call	8a720 <__pow5mult>
   86fec:	d9001617 	ldw	r4,88(sp)
   86ff0:	d9800717 	ldw	r6,28(sp)
   86ff4:	100b883a 	mov	r5,r2
   86ff8:	1027883a 	mov	r19,r2
   86ffc:	008a3fc0 	call	8a3fc <__multiply>
   87000:	d9001617 	ldw	r4,88(sp)
   87004:	d9400717 	ldw	r5,28(sp)
   87008:	1023883a 	mov	r17,r2
   8700c:	008996c0 	call	8996c <_Bfree>
   87010:	dc400715 	stw	r17,28(sp)
   87014:	d9001017 	ldw	r4,64(sp)
   87018:	248dc83a 	sub	r6,r4,r18
   8701c:	30010e1e 	bne	r6,zero,87458 <_dtoa_r+0xc80>
   87020:	d9001617 	ldw	r4,88(sp)
   87024:	04400044 	movi	r17,1
   87028:	880b883a 	mov	r5,r17
   8702c:	008a5e40 	call	8a5e4 <__i2b>
   87030:	d9800917 	ldw	r6,36(sp)
   87034:	1025883a 	mov	r18,r2
   87038:	0180040e 	bge	zero,r6,8704c <_dtoa_r+0x874>
   8703c:	d9001617 	ldw	r4,88(sp)
   87040:	100b883a 	mov	r5,r2
   87044:	008a7200 	call	8a720 <__pow5mult>
   87048:	1025883a 	mov	r18,r2
   8704c:	d8801717 	ldw	r2,92(sp)
   87050:	8880f30e 	bge	r17,r2,87420 <_dtoa_r+0xc48>
   87054:	0023883a 	mov	r17,zero
   87058:	d9800917 	ldw	r6,36(sp)
   8705c:	30019e1e 	bne	r6,zero,876d8 <_dtoa_r+0xf00>
   87060:	00c00044 	movi	r3,1
   87064:	d9000a17 	ldw	r4,40(sp)
   87068:	20c5883a 	add	r2,r4,r3
   8706c:	10c007cc 	andi	r3,r2,31
   87070:	1800841e 	bne	r3,zero,87284 <_dtoa_r+0xaac>
   87074:	00800704 	movi	r2,28
   87078:	d9000a17 	ldw	r4,40(sp)
   8707c:	d9801117 	ldw	r6,68(sp)
   87080:	80a1883a 	add	r16,r16,r2
   87084:	2089883a 	add	r4,r4,r2
   87088:	308d883a 	add	r6,r6,r2
   8708c:	d9000a15 	stw	r4,40(sp)
   87090:	d9801115 	stw	r6,68(sp)
   87094:	d8801117 	ldw	r2,68(sp)
   87098:	0080050e 	bge	zero,r2,870b0 <_dtoa_r+0x8d8>
   8709c:	d9400717 	ldw	r5,28(sp)
   870a0:	d9001617 	ldw	r4,88(sp)
   870a4:	100d883a 	mov	r6,r2
   870a8:	008a2b00 	call	8a2b0 <__lshift>
   870ac:	d8800715 	stw	r2,28(sp)
   870b0:	d8c00a17 	ldw	r3,40(sp)
   870b4:	00c0050e 	bge	zero,r3,870cc <_dtoa_r+0x8f4>
   870b8:	d9001617 	ldw	r4,88(sp)
   870bc:	900b883a 	mov	r5,r18
   870c0:	180d883a 	mov	r6,r3
   870c4:	008a2b00 	call	8a2b0 <__lshift>
   870c8:	1025883a 	mov	r18,r2
   870cc:	d9000c17 	ldw	r4,48(sp)
   870d0:	2005003a 	cmpeq	r2,r4,zero
   870d4:	10016f26 	beq	r2,zero,87694 <_dtoa_r+0xebc>
   870d8:	d9000f17 	ldw	r4,60(sp)
   870dc:	0102170e 	bge	zero,r4,8793c <_dtoa_r+0x1164>
   870e0:	d9800b17 	ldw	r6,44(sp)
   870e4:	3005003a 	cmpeq	r2,r6,zero
   870e8:	1000881e 	bne	r2,zero,8730c <_dtoa_r+0xb34>
   870ec:	0400050e 	bge	zero,r16,87104 <_dtoa_r+0x92c>
   870f0:	d9001617 	ldw	r4,88(sp)
   870f4:	980b883a 	mov	r5,r19
   870f8:	800d883a 	mov	r6,r16
   870fc:	008a2b00 	call	8a2b0 <__lshift>
   87100:	1027883a 	mov	r19,r2
   87104:	8804c03a 	cmpne	r2,r17,zero
   87108:	1002541e 	bne	r2,zero,87a5c <_dtoa_r+0x1284>
   8710c:	980b883a 	mov	r5,r19
   87110:	dd800517 	ldw	r22,20(sp)
   87114:	dcc00615 	stw	r19,24(sp)
   87118:	a700004c 	andi	fp,r20,1
   8711c:	2827883a 	mov	r19,r5
   87120:	d9000717 	ldw	r4,28(sp)
   87124:	900b883a 	mov	r5,r18
   87128:	00865c00 	call	865c0 <quorem>
   8712c:	d9000717 	ldw	r4,28(sp)
   87130:	d9400617 	ldw	r5,24(sp)
   87134:	1023883a 	mov	r17,r2
   87138:	8dc00c04 	addi	r23,r17,48
   8713c:	0089ac80 	call	89ac8 <__mcmp>
   87140:	d9001617 	ldw	r4,88(sp)
   87144:	900b883a 	mov	r5,r18
   87148:	980d883a 	mov	r6,r19
   8714c:	1029883a 	mov	r20,r2
   87150:	008a1240 	call	8a124 <__mdiff>
   87154:	102b883a 	mov	r21,r2
   87158:	10800317 	ldw	r2,12(r2)
   8715c:	1001281e 	bne	r2,zero,87600 <_dtoa_r+0xe28>
   87160:	d9000717 	ldw	r4,28(sp)
   87164:	a80b883a 	mov	r5,r21
   87168:	0089ac80 	call	89ac8 <__mcmp>
   8716c:	d9001617 	ldw	r4,88(sp)
   87170:	1021883a 	mov	r16,r2
   87174:	a80b883a 	mov	r5,r21
   87178:	008996c0 	call	8996c <_Bfree>
   8717c:	8000041e 	bne	r16,zero,87190 <_dtoa_r+0x9b8>
   87180:	d8801717 	ldw	r2,92(sp)
   87184:	1000021e 	bne	r2,zero,87190 <_dtoa_r+0x9b8>
   87188:	e004c03a 	cmpne	r2,fp,zero
   8718c:	10011726 	beq	r2,zero,875ec <_dtoa_r+0xe14>
   87190:	a0010616 	blt	r20,zero,875ac <_dtoa_r+0xdd4>
   87194:	a000041e 	bne	r20,zero,871a8 <_dtoa_r+0x9d0>
   87198:	d8c01717 	ldw	r3,92(sp)
   8719c:	1800021e 	bne	r3,zero,871a8 <_dtoa_r+0x9d0>
   871a0:	e004c03a 	cmpne	r2,fp,zero
   871a4:	10010126 	beq	r2,zero,875ac <_dtoa_r+0xdd4>
   871a8:	04023d16 	blt	zero,r16,87aa0 <_dtoa_r+0x12c8>
   871ac:	b5c00005 	stb	r23,0(r22)
   871b0:	d9800517 	ldw	r6,20(sp)
   871b4:	d9000f17 	ldw	r4,60(sp)
   871b8:	b5800044 	addi	r22,r22,1
   871bc:	3105883a 	add	r2,r6,r4
   871c0:	b0806526 	beq	r22,r2,87358 <_dtoa_r+0xb80>
   871c4:	d9400717 	ldw	r5,28(sp)
   871c8:	d9001617 	ldw	r4,88(sp)
   871cc:	01800284 	movi	r6,10
   871d0:	000f883a 	mov	r7,zero
   871d4:	008a6200 	call	8a620 <__multadd>
   871d8:	d8800715 	stw	r2,28(sp)
   871dc:	d8800617 	ldw	r2,24(sp)
   871e0:	14c10c26 	beq	r2,r19,87614 <_dtoa_r+0xe3c>
   871e4:	d9400617 	ldw	r5,24(sp)
   871e8:	d9001617 	ldw	r4,88(sp)
   871ec:	01800284 	movi	r6,10
   871f0:	000f883a 	mov	r7,zero
   871f4:	008a6200 	call	8a620 <__multadd>
   871f8:	d9001617 	ldw	r4,88(sp)
   871fc:	980b883a 	mov	r5,r19
   87200:	01800284 	movi	r6,10
   87204:	000f883a 	mov	r7,zero
   87208:	d8800615 	stw	r2,24(sp)
   8720c:	008a6200 	call	8a620 <__multadd>
   87210:	1027883a 	mov	r19,r2
   87214:	003fc206 	br	87120 <_dtoa_r+0x948>
   87218:	2445c83a 	sub	r2,r4,r17
   8721c:	a088983a 	sll	r4,r20,r2
   87220:	003e4b06 	br	86b50 <_dtoa_r+0x378>
   87224:	01bfffc4 	movi	r6,-1
   87228:	00800044 	movi	r2,1
   8722c:	d9800e15 	stw	r6,56(sp)
   87230:	d9800f15 	stw	r6,60(sp)
   87234:	d8800b15 	stw	r2,44(sp)
   87238:	d8c01617 	ldw	r3,88(sp)
   8723c:	008005c4 	movi	r2,23
   87240:	18001115 	stw	zero,68(r3)
   87244:	1580082e 	bgeu	r2,r22,87268 <_dtoa_r+0xa90>
   87248:	00c00104 	movi	r3,4
   8724c:	0009883a 	mov	r4,zero
   87250:	18c7883a 	add	r3,r3,r3
   87254:	18800504 	addi	r2,r3,20
   87258:	21000044 	addi	r4,r4,1
   8725c:	b0bffc2e 	bgeu	r22,r2,87250 <_dtoa_r+0xa78>
   87260:	d9801617 	ldw	r6,88(sp)
   87264:	31001115 	stw	r4,68(r6)
   87268:	dc000f17 	ldw	r16,60(sp)
   8726c:	003e4b06 	br	86b9c <_dtoa_r+0x3c4>
   87270:	d9801717 	ldw	r6,92(sp)
   87274:	0023883a 	mov	r17,zero
   87278:	31bfff04 	addi	r6,r6,-4
   8727c:	d9801715 	stw	r6,92(sp)
   87280:	003df806 	br	86a64 <_dtoa_r+0x28c>
   87284:	00800804 	movi	r2,32
   87288:	10c9c83a 	sub	r4,r2,r3
   8728c:	00c00104 	movi	r3,4
   87290:	19005a16 	blt	r3,r4,873fc <_dtoa_r+0xc24>
   87294:	008000c4 	movi	r2,3
   87298:	113f7e16 	blt	r2,r4,87094 <_dtoa_r+0x8bc>
   8729c:	20800704 	addi	r2,r4,28
   872a0:	003f7506 	br	87078 <_dtoa_r+0x8a0>
   872a4:	d9801717 	ldw	r6,92(sp)
   872a8:	00800044 	movi	r2,1
   872ac:	1180a10e 	bge	r2,r6,87534 <_dtoa_r+0xd5c>
   872b0:	d9800f17 	ldw	r6,60(sp)
   872b4:	d8c01017 	ldw	r3,64(sp)
   872b8:	30bfffc4 	addi	r2,r6,-1
   872bc:	1881c616 	blt	r3,r2,879d8 <_dtoa_r+0x1200>
   872c0:	18a5c83a 	sub	r18,r3,r2
   872c4:	d8800f17 	ldw	r2,60(sp)
   872c8:	10026216 	blt	r2,zero,87c54 <_dtoa_r+0x147c>
   872cc:	dc001117 	ldw	r16,68(sp)
   872d0:	1007883a 	mov	r3,r2
   872d4:	d9800a17 	ldw	r6,40(sp)
   872d8:	d8801117 	ldw	r2,68(sp)
   872dc:	d9001617 	ldw	r4,88(sp)
   872e0:	30cd883a 	add	r6,r6,r3
   872e4:	10c5883a 	add	r2,r2,r3
   872e8:	01400044 	movi	r5,1
   872ec:	d9800a15 	stw	r6,40(sp)
   872f0:	d8801115 	stw	r2,68(sp)
   872f4:	008a5e40 	call	8a5e4 <__i2b>
   872f8:	1027883a 	mov	r19,r2
   872fc:	003f2506 	br	86f94 <_dtoa_r+0x7bc>
   87300:	00c00274 	movhi	r3,9
   87304:	18fd2404 	addi	r3,r3,-2928
   87308:	003d6706 	br	868a8 <_dtoa_r+0xd0>
   8730c:	dd800517 	ldw	r22,20(sp)
   87310:	04000044 	movi	r16,1
   87314:	00000706 	br	87334 <_dtoa_r+0xb5c>
   87318:	d9400717 	ldw	r5,28(sp)
   8731c:	d9001617 	ldw	r4,88(sp)
   87320:	01800284 	movi	r6,10
   87324:	000f883a 	mov	r7,zero
   87328:	008a6200 	call	8a620 <__multadd>
   8732c:	d8800715 	stw	r2,28(sp)
   87330:	84000044 	addi	r16,r16,1
   87334:	d9000717 	ldw	r4,28(sp)
   87338:	900b883a 	mov	r5,r18
   8733c:	00865c00 	call	865c0 <quorem>
   87340:	15c00c04 	addi	r23,r2,48
   87344:	b5c00005 	stb	r23,0(r22)
   87348:	d8c00f17 	ldw	r3,60(sp)
   8734c:	b5800044 	addi	r22,r22,1
   87350:	80fff116 	blt	r16,r3,87318 <_dtoa_r+0xb40>
   87354:	d8000615 	stw	zero,24(sp)
   87358:	d9400717 	ldw	r5,28(sp)
   8735c:	d9001617 	ldw	r4,88(sp)
   87360:	01800044 	movi	r6,1
   87364:	008a2b00 	call	8a2b0 <__lshift>
   87368:	1009883a 	mov	r4,r2
   8736c:	900b883a 	mov	r5,r18
   87370:	d8800715 	stw	r2,28(sp)
   87374:	0089ac80 	call	89ac8 <__mcmp>
   87378:	00803c0e 	bge	zero,r2,8746c <_dtoa_r+0xc94>
   8737c:	b009883a 	mov	r4,r22
   87380:	213fffc4 	addi	r4,r4,-1
   87384:	21400003 	ldbu	r5,0(r4)
   87388:	00800e44 	movi	r2,57
   8738c:	28c03fcc 	andi	r3,r5,255
   87390:	18c0201c 	xori	r3,r3,128
   87394:	18ffe004 	addi	r3,r3,-128
   87398:	1881981e 	bne	r3,r2,879fc <_dtoa_r+0x1224>
   8739c:	d9800517 	ldw	r6,20(sp)
   873a0:	21bff71e 	bne	r4,r6,87380 <_dtoa_r+0xba8>
   873a4:	d8800d17 	ldw	r2,52(sp)
   873a8:	37000044 	addi	fp,r6,1
   873ac:	10800044 	addi	r2,r2,1
   873b0:	d8800d15 	stw	r2,52(sp)
   873b4:	00800c44 	movi	r2,49
   873b8:	30800005 	stb	r2,0(r6)
   873bc:	d9001617 	ldw	r4,88(sp)
   873c0:	900b883a 	mov	r5,r18
   873c4:	008996c0 	call	8996c <_Bfree>
   873c8:	983ecd26 	beq	r19,zero,86f00 <_dtoa_r+0x728>
   873cc:	d8c00617 	ldw	r3,24(sp)
   873d0:	18000426 	beq	r3,zero,873e4 <_dtoa_r+0xc0c>
   873d4:	1cc00326 	beq	r3,r19,873e4 <_dtoa_r+0xc0c>
   873d8:	d9001617 	ldw	r4,88(sp)
   873dc:	180b883a 	mov	r5,r3
   873e0:	008996c0 	call	8996c <_Bfree>
   873e4:	d9001617 	ldw	r4,88(sp)
   873e8:	980b883a 	mov	r5,r19
   873ec:	008996c0 	call	8996c <_Bfree>
   873f0:	003ec306 	br	86f00 <_dtoa_r+0x728>
   873f4:	1805883a 	mov	r2,r3
   873f8:	003eeb06 	br	86fa8 <_dtoa_r+0x7d0>
   873fc:	d9800a17 	ldw	r6,40(sp)
   87400:	d8c01117 	ldw	r3,68(sp)
   87404:	20bfff04 	addi	r2,r4,-4
   87408:	308d883a 	add	r6,r6,r2
   8740c:	1887883a 	add	r3,r3,r2
   87410:	80a1883a 	add	r16,r16,r2
   87414:	d9800a15 	stw	r6,40(sp)
   87418:	d8c01115 	stw	r3,68(sp)
   8741c:	003f1d06 	br	87094 <_dtoa_r+0x8bc>
   87420:	a03f0c1e 	bne	r20,zero,87054 <_dtoa_r+0x87c>
   87424:	00800434 	movhi	r2,16
   87428:	10bfffc4 	addi	r2,r2,-1
   8742c:	a884703a 	and	r2,r21,r2
   87430:	103f081e 	bne	r2,zero,87054 <_dtoa_r+0x87c>
   87434:	a89ffc2c 	andhi	r2,r21,32752
   87438:	103f0626 	beq	r2,zero,87054 <_dtoa_r+0x87c>
   8743c:	d8c01117 	ldw	r3,68(sp)
   87440:	d9000a17 	ldw	r4,40(sp)
   87444:	18c00044 	addi	r3,r3,1
   87448:	21000044 	addi	r4,r4,1
   8744c:	d8c01115 	stw	r3,68(sp)
   87450:	d9000a15 	stw	r4,40(sp)
   87454:	003f0006 	br	87058 <_dtoa_r+0x880>
   87458:	d9400717 	ldw	r5,28(sp)
   8745c:	d9001617 	ldw	r4,88(sp)
   87460:	008a7200 	call	8a720 <__pow5mult>
   87464:	d8800715 	stw	r2,28(sp)
   87468:	003eed06 	br	87020 <_dtoa_r+0x848>
   8746c:	1000021e 	bne	r2,zero,87478 <_dtoa_r+0xca0>
   87470:	b880004c 	andi	r2,r23,1
   87474:	103fc11e 	bne	r2,zero,8737c <_dtoa_r+0xba4>
   87478:	b5bfffc4 	addi	r22,r22,-1
   8747c:	b0c00007 	ldb	r3,0(r22)
   87480:	00800c04 	movi	r2,48
   87484:	18bffc26 	beq	r3,r2,87478 <_dtoa_r+0xca0>
   87488:	b7000044 	addi	fp,r22,1
   8748c:	003fcb06 	br	873bc <_dtoa_r+0xbe4>
   87490:	d9800d17 	ldw	r6,52(sp)
   87494:	018fc83a 	sub	r7,zero,r6
   87498:	3801f726 	beq	r7,zero,87c78 <_dtoa_r+0x14a0>
   8749c:	398003cc 	andi	r6,r7,15
   874a0:	300c90fa 	slli	r6,r6,3
   874a4:	01400274 	movhi	r5,9
   874a8:	297d4204 	addi	r5,r5,-2808
   874ac:	d9001217 	ldw	r4,72(sp)
   874b0:	314d883a 	add	r6,r6,r5
   874b4:	30c00117 	ldw	r3,4(r6)
   874b8:	30800017 	ldw	r2,0(r6)
   874bc:	d9401317 	ldw	r5,76(sp)
   874c0:	3821d13a 	srai	r16,r7,4
   874c4:	100d883a 	mov	r6,r2
   874c8:	180f883a 	mov	r7,r3
   874cc:	00836400 	call	83640 <__muldf3>
   874d0:	1011883a 	mov	r8,r2
   874d4:	1813883a 	mov	r9,r3
   874d8:	1029883a 	mov	r20,r2
   874dc:	182b883a 	mov	r21,r3
   874e0:	8001e526 	beq	r16,zero,87c78 <_dtoa_r+0x14a0>
   874e4:	05800084 	movi	r22,2
   874e8:	04400274 	movhi	r17,9
   874ec:	8c7d7404 	addi	r17,r17,-2608
   874f0:	8080004c 	andi	r2,r16,1
   874f4:	1005003a 	cmpeq	r2,r2,zero
   874f8:	1000081e 	bne	r2,zero,8751c <_dtoa_r+0xd44>
   874fc:	89800017 	ldw	r6,0(r17)
   87500:	89c00117 	ldw	r7,4(r17)
   87504:	480b883a 	mov	r5,r9
   87508:	4009883a 	mov	r4,r8
   8750c:	00836400 	call	83640 <__muldf3>
   87510:	1011883a 	mov	r8,r2
   87514:	b5800044 	addi	r22,r22,1
   87518:	1813883a 	mov	r9,r3
   8751c:	8021d07a 	srai	r16,r16,1
   87520:	8c400204 	addi	r17,r17,8
   87524:	803ff21e 	bne	r16,zero,874f0 <_dtoa_r+0xd18>
   87528:	4029883a 	mov	r20,r8
   8752c:	482b883a 	mov	r21,r9
   87530:	003dca06 	br	86c5c <_dtoa_r+0x484>
   87534:	d9000817 	ldw	r4,32(sp)
   87538:	2005003a 	cmpeq	r2,r4,zero
   8753c:	1001f61e 	bne	r2,zero,87d18 <_dtoa_r+0x1540>
   87540:	dc001117 	ldw	r16,68(sp)
   87544:	dc801017 	ldw	r18,64(sp)
   87548:	18c10cc4 	addi	r3,r3,1075
   8754c:	003f6106 	br	872d4 <_dtoa_r+0xafc>
   87550:	d8000b15 	stw	zero,44(sp)
   87554:	d9802617 	ldw	r6,152(sp)
   87558:	d8c00d17 	ldw	r3,52(sp)
   8755c:	30800044 	addi	r2,r6,1
   87560:	18ad883a 	add	r22,r3,r2
   87564:	b13fffc4 	addi	r4,r22,-1
   87568:	d9000e15 	stw	r4,56(sp)
   8756c:	0581f60e 	bge	zero,r22,87d48 <_dtoa_r+0x1570>
   87570:	dd800f15 	stw	r22,60(sp)
   87574:	003f3006 	br	87238 <_dtoa_r+0xa60>
   87578:	d8000b15 	stw	zero,44(sp)
   8757c:	d9002617 	ldw	r4,152(sp)
   87580:	0101eb0e 	bge	zero,r4,87d30 <_dtoa_r+0x1558>
   87584:	202d883a 	mov	r22,r4
   87588:	d9000e15 	stw	r4,56(sp)
   8758c:	d9000f15 	stw	r4,60(sp)
   87590:	003f2906 	br	87238 <_dtoa_r+0xa60>
   87594:	01800044 	movi	r6,1
   87598:	d9800b15 	stw	r6,44(sp)
   8759c:	003ff706 	br	8757c <_dtoa_r+0xda4>
   875a0:	01000044 	movi	r4,1
   875a4:	d9000b15 	stw	r4,44(sp)
   875a8:	003fea06 	br	87554 <_dtoa_r+0xd7c>
   875ac:	04000c0e 	bge	zero,r16,875e0 <_dtoa_r+0xe08>
   875b0:	d9400717 	ldw	r5,28(sp)
   875b4:	d9001617 	ldw	r4,88(sp)
   875b8:	01800044 	movi	r6,1
   875bc:	008a2b00 	call	8a2b0 <__lshift>
   875c0:	1009883a 	mov	r4,r2
   875c4:	900b883a 	mov	r5,r18
   875c8:	d8800715 	stw	r2,28(sp)
   875cc:	0089ac80 	call	89ac8 <__mcmp>
   875d0:	0081e00e 	bge	zero,r2,87d54 <_dtoa_r+0x157c>
   875d4:	bdc00044 	addi	r23,r23,1
   875d8:	00800e84 	movi	r2,58
   875dc:	b881a226 	beq	r23,r2,87c68 <_dtoa_r+0x1490>
   875e0:	b7000044 	addi	fp,r22,1
   875e4:	b5c00005 	stb	r23,0(r22)
   875e8:	003f7406 	br	873bc <_dtoa_r+0xbe4>
   875ec:	00800e44 	movi	r2,57
   875f0:	b8819d26 	beq	r23,r2,87c68 <_dtoa_r+0x1490>
   875f4:	053ffa0e 	bge	zero,r20,875e0 <_dtoa_r+0xe08>
   875f8:	8dc00c44 	addi	r23,r17,49
   875fc:	003ff806 	br	875e0 <_dtoa_r+0xe08>
   87600:	d9001617 	ldw	r4,88(sp)
   87604:	a80b883a 	mov	r5,r21
   87608:	04000044 	movi	r16,1
   8760c:	008996c0 	call	8996c <_Bfree>
   87610:	003edf06 	br	87190 <_dtoa_r+0x9b8>
   87614:	d9001617 	ldw	r4,88(sp)
   87618:	980b883a 	mov	r5,r19
   8761c:	01800284 	movi	r6,10
   87620:	000f883a 	mov	r7,zero
   87624:	008a6200 	call	8a620 <__multadd>
   87628:	1027883a 	mov	r19,r2
   8762c:	d8800615 	stw	r2,24(sp)
   87630:	003ebb06 	br	87120 <_dtoa_r+0x948>
   87634:	d9801117 	ldw	r6,68(sp)
   87638:	d8800d17 	ldw	r2,52(sp)
   8763c:	d8000915 	stw	zero,36(sp)
   87640:	308dc83a 	sub	r6,r6,r2
   87644:	0087c83a 	sub	r3,zero,r2
   87648:	d9801115 	stw	r6,68(sp)
   8764c:	d8c01015 	stw	r3,64(sp)
   87650:	003cfe06 	br	86a4c <_dtoa_r+0x274>
   87654:	018dc83a 	sub	r6,zero,r6
   87658:	d9801115 	stw	r6,68(sp)
   8765c:	d8000a15 	stw	zero,40(sp)
   87660:	003cf306 	br	86a30 <_dtoa_r+0x258>
   87664:	d9000d17 	ldw	r4,52(sp)
   87668:	0083b9c0 	call	83b9c <__floatsidf>
   8766c:	880b883a 	mov	r5,r17
   87670:	8009883a 	mov	r4,r16
   87674:	180f883a 	mov	r7,r3
   87678:	100d883a 	mov	r6,r2
   8767c:	008c5280 	call	8c528 <__nedf2>
   87680:	103ce126 	beq	r2,zero,86a08 <_dtoa_r+0x230>
   87684:	d9800d17 	ldw	r6,52(sp)
   87688:	31bfffc4 	addi	r6,r6,-1
   8768c:	d9800d15 	stw	r6,52(sp)
   87690:	003cdd06 	br	86a08 <_dtoa_r+0x230>
   87694:	d9000717 	ldw	r4,28(sp)
   87698:	900b883a 	mov	r5,r18
   8769c:	0089ac80 	call	89ac8 <__mcmp>
   876a0:	103e8d0e 	bge	r2,zero,870d8 <_dtoa_r+0x900>
   876a4:	d9400717 	ldw	r5,28(sp)
   876a8:	d9001617 	ldw	r4,88(sp)
   876ac:	01800284 	movi	r6,10
   876b0:	000f883a 	mov	r7,zero
   876b4:	008a6200 	call	8a620 <__multadd>
   876b8:	d9800d17 	ldw	r6,52(sp)
   876bc:	d8800715 	stw	r2,28(sp)
   876c0:	31bfffc4 	addi	r6,r6,-1
   876c4:	d9800d15 	stw	r6,52(sp)
   876c8:	b001a71e 	bne	r22,zero,87d68 <_dtoa_r+0x1590>
   876cc:	d8800e17 	ldw	r2,56(sp)
   876d0:	d8800f15 	stw	r2,60(sp)
   876d4:	003e8006 	br	870d8 <_dtoa_r+0x900>
   876d8:	90800417 	ldw	r2,16(r18)
   876dc:	1085883a 	add	r2,r2,r2
   876e0:	1085883a 	add	r2,r2,r2
   876e4:	1485883a 	add	r2,r2,r18
   876e8:	11000417 	ldw	r4,16(r2)
   876ec:	00899940 	call	89994 <__hi0bits>
   876f0:	00c00804 	movi	r3,32
   876f4:	1887c83a 	sub	r3,r3,r2
   876f8:	003e5a06 	br	87064 <_dtoa_r+0x88c>
   876fc:	d9400717 	ldw	r5,28(sp)
   87700:	d9801017 	ldw	r6,64(sp)
   87704:	d9001617 	ldw	r4,88(sp)
   87708:	008a7200 	call	8a720 <__pow5mult>
   8770c:	d8800715 	stw	r2,28(sp)
   87710:	003e4306 	br	87020 <_dtoa_r+0x848>
   87714:	d9800f17 	ldw	r6,60(sp)
   87718:	d8800d17 	ldw	r2,52(sp)
   8771c:	d9800315 	stw	r6,12(sp)
   87720:	d8800415 	stw	r2,16(sp)
   87724:	d8c00b17 	ldw	r3,44(sp)
   87728:	1805003a 	cmpeq	r2,r3,zero
   8772c:	1000e21e 	bne	r2,zero,87ab8 <_dtoa_r+0x12e0>
   87730:	d9000317 	ldw	r4,12(sp)
   87734:	0005883a 	mov	r2,zero
   87738:	00cff834 	movhi	r3,16352
   8773c:	200c90fa 	slli	r6,r4,3
   87740:	01000274 	movhi	r4,9
   87744:	213d4204 	addi	r4,r4,-2808
   87748:	180b883a 	mov	r5,r3
   8774c:	310d883a 	add	r6,r6,r4
   87750:	327fff17 	ldw	r9,-4(r6)
   87754:	323ffe17 	ldw	r8,-8(r6)
   87758:	1009883a 	mov	r4,r2
   8775c:	480f883a 	mov	r7,r9
   87760:	400d883a 	mov	r6,r8
   87764:	008c2d00 	call	8c2d0 <__divdf3>
   87768:	180b883a 	mov	r5,r3
   8776c:	b00d883a 	mov	r6,r22
   87770:	b80f883a 	mov	r7,r23
   87774:	1009883a 	mov	r4,r2
   87778:	008354c0 	call	8354c <__subdf3>
   8777c:	a80b883a 	mov	r5,r21
   87780:	a009883a 	mov	r4,r20
   87784:	d8c01915 	stw	r3,100(sp)
   87788:	d8801815 	stw	r2,96(sp)
   8778c:	0083c940 	call	83c94 <__fixdfsi>
   87790:	1009883a 	mov	r4,r2
   87794:	1027883a 	mov	r19,r2
   87798:	0083b9c0 	call	83b9c <__floatsidf>
   8779c:	a80b883a 	mov	r5,r21
   877a0:	a009883a 	mov	r4,r20
   877a4:	180f883a 	mov	r7,r3
   877a8:	100d883a 	mov	r6,r2
   877ac:	008354c0 	call	8354c <__subdf3>
   877b0:	d9801817 	ldw	r6,96(sp)
   877b4:	1823883a 	mov	r17,r3
   877b8:	d8801415 	stw	r2,80(sp)
   877bc:	302d883a 	mov	r22,r6
   877c0:	d9800517 	ldw	r6,20(sp)
   877c4:	9cc00c04 	addi	r19,r19,48
   877c8:	dc401515 	stw	r17,84(sp)
   877cc:	d8c01917 	ldw	r3,100(sp)
   877d0:	34c00005 	stb	r19,0(r6)
   877d4:	d8800517 	ldw	r2,20(sp)
   877d8:	d9401917 	ldw	r5,100(sp)
   877dc:	d9801417 	ldw	r6,80(sp)
   877e0:	b009883a 	mov	r4,r22
   877e4:	880f883a 	mov	r7,r17
   877e8:	182f883a 	mov	r23,r3
   877ec:	17000044 	addi	fp,r2,1
   877f0:	0083a8c0 	call	83a8c <__gtdf2>
   877f4:	00804e16 	blt	zero,r2,87930 <_dtoa_r+0x1158>
   877f8:	d9801417 	ldw	r6,80(sp)
   877fc:	0005883a 	mov	r2,zero
   87800:	00cffc34 	movhi	r3,16368
   87804:	180b883a 	mov	r5,r3
   87808:	880f883a 	mov	r7,r17
   8780c:	1009883a 	mov	r4,r2
   87810:	008354c0 	call	8354c <__subdf3>
   87814:	d9401917 	ldw	r5,100(sp)
   87818:	180f883a 	mov	r7,r3
   8781c:	b009883a 	mov	r4,r22
   87820:	100d883a 	mov	r6,r2
   87824:	0083a8c0 	call	83a8c <__gtdf2>
   87828:	00bda216 	blt	zero,r2,86eb4 <_dtoa_r+0x6dc>
   8782c:	d8c00317 	ldw	r3,12(sp)
   87830:	00800044 	movi	r2,1
   87834:	10c01216 	blt	r2,r3,87880 <_dtoa_r+0x10a8>
   87838:	003d4506 	br	86d50 <_dtoa_r+0x578>
   8783c:	d9801417 	ldw	r6,80(sp)
   87840:	0005883a 	mov	r2,zero
   87844:	00cffc34 	movhi	r3,16368
   87848:	180b883a 	mov	r5,r3
   8784c:	880f883a 	mov	r7,r17
   87850:	1009883a 	mov	r4,r2
   87854:	008354c0 	call	8354c <__subdf3>
   87858:	d9c01b17 	ldw	r7,108(sp)
   8785c:	180b883a 	mov	r5,r3
   87860:	1009883a 	mov	r4,r2
   87864:	b00d883a 	mov	r6,r22
   87868:	008c5b00 	call	8c5b0 <__ltdf2>
   8786c:	103d9116 	blt	r2,zero,86eb4 <_dtoa_r+0x6dc>
   87870:	d9800517 	ldw	r6,20(sp)
   87874:	d9000317 	ldw	r4,12(sp)
   87878:	3105883a 	add	r2,r6,r4
   8787c:	e0bd3426 	beq	fp,r2,86d50 <_dtoa_r+0x578>
   87880:	04500934 	movhi	r17,16420
   87884:	0021883a 	mov	r16,zero
   87888:	b80b883a 	mov	r5,r23
   8788c:	b009883a 	mov	r4,r22
   87890:	800d883a 	mov	r6,r16
   87894:	880f883a 	mov	r7,r17
   87898:	00836400 	call	83640 <__muldf3>
   8789c:	d9401517 	ldw	r5,84(sp)
   878a0:	d9001417 	ldw	r4,80(sp)
   878a4:	880f883a 	mov	r7,r17
   878a8:	000d883a 	mov	r6,zero
   878ac:	d8801a15 	stw	r2,104(sp)
   878b0:	d8c01b15 	stw	r3,108(sp)
   878b4:	00836400 	call	83640 <__muldf3>
   878b8:	180b883a 	mov	r5,r3
   878bc:	1009883a 	mov	r4,r2
   878c0:	1823883a 	mov	r17,r3
   878c4:	1021883a 	mov	r16,r2
   878c8:	0083c940 	call	83c94 <__fixdfsi>
   878cc:	1009883a 	mov	r4,r2
   878d0:	102b883a 	mov	r21,r2
   878d4:	0083b9c0 	call	83b9c <__floatsidf>
   878d8:	880b883a 	mov	r5,r17
   878dc:	8009883a 	mov	r4,r16
   878e0:	180f883a 	mov	r7,r3
   878e4:	100d883a 	mov	r6,r2
   878e8:	008354c0 	call	8354c <__subdf3>
   878ec:	1021883a 	mov	r16,r2
   878f0:	d9001b17 	ldw	r4,108(sp)
   878f4:	1823883a 	mov	r17,r3
   878f8:	dc001415 	stw	r16,80(sp)
   878fc:	ad400c04 	addi	r21,r21,48
   87900:	dc401515 	stw	r17,84(sp)
   87904:	d8801a17 	ldw	r2,104(sp)
   87908:	e5400005 	stb	r21,0(fp)
   8790c:	202f883a 	mov	r23,r4
   87910:	d9c01b17 	ldw	r7,108(sp)
   87914:	d9001417 	ldw	r4,80(sp)
   87918:	880b883a 	mov	r5,r17
   8791c:	100d883a 	mov	r6,r2
   87920:	102d883a 	mov	r22,r2
   87924:	e7000044 	addi	fp,fp,1
   87928:	008c5b00 	call	8c5b0 <__ltdf2>
   8792c:	103fc30e 	bge	r2,zero,8783c <_dtoa_r+0x1064>
   87930:	d9000417 	ldw	r4,16(sp)
   87934:	d9000d15 	stw	r4,52(sp)
   87938:	003d7106 	br	86f00 <_dtoa_r+0x728>
   8793c:	d9801717 	ldw	r6,92(sp)
   87940:	00800084 	movi	r2,2
   87944:	11bde60e 	bge	r2,r6,870e0 <_dtoa_r+0x908>
   87948:	203cfb1e 	bne	r4,zero,86d38 <_dtoa_r+0x560>
   8794c:	d9001617 	ldw	r4,88(sp)
   87950:	900b883a 	mov	r5,r18
   87954:	01800144 	movi	r6,5
   87958:	000f883a 	mov	r7,zero
   8795c:	008a6200 	call	8a620 <__multadd>
   87960:	d9000717 	ldw	r4,28(sp)
   87964:	100b883a 	mov	r5,r2
   87968:	1025883a 	mov	r18,r2
   8796c:	0089ac80 	call	89ac8 <__mcmp>
   87970:	00bcf10e 	bge	zero,r2,86d38 <_dtoa_r+0x560>
   87974:	d8c00d17 	ldw	r3,52(sp)
   87978:	d9000517 	ldw	r4,20(sp)
   8797c:	d8000615 	stw	zero,24(sp)
   87980:	18c00044 	addi	r3,r3,1
   87984:	d8c00d15 	stw	r3,52(sp)
   87988:	00800c44 	movi	r2,49
   8798c:	27000044 	addi	fp,r4,1
   87990:	20800005 	stb	r2,0(r4)
   87994:	003e8906 	br	873bc <_dtoa_r+0xbe4>
   87998:	d8c00517 	ldw	r3,20(sp)
   8799c:	003bc206 	br	868a8 <_dtoa_r+0xd0>
   879a0:	01800274 	movhi	r6,9
   879a4:	31bd7404 	addi	r6,r6,-2608
   879a8:	30c00917 	ldw	r3,36(r6)
   879ac:	30800817 	ldw	r2,32(r6)
   879b0:	d9001217 	ldw	r4,72(sp)
   879b4:	d9401317 	ldw	r5,76(sp)
   879b8:	180f883a 	mov	r7,r3
   879bc:	100d883a 	mov	r6,r2
   879c0:	008c2d00 	call	8c2d0 <__divdf3>
   879c4:	948003cc 	andi	r18,r18,15
   879c8:	058000c4 	movi	r22,3
   879cc:	1029883a 	mov	r20,r2
   879d0:	182b883a 	mov	r21,r3
   879d4:	003c8906 	br	86bfc <_dtoa_r+0x424>
   879d8:	d9001017 	ldw	r4,64(sp)
   879dc:	d9800917 	ldw	r6,36(sp)
   879e0:	0025883a 	mov	r18,zero
   879e4:	1105c83a 	sub	r2,r2,r4
   879e8:	2089883a 	add	r4,r4,r2
   879ec:	308d883a 	add	r6,r6,r2
   879f0:	d9001015 	stw	r4,64(sp)
   879f4:	d9800915 	stw	r6,36(sp)
   879f8:	003e3206 	br	872c4 <_dtoa_r+0xaec>
   879fc:	28800044 	addi	r2,r5,1
   87a00:	27000044 	addi	fp,r4,1
   87a04:	20800005 	stb	r2,0(r4)
   87a08:	003e6c06 	br	873bc <_dtoa_r+0xbe4>
   87a0c:	d8800f17 	ldw	r2,60(sp)
   87a10:	00bce016 	blt	zero,r2,86d94 <_dtoa_r+0x5bc>
   87a14:	d9800f17 	ldw	r6,60(sp)
   87a18:	303cc51e 	bne	r6,zero,86d30 <_dtoa_r+0x558>
   87a1c:	0005883a 	mov	r2,zero
   87a20:	00d00534 	movhi	r3,16404
   87a24:	980b883a 	mov	r5,r19
   87a28:	180f883a 	mov	r7,r3
   87a2c:	9009883a 	mov	r4,r18
   87a30:	100d883a 	mov	r6,r2
   87a34:	00836400 	call	83640 <__muldf3>
   87a38:	180b883a 	mov	r5,r3
   87a3c:	a80f883a 	mov	r7,r21
   87a40:	1009883a 	mov	r4,r2
   87a44:	a00d883a 	mov	r6,r20
   87a48:	0083b140 	call	83b14 <__gedf2>
   87a4c:	103cb80e 	bge	r2,zero,86d30 <_dtoa_r+0x558>
   87a50:	0027883a 	mov	r19,zero
   87a54:	0025883a 	mov	r18,zero
   87a58:	003fc606 	br	87974 <_dtoa_r+0x119c>
   87a5c:	99400117 	ldw	r5,4(r19)
   87a60:	d9001617 	ldw	r4,88(sp)
   87a64:	0089eec0 	call	89eec <_Balloc>
   87a68:	99800417 	ldw	r6,16(r19)
   87a6c:	11000304 	addi	r4,r2,12
   87a70:	99400304 	addi	r5,r19,12
   87a74:	318d883a 	add	r6,r6,r6
   87a78:	318d883a 	add	r6,r6,r6
   87a7c:	31800204 	addi	r6,r6,8
   87a80:	1023883a 	mov	r17,r2
   87a84:	00897540 	call	89754 <memcpy>
   87a88:	d9001617 	ldw	r4,88(sp)
   87a8c:	880b883a 	mov	r5,r17
   87a90:	01800044 	movi	r6,1
   87a94:	008a2b00 	call	8a2b0 <__lshift>
   87a98:	100b883a 	mov	r5,r2
   87a9c:	003d9c06 	br	87110 <_dtoa_r+0x938>
   87aa0:	00800e44 	movi	r2,57
   87aa4:	b8807026 	beq	r23,r2,87c68 <_dtoa_r+0x1490>
   87aa8:	b8800044 	addi	r2,r23,1
   87aac:	b7000044 	addi	fp,r22,1
   87ab0:	b0800005 	stb	r2,0(r22)
   87ab4:	003e4106 	br	873bc <_dtoa_r+0xbe4>
   87ab8:	d8800317 	ldw	r2,12(sp)
   87abc:	01800274 	movhi	r6,9
   87ac0:	31bd4204 	addi	r6,r6,-2808
   87ac4:	b009883a 	mov	r4,r22
   87ac8:	100e90fa 	slli	r7,r2,3
   87acc:	b80b883a 	mov	r5,r23
   87ad0:	398f883a 	add	r7,r7,r6
   87ad4:	38bffe17 	ldw	r2,-8(r7)
   87ad8:	d9800517 	ldw	r6,20(sp)
   87adc:	38ffff17 	ldw	r3,-4(r7)
   87ae0:	37000044 	addi	fp,r6,1
   87ae4:	180f883a 	mov	r7,r3
   87ae8:	100d883a 	mov	r6,r2
   87aec:	00836400 	call	83640 <__muldf3>
   87af0:	a80b883a 	mov	r5,r21
   87af4:	a009883a 	mov	r4,r20
   87af8:	182f883a 	mov	r23,r3
   87afc:	102d883a 	mov	r22,r2
   87b00:	0083c940 	call	83c94 <__fixdfsi>
   87b04:	1009883a 	mov	r4,r2
   87b08:	1027883a 	mov	r19,r2
   87b0c:	0083b9c0 	call	83b9c <__floatsidf>
   87b10:	a80b883a 	mov	r5,r21
   87b14:	a009883a 	mov	r4,r20
   87b18:	180f883a 	mov	r7,r3
   87b1c:	100d883a 	mov	r6,r2
   87b20:	008354c0 	call	8354c <__subdf3>
   87b24:	180b883a 	mov	r5,r3
   87b28:	d8c00517 	ldw	r3,20(sp)
   87b2c:	9cc00c04 	addi	r19,r19,48
   87b30:	1009883a 	mov	r4,r2
   87b34:	1cc00005 	stb	r19,0(r3)
   87b38:	2021883a 	mov	r16,r4
   87b3c:	d9000317 	ldw	r4,12(sp)
   87b40:	00800044 	movi	r2,1
   87b44:	2823883a 	mov	r17,r5
   87b48:	20802226 	beq	r4,r2,87bd4 <_dtoa_r+0x13fc>
   87b4c:	1029883a 	mov	r20,r2
   87b50:	0005883a 	mov	r2,zero
   87b54:	00d00934 	movhi	r3,16420
   87b58:	180f883a 	mov	r7,r3
   87b5c:	100d883a 	mov	r6,r2
   87b60:	880b883a 	mov	r5,r17
   87b64:	8009883a 	mov	r4,r16
   87b68:	00836400 	call	83640 <__muldf3>
   87b6c:	180b883a 	mov	r5,r3
   87b70:	1009883a 	mov	r4,r2
   87b74:	1823883a 	mov	r17,r3
   87b78:	1021883a 	mov	r16,r2
   87b7c:	0083c940 	call	83c94 <__fixdfsi>
   87b80:	1009883a 	mov	r4,r2
   87b84:	102b883a 	mov	r21,r2
   87b88:	0083b9c0 	call	83b9c <__floatsidf>
   87b8c:	880b883a 	mov	r5,r17
   87b90:	8009883a 	mov	r4,r16
   87b94:	180f883a 	mov	r7,r3
   87b98:	100d883a 	mov	r6,r2
   87b9c:	008354c0 	call	8354c <__subdf3>
   87ba0:	180b883a 	mov	r5,r3
   87ba4:	d8c00517 	ldw	r3,20(sp)
   87ba8:	1009883a 	mov	r4,r2
   87bac:	ad400c04 	addi	r21,r21,48
   87bb0:	1d05883a 	add	r2,r3,r20
   87bb4:	15400005 	stb	r21,0(r2)
   87bb8:	2021883a 	mov	r16,r4
   87bbc:	d9000317 	ldw	r4,12(sp)
   87bc0:	a5000044 	addi	r20,r20,1
   87bc4:	2823883a 	mov	r17,r5
   87bc8:	a13fe11e 	bne	r20,r4,87b50 <_dtoa_r+0x1378>
   87bcc:	e505883a 	add	r2,fp,r20
   87bd0:	173fffc4 	addi	fp,r2,-1
   87bd4:	0025883a 	mov	r18,zero
   87bd8:	04cff834 	movhi	r19,16352
   87bdc:	b009883a 	mov	r4,r22
   87be0:	b80b883a 	mov	r5,r23
   87be4:	900d883a 	mov	r6,r18
   87be8:	980f883a 	mov	r7,r19
   87bec:	00835cc0 	call	835cc <__adddf3>
   87bf0:	180b883a 	mov	r5,r3
   87bf4:	1009883a 	mov	r4,r2
   87bf8:	800d883a 	mov	r6,r16
   87bfc:	880f883a 	mov	r7,r17
   87c00:	008c5b00 	call	8c5b0 <__ltdf2>
   87c04:	103cab16 	blt	r2,zero,86eb4 <_dtoa_r+0x6dc>
   87c08:	0009883a 	mov	r4,zero
   87c0c:	980b883a 	mov	r5,r19
   87c10:	b80f883a 	mov	r7,r23
   87c14:	b00d883a 	mov	r6,r22
   87c18:	008354c0 	call	8354c <__subdf3>
   87c1c:	180b883a 	mov	r5,r3
   87c20:	880f883a 	mov	r7,r17
   87c24:	1009883a 	mov	r4,r2
   87c28:	800d883a 	mov	r6,r16
   87c2c:	0083a8c0 	call	83a8c <__gtdf2>
   87c30:	00bc470e 	bge	zero,r2,86d50 <_dtoa_r+0x578>
   87c34:	00c00c04 	movi	r3,48
   87c38:	e73fffc4 	addi	fp,fp,-1
   87c3c:	e0800007 	ldb	r2,0(fp)
   87c40:	10fffd26 	beq	r2,r3,87c38 <_dtoa_r+0x1460>
   87c44:	d9800417 	ldw	r6,16(sp)
   87c48:	e7000044 	addi	fp,fp,1
   87c4c:	d9800d15 	stw	r6,52(sp)
   87c50:	003cab06 	br	86f00 <_dtoa_r+0x728>
   87c54:	d8c00f17 	ldw	r3,60(sp)
   87c58:	d9001117 	ldw	r4,68(sp)
   87c5c:	20e1c83a 	sub	r16,r4,r3
   87c60:	0007883a 	mov	r3,zero
   87c64:	003d9b06 	br	872d4 <_dtoa_r+0xafc>
   87c68:	00800e44 	movi	r2,57
   87c6c:	b0800005 	stb	r2,0(r22)
   87c70:	b5800044 	addi	r22,r22,1
   87c74:	003dc106 	br	8737c <_dtoa_r+0xba4>
   87c78:	05800084 	movi	r22,2
   87c7c:	003bf706 	br	86c5c <_dtoa_r+0x484>
   87c80:	d9000f17 	ldw	r4,60(sp)
   87c84:	013c000e 	bge	zero,r4,86c88 <_dtoa_r+0x4b0>
   87c88:	d9800e17 	ldw	r6,56(sp)
   87c8c:	01bc300e 	bge	zero,r6,86d50 <_dtoa_r+0x578>
   87c90:	0005883a 	mov	r2,zero
   87c94:	00d00934 	movhi	r3,16420
   87c98:	a80b883a 	mov	r5,r21
   87c9c:	180f883a 	mov	r7,r3
   87ca0:	a009883a 	mov	r4,r20
   87ca4:	100d883a 	mov	r6,r2
   87ca8:	00836400 	call	83640 <__muldf3>
   87cac:	b1000044 	addi	r4,r22,1
   87cb0:	1021883a 	mov	r16,r2
   87cb4:	1823883a 	mov	r17,r3
   87cb8:	0083b9c0 	call	83b9c <__floatsidf>
   87cbc:	880b883a 	mov	r5,r17
   87cc0:	8009883a 	mov	r4,r16
   87cc4:	180f883a 	mov	r7,r3
   87cc8:	100d883a 	mov	r6,r2
   87ccc:	00836400 	call	83640 <__muldf3>
   87cd0:	0011883a 	mov	r8,zero
   87cd4:	02500734 	movhi	r9,16412
   87cd8:	180b883a 	mov	r5,r3
   87cdc:	480f883a 	mov	r7,r9
   87ce0:	1009883a 	mov	r4,r2
   87ce4:	400d883a 	mov	r6,r8
   87ce8:	00835cc0 	call	835cc <__adddf3>
   87cec:	102d883a 	mov	r22,r2
   87cf0:	00bf3034 	movhi	r2,64704
   87cf4:	10ef883a 	add	r23,r2,r3
   87cf8:	d8800d17 	ldw	r2,52(sp)
   87cfc:	d8c00e17 	ldw	r3,56(sp)
   87d00:	8029883a 	mov	r20,r16
   87d04:	10bfffc4 	addi	r2,r2,-1
   87d08:	882b883a 	mov	r21,r17
   87d0c:	d8800415 	stw	r2,16(sp)
   87d10:	d8c00315 	stw	r3,12(sp)
   87d14:	003e8306 	br	87724 <_dtoa_r+0xf4c>
   87d18:	d8800117 	ldw	r2,4(sp)
   87d1c:	dc001117 	ldw	r16,68(sp)
   87d20:	dc801017 	ldw	r18,64(sp)
   87d24:	00c00d84 	movi	r3,54
   87d28:	1887c83a 	sub	r3,r3,r2
   87d2c:	003d6906 	br	872d4 <_dtoa_r+0xafc>
   87d30:	01800044 	movi	r6,1
   87d34:	3021883a 	mov	r16,r6
   87d38:	d9800f15 	stw	r6,60(sp)
   87d3c:	d9802615 	stw	r6,152(sp)
   87d40:	d9800e15 	stw	r6,56(sp)
   87d44:	003b9306 	br	86b94 <_dtoa_r+0x3bc>
   87d48:	b021883a 	mov	r16,r22
   87d4c:	dd800f15 	stw	r22,60(sp)
   87d50:	003b9006 	br	86b94 <_dtoa_r+0x3bc>
   87d54:	103e221e 	bne	r2,zero,875e0 <_dtoa_r+0xe08>
   87d58:	b880004c 	andi	r2,r23,1
   87d5c:	1005003a 	cmpeq	r2,r2,zero
   87d60:	103e1f1e 	bne	r2,zero,875e0 <_dtoa_r+0xe08>
   87d64:	003e1b06 	br	875d4 <_dtoa_r+0xdfc>
   87d68:	d9001617 	ldw	r4,88(sp)
   87d6c:	980b883a 	mov	r5,r19
   87d70:	01800284 	movi	r6,10
   87d74:	000f883a 	mov	r7,zero
   87d78:	008a6200 	call	8a620 <__multadd>
   87d7c:	d8c00e17 	ldw	r3,56(sp)
   87d80:	1027883a 	mov	r19,r2
   87d84:	d8c00f15 	stw	r3,60(sp)
   87d88:	003cd306 	br	870d8 <_dtoa_r+0x900>

00087d8c <_fflush_r>:
   87d8c:	defffb04 	addi	sp,sp,-20
   87d90:	dcc00315 	stw	r19,12(sp)
   87d94:	dc800215 	stw	r18,8(sp)
   87d98:	dfc00415 	stw	ra,16(sp)
   87d9c:	dc400115 	stw	r17,4(sp)
   87da0:	dc000015 	stw	r16,0(sp)
   87da4:	2027883a 	mov	r19,r4
   87da8:	2825883a 	mov	r18,r5
   87dac:	20000226 	beq	r4,zero,87db8 <_fflush_r+0x2c>
   87db0:	20800e17 	ldw	r2,56(r4)
   87db4:	10005626 	beq	r2,zero,87f10 <_fflush_r+0x184>
   87db8:	9100030b 	ldhu	r4,12(r18)
   87dbc:	20ffffcc 	andi	r3,r4,65535
   87dc0:	18e0001c 	xori	r3,r3,32768
   87dc4:	18e00004 	addi	r3,r3,-32768
   87dc8:	1880020c 	andi	r2,r3,8
   87dcc:	1000261e 	bne	r2,zero,87e68 <_fflush_r+0xdc>
   87dd0:	90c00117 	ldw	r3,4(r18)
   87dd4:	20820014 	ori	r2,r4,2048
   87dd8:	9080030d 	sth	r2,12(r18)
   87ddc:	1009883a 	mov	r4,r2
   87de0:	00c0400e 	bge	zero,r3,87ee4 <_fflush_r+0x158>
   87de4:	92000a17 	ldw	r8,40(r18)
   87de8:	40004026 	beq	r8,zero,87eec <_fflush_r+0x160>
   87dec:	2084000c 	andi	r2,r4,4096
   87df0:	10005326 	beq	r2,zero,87f40 <_fflush_r+0x1b4>
   87df4:	94001417 	ldw	r16,80(r18)
   87df8:	9080030b 	ldhu	r2,12(r18)
   87dfc:	1080010c 	andi	r2,r2,4
   87e00:	1000481e 	bne	r2,zero,87f24 <_fflush_r+0x198>
   87e04:	91400717 	ldw	r5,28(r18)
   87e08:	9809883a 	mov	r4,r19
   87e0c:	800d883a 	mov	r6,r16
   87e10:	000f883a 	mov	r7,zero
   87e14:	403ee83a 	callr	r8
   87e18:	8080261e 	bne	r16,r2,87eb4 <_fflush_r+0x128>
   87e1c:	9080030b 	ldhu	r2,12(r18)
   87e20:	91000417 	ldw	r4,16(r18)
   87e24:	90000115 	stw	zero,4(r18)
   87e28:	10bdffcc 	andi	r2,r2,63487
   87e2c:	10ffffcc 	andi	r3,r2,65535
   87e30:	18c4000c 	andi	r3,r3,4096
   87e34:	9080030d 	sth	r2,12(r18)
   87e38:	91000015 	stw	r4,0(r18)
   87e3c:	18002b26 	beq	r3,zero,87eec <_fflush_r+0x160>
   87e40:	0007883a 	mov	r3,zero
   87e44:	1805883a 	mov	r2,r3
   87e48:	94001415 	stw	r16,80(r18)
   87e4c:	dfc00417 	ldw	ra,16(sp)
   87e50:	dcc00317 	ldw	r19,12(sp)
   87e54:	dc800217 	ldw	r18,8(sp)
   87e58:	dc400117 	ldw	r17,4(sp)
   87e5c:	dc000017 	ldw	r16,0(sp)
   87e60:	dec00504 	addi	sp,sp,20
   87e64:	f800283a 	ret
   87e68:	94400417 	ldw	r17,16(r18)
   87e6c:	88001f26 	beq	r17,zero,87eec <_fflush_r+0x160>
   87e70:	90800017 	ldw	r2,0(r18)
   87e74:	18c000cc 	andi	r3,r3,3
   87e78:	94400015 	stw	r17,0(r18)
   87e7c:	1461c83a 	sub	r16,r2,r17
   87e80:	18002526 	beq	r3,zero,87f18 <_fflush_r+0x18c>
   87e84:	0005883a 	mov	r2,zero
   87e88:	90800215 	stw	r2,8(r18)
   87e8c:	0400170e 	bge	zero,r16,87eec <_fflush_r+0x160>
   87e90:	90c00917 	ldw	r3,36(r18)
   87e94:	91400717 	ldw	r5,28(r18)
   87e98:	880d883a 	mov	r6,r17
   87e9c:	800f883a 	mov	r7,r16
   87ea0:	9809883a 	mov	r4,r19
   87ea4:	183ee83a 	callr	r3
   87ea8:	88a3883a 	add	r17,r17,r2
   87eac:	80a1c83a 	sub	r16,r16,r2
   87eb0:	00bff616 	blt	zero,r2,87e8c <_fflush_r+0x100>
   87eb4:	9080030b 	ldhu	r2,12(r18)
   87eb8:	00ffffc4 	movi	r3,-1
   87ebc:	10801014 	ori	r2,r2,64
   87ec0:	9080030d 	sth	r2,12(r18)
   87ec4:	1805883a 	mov	r2,r3
   87ec8:	dfc00417 	ldw	ra,16(sp)
   87ecc:	dcc00317 	ldw	r19,12(sp)
   87ed0:	dc800217 	ldw	r18,8(sp)
   87ed4:	dc400117 	ldw	r17,4(sp)
   87ed8:	dc000017 	ldw	r16,0(sp)
   87edc:	dec00504 	addi	sp,sp,20
   87ee0:	f800283a 	ret
   87ee4:	90800f17 	ldw	r2,60(r18)
   87ee8:	00bfbe16 	blt	zero,r2,87de4 <_fflush_r+0x58>
   87eec:	0007883a 	mov	r3,zero
   87ef0:	1805883a 	mov	r2,r3
   87ef4:	dfc00417 	ldw	ra,16(sp)
   87ef8:	dcc00317 	ldw	r19,12(sp)
   87efc:	dc800217 	ldw	r18,8(sp)
   87f00:	dc400117 	ldw	r17,4(sp)
   87f04:	dc000017 	ldw	r16,0(sp)
   87f08:	dec00504 	addi	sp,sp,20
   87f0c:	f800283a 	ret
   87f10:	00880240 	call	88024 <__sinit>
   87f14:	003fa806 	br	87db8 <_fflush_r+0x2c>
   87f18:	90800517 	ldw	r2,20(r18)
   87f1c:	90800215 	stw	r2,8(r18)
   87f20:	003fda06 	br	87e8c <_fflush_r+0x100>
   87f24:	90800117 	ldw	r2,4(r18)
   87f28:	90c00c17 	ldw	r3,48(r18)
   87f2c:	80a1c83a 	sub	r16,r16,r2
   87f30:	183fb426 	beq	r3,zero,87e04 <_fflush_r+0x78>
   87f34:	90800f17 	ldw	r2,60(r18)
   87f38:	80a1c83a 	sub	r16,r16,r2
   87f3c:	003fb106 	br	87e04 <_fflush_r+0x78>
   87f40:	91400717 	ldw	r5,28(r18)
   87f44:	9809883a 	mov	r4,r19
   87f48:	000d883a 	mov	r6,zero
   87f4c:	01c00044 	movi	r7,1
   87f50:	403ee83a 	callr	r8
   87f54:	1021883a 	mov	r16,r2
   87f58:	00bfffc4 	movi	r2,-1
   87f5c:	80800226 	beq	r16,r2,87f68 <_fflush_r+0x1dc>
   87f60:	92000a17 	ldw	r8,40(r18)
   87f64:	003fa406 	br	87df8 <_fflush_r+0x6c>
   87f68:	98c00017 	ldw	r3,0(r19)
   87f6c:	00800744 	movi	r2,29
   87f70:	18bfde26 	beq	r3,r2,87eec <_fflush_r+0x160>
   87f74:	9080030b 	ldhu	r2,12(r18)
   87f78:	8007883a 	mov	r3,r16
   87f7c:	10801014 	ori	r2,r2,64
   87f80:	9080030d 	sth	r2,12(r18)
   87f84:	003fcf06 	br	87ec4 <_fflush_r+0x138>

00087f88 <fflush>:
   87f88:	01400234 	movhi	r5,8
   87f8c:	295f6304 	addi	r5,r5,32140
   87f90:	2007883a 	mov	r3,r4
   87f94:	20000526 	beq	r4,zero,87fac <fflush+0x24>
   87f98:	00800274 	movhi	r2,9
   87f9c:	1084af04 	addi	r2,r2,4796
   87fa0:	11000017 	ldw	r4,0(r2)
   87fa4:	180b883a 	mov	r5,r3
   87fa8:	0087d8c1 	jmpi	87d8c <_fflush_r>
   87fac:	00800274 	movhi	r2,9
   87fb0:	1084b004 	addi	r2,r2,4800
   87fb4:	11000017 	ldw	r4,0(r2)
   87fb8:	0088b581 	jmpi	88b58 <_fwalk_reent>

00087fbc <std>:
   87fbc:	00800274 	movhi	r2,9
   87fc0:	10ac0d04 	addi	r2,r2,-20428
   87fc4:	20800b15 	stw	r2,44(r4)
   87fc8:	00800274 	movhi	r2,9
   87fcc:	10ac4804 	addi	r2,r2,-20192
   87fd0:	20800815 	stw	r2,32(r4)
   87fd4:	00c00274 	movhi	r3,9
   87fd8:	18ec2904 	addi	r3,r3,-20316
   87fdc:	00800274 	movhi	r2,9
   87fe0:	10ac0f04 	addi	r2,r2,-20420
   87fe4:	2140030d 	sth	r5,12(r4)
   87fe8:	2180038d 	sth	r6,14(r4)
   87fec:	20c00915 	stw	r3,36(r4)
   87ff0:	20800a15 	stw	r2,40(r4)
   87ff4:	20000015 	stw	zero,0(r4)
   87ff8:	20000115 	stw	zero,4(r4)
   87ffc:	20000215 	stw	zero,8(r4)
   88000:	20000415 	stw	zero,16(r4)
   88004:	20000515 	stw	zero,20(r4)
   88008:	20000615 	stw	zero,24(r4)
   8800c:	21000715 	stw	r4,28(r4)
   88010:	f800283a 	ret

00088014 <__sfp_lock_acquire>:
   88014:	f800283a 	ret

00088018 <__sfp_lock_release>:
   88018:	f800283a 	ret

0008801c <__sinit_lock_acquire>:
   8801c:	f800283a 	ret

00088020 <__sinit_lock_release>:
   88020:	f800283a 	ret

00088024 <__sinit>:
   88024:	20800e17 	ldw	r2,56(r4)
   88028:	defffd04 	addi	sp,sp,-12
   8802c:	dc400115 	stw	r17,4(sp)
   88030:	dc000015 	stw	r16,0(sp)
   88034:	dfc00215 	stw	ra,8(sp)
   88038:	04400044 	movi	r17,1
   8803c:	01400104 	movi	r5,4
   88040:	000d883a 	mov	r6,zero
   88044:	2021883a 	mov	r16,r4
   88048:	2200bb04 	addi	r8,r4,748
   8804c:	200f883a 	mov	r7,r4
   88050:	10000526 	beq	r2,zero,88068 <__sinit+0x44>
   88054:	dfc00217 	ldw	ra,8(sp)
   88058:	dc400117 	ldw	r17,4(sp)
   8805c:	dc000017 	ldw	r16,0(sp)
   88060:	dec00304 	addi	sp,sp,12
   88064:	f800283a 	ret
   88068:	21000117 	ldw	r4,4(r4)
   8806c:	00800274 	movhi	r2,9
   88070:	10a04204 	addi	r2,r2,-32504
   88074:	00c000c4 	movi	r3,3
   88078:	80800f15 	stw	r2,60(r16)
   8807c:	80c0b915 	stw	r3,740(r16)
   88080:	8200ba15 	stw	r8,744(r16)
   88084:	84400e15 	stw	r17,56(r16)
   88088:	8000b815 	stw	zero,736(r16)
   8808c:	0087fbc0 	call	87fbc <std>
   88090:	81000217 	ldw	r4,8(r16)
   88094:	880d883a 	mov	r6,r17
   88098:	800f883a 	mov	r7,r16
   8809c:	01400284 	movi	r5,10
   880a0:	0087fbc0 	call	87fbc <std>
   880a4:	81000317 	ldw	r4,12(r16)
   880a8:	800f883a 	mov	r7,r16
   880ac:	01400484 	movi	r5,18
   880b0:	01800084 	movi	r6,2
   880b4:	dfc00217 	ldw	ra,8(sp)
   880b8:	dc400117 	ldw	r17,4(sp)
   880bc:	dc000017 	ldw	r16,0(sp)
   880c0:	dec00304 	addi	sp,sp,12
   880c4:	0087fbc1 	jmpi	87fbc <std>

000880c8 <__fp_lock>:
   880c8:	0005883a 	mov	r2,zero
   880cc:	f800283a 	ret

000880d0 <__fp_unlock>:
   880d0:	0005883a 	mov	r2,zero
   880d4:	f800283a 	ret

000880d8 <__fp_unlock_all>:
   880d8:	00800274 	movhi	r2,9
   880dc:	1084af04 	addi	r2,r2,4796
   880e0:	11000017 	ldw	r4,0(r2)
   880e4:	01400274 	movhi	r5,9
   880e8:	29603404 	addi	r5,r5,-32560
   880ec:	0088c201 	jmpi	88c20 <_fwalk>

000880f0 <__fp_lock_all>:
   880f0:	00800274 	movhi	r2,9
   880f4:	1084af04 	addi	r2,r2,4796
   880f8:	11000017 	ldw	r4,0(r2)
   880fc:	01400274 	movhi	r5,9
   88100:	29603204 	addi	r5,r5,-32568
   88104:	0088c201 	jmpi	88c20 <_fwalk>

00088108 <_cleanup_r>:
   88108:	01400274 	movhi	r5,9
   8810c:	296d5704 	addi	r5,r5,-19108
   88110:	0088c201 	jmpi	88c20 <_fwalk>

00088114 <_cleanup>:
   88114:	00800274 	movhi	r2,9
   88118:	1084b004 	addi	r2,r2,4800
   8811c:	11000017 	ldw	r4,0(r2)
   88120:	00881081 	jmpi	88108 <_cleanup_r>

00088124 <__sfmoreglue>:
   88124:	defffc04 	addi	sp,sp,-16
   88128:	dc400115 	stw	r17,4(sp)
   8812c:	2c401724 	muli	r17,r5,92
   88130:	dc800215 	stw	r18,8(sp)
   88134:	2825883a 	mov	r18,r5
   88138:	89400304 	addi	r5,r17,12
   8813c:	dc000015 	stw	r16,0(sp)
   88140:	dfc00315 	stw	ra,12(sp)
   88144:	0088f300 	call	88f30 <_malloc_r>
   88148:	0021883a 	mov	r16,zero
   8814c:	880d883a 	mov	r6,r17
   88150:	000b883a 	mov	r5,zero
   88154:	10000626 	beq	r2,zero,88170 <__sfmoreglue+0x4c>
   88158:	11000304 	addi	r4,r2,12
   8815c:	14800115 	stw	r18,4(r2)
   88160:	10000015 	stw	zero,0(r2)
   88164:	11000215 	stw	r4,8(r2)
   88168:	1021883a 	mov	r16,r2
   8816c:	00898d40 	call	898d4 <memset>
   88170:	8005883a 	mov	r2,r16
   88174:	dfc00317 	ldw	ra,12(sp)
   88178:	dc800217 	ldw	r18,8(sp)
   8817c:	dc400117 	ldw	r17,4(sp)
   88180:	dc000017 	ldw	r16,0(sp)
   88184:	dec00404 	addi	sp,sp,16
   88188:	f800283a 	ret

0008818c <__sfp>:
   8818c:	defffd04 	addi	sp,sp,-12
   88190:	00800274 	movhi	r2,9
   88194:	1084b004 	addi	r2,r2,4800
   88198:	dc000015 	stw	r16,0(sp)
   8819c:	14000017 	ldw	r16,0(r2)
   881a0:	dc400115 	stw	r17,4(sp)
   881a4:	dfc00215 	stw	ra,8(sp)
   881a8:	80800e17 	ldw	r2,56(r16)
   881ac:	2023883a 	mov	r17,r4
   881b0:	10002626 	beq	r2,zero,8824c <__sfp+0xc0>
   881b4:	8400b804 	addi	r16,r16,736
   881b8:	80800117 	ldw	r2,4(r16)
   881bc:	81000217 	ldw	r4,8(r16)
   881c0:	10ffffc4 	addi	r3,r2,-1
   881c4:	18000916 	blt	r3,zero,881ec <__sfp+0x60>
   881c8:	2080030f 	ldh	r2,12(r4)
   881cc:	10000b26 	beq	r2,zero,881fc <__sfp+0x70>
   881d0:	017fffc4 	movi	r5,-1
   881d4:	00000206 	br	881e0 <__sfp+0x54>
   881d8:	2080030f 	ldh	r2,12(r4)
   881dc:	10000726 	beq	r2,zero,881fc <__sfp+0x70>
   881e0:	18ffffc4 	addi	r3,r3,-1
   881e4:	21001704 	addi	r4,r4,92
   881e8:	197ffb1e 	bne	r3,r5,881d8 <__sfp+0x4c>
   881ec:	80800017 	ldw	r2,0(r16)
   881f0:	10001926 	beq	r2,zero,88258 <__sfp+0xcc>
   881f4:	1021883a 	mov	r16,r2
   881f8:	003fef06 	br	881b8 <__sfp+0x2c>
   881fc:	00bfffc4 	movi	r2,-1
   88200:	00c00044 	movi	r3,1
   88204:	2080038d 	sth	r2,14(r4)
   88208:	20c0030d 	sth	r3,12(r4)
   8820c:	20000015 	stw	zero,0(r4)
   88210:	20000215 	stw	zero,8(r4)
   88214:	20000115 	stw	zero,4(r4)
   88218:	20000415 	stw	zero,16(r4)
   8821c:	20000515 	stw	zero,20(r4)
   88220:	20000615 	stw	zero,24(r4)
   88224:	20000c15 	stw	zero,48(r4)
   88228:	20000d15 	stw	zero,52(r4)
   8822c:	20001115 	stw	zero,68(r4)
   88230:	20001215 	stw	zero,72(r4)
   88234:	2005883a 	mov	r2,r4
   88238:	dfc00217 	ldw	ra,8(sp)
   8823c:	dc400117 	ldw	r17,4(sp)
   88240:	dc000017 	ldw	r16,0(sp)
   88244:	dec00304 	addi	sp,sp,12
   88248:	f800283a 	ret
   8824c:	8009883a 	mov	r4,r16
   88250:	00880240 	call	88024 <__sinit>
   88254:	003fd706 	br	881b4 <__sfp+0x28>
   88258:	8809883a 	mov	r4,r17
   8825c:	01400104 	movi	r5,4
   88260:	00881240 	call	88124 <__sfmoreglue>
   88264:	80800015 	stw	r2,0(r16)
   88268:	103fe21e 	bne	r2,zero,881f4 <__sfp+0x68>
   8826c:	00800304 	movi	r2,12
   88270:	0009883a 	mov	r4,zero
   88274:	88800015 	stw	r2,0(r17)
   88278:	003fee06 	br	88234 <__sfp+0xa8>

0008827c <_malloc_trim_r>:
   8827c:	defffb04 	addi	sp,sp,-20
   88280:	dcc00315 	stw	r19,12(sp)
   88284:	04c00274 	movhi	r19,9
   88288:	9cff2b04 	addi	r19,r19,-852
   8828c:	dc800215 	stw	r18,8(sp)
   88290:	dc400115 	stw	r17,4(sp)
   88294:	dc000015 	stw	r16,0(sp)
   88298:	2823883a 	mov	r17,r5
   8829c:	2025883a 	mov	r18,r4
   882a0:	dfc00415 	stw	ra,16(sp)
   882a4:	008ce500 	call	8ce50 <__malloc_lock>
   882a8:	98800217 	ldw	r2,8(r19)
   882ac:	9009883a 	mov	r4,r18
   882b0:	000b883a 	mov	r5,zero
   882b4:	10c00117 	ldw	r3,4(r2)
   882b8:	00bfff04 	movi	r2,-4
   882bc:	18a0703a 	and	r16,r3,r2
   882c0:	8463c83a 	sub	r17,r16,r17
   882c4:	8c43fbc4 	addi	r17,r17,4079
   882c8:	8822d33a 	srli	r17,r17,12
   882cc:	0083ffc4 	movi	r2,4095
   882d0:	8c7fffc4 	addi	r17,r17,-1
   882d4:	8822933a 	slli	r17,r17,12
   882d8:	1440060e 	bge	r2,r17,882f4 <_malloc_trim_r+0x78>
   882dc:	008afc40 	call	8afc4 <_sbrk_r>
   882e0:	98c00217 	ldw	r3,8(r19)
   882e4:	9009883a 	mov	r4,r18
   882e8:	044bc83a 	sub	r5,zero,r17
   882ec:	80c7883a 	add	r3,r16,r3
   882f0:	10c00926 	beq	r2,r3,88318 <_malloc_trim_r+0x9c>
   882f4:	008ce700 	call	8ce70 <__malloc_unlock>
   882f8:	0005883a 	mov	r2,zero
   882fc:	dfc00417 	ldw	ra,16(sp)
   88300:	dcc00317 	ldw	r19,12(sp)
   88304:	dc800217 	ldw	r18,8(sp)
   88308:	dc400117 	ldw	r17,4(sp)
   8830c:	dc000017 	ldw	r16,0(sp)
   88310:	dec00504 	addi	sp,sp,20
   88314:	f800283a 	ret
   88318:	9009883a 	mov	r4,r18
   8831c:	008afc40 	call	8afc4 <_sbrk_r>
   88320:	844dc83a 	sub	r6,r16,r17
   88324:	00ffffc4 	movi	r3,-1
   88328:	9009883a 	mov	r4,r18
   8832c:	000b883a 	mov	r5,zero
   88330:	01c00274 	movhi	r7,9
   88334:	39cbf304 	addi	r7,r7,12236
   88338:	31800054 	ori	r6,r6,1
   8833c:	10c00926 	beq	r2,r3,88364 <_malloc_trim_r+0xe8>
   88340:	38800017 	ldw	r2,0(r7)
   88344:	98c00217 	ldw	r3,8(r19)
   88348:	9009883a 	mov	r4,r18
   8834c:	1445c83a 	sub	r2,r2,r17
   88350:	38800015 	stw	r2,0(r7)
   88354:	19800115 	stw	r6,4(r3)
   88358:	008ce700 	call	8ce70 <__malloc_unlock>
   8835c:	00800044 	movi	r2,1
   88360:	003fe606 	br	882fc <_malloc_trim_r+0x80>
   88364:	008afc40 	call	8afc4 <_sbrk_r>
   88368:	99800217 	ldw	r6,8(r19)
   8836c:	100f883a 	mov	r7,r2
   88370:	9009883a 	mov	r4,r18
   88374:	1187c83a 	sub	r3,r2,r6
   88378:	008003c4 	movi	r2,15
   8837c:	19400054 	ori	r5,r3,1
   88380:	10ffdc0e 	bge	r2,r3,882f4 <_malloc_trim_r+0x78>
   88384:	00800274 	movhi	r2,9
   88388:	1084b404 	addi	r2,r2,4816
   8838c:	10c00017 	ldw	r3,0(r2)
   88390:	00800274 	movhi	r2,9
   88394:	108bf304 	addi	r2,r2,12236
   88398:	31400115 	stw	r5,4(r6)
   8839c:	38c7c83a 	sub	r3,r7,r3
   883a0:	10c00015 	stw	r3,0(r2)
   883a4:	003fd306 	br	882f4 <_malloc_trim_r+0x78>

000883a8 <_free_r>:
   883a8:	defffd04 	addi	sp,sp,-12
   883ac:	dc400115 	stw	r17,4(sp)
   883b0:	dc000015 	stw	r16,0(sp)
   883b4:	dfc00215 	stw	ra,8(sp)
   883b8:	2821883a 	mov	r16,r5
   883bc:	2023883a 	mov	r17,r4
   883c0:	28005a26 	beq	r5,zero,8852c <_free_r+0x184>
   883c4:	008ce500 	call	8ce50 <__malloc_lock>
   883c8:	823ffe04 	addi	r8,r16,-8
   883cc:	41400117 	ldw	r5,4(r8)
   883d0:	00bfff84 	movi	r2,-2
   883d4:	02800274 	movhi	r10,9
   883d8:	52bf2b04 	addi	r10,r10,-852
   883dc:	288e703a 	and	r7,r5,r2
   883e0:	41cd883a 	add	r6,r8,r7
   883e4:	30c00117 	ldw	r3,4(r6)
   883e8:	51000217 	ldw	r4,8(r10)
   883ec:	00bfff04 	movi	r2,-4
   883f0:	1892703a 	and	r9,r3,r2
   883f4:	5017883a 	mov	r11,r10
   883f8:	31006726 	beq	r6,r4,88598 <_free_r+0x1f0>
   883fc:	2880004c 	andi	r2,r5,1
   88400:	1005003a 	cmpeq	r2,r2,zero
   88404:	32400115 	stw	r9,4(r6)
   88408:	10001a1e 	bne	r2,zero,88474 <_free_r+0xcc>
   8840c:	000b883a 	mov	r5,zero
   88410:	3247883a 	add	r3,r6,r9
   88414:	18800117 	ldw	r2,4(r3)
   88418:	1080004c 	andi	r2,r2,1
   8841c:	1000231e 	bne	r2,zero,884ac <_free_r+0x104>
   88420:	280ac03a 	cmpne	r5,r5,zero
   88424:	3a4f883a 	add	r7,r7,r9
   88428:	2800451e 	bne	r5,zero,88540 <_free_r+0x198>
   8842c:	31000217 	ldw	r4,8(r6)
   88430:	00800274 	movhi	r2,9
   88434:	10bf2d04 	addi	r2,r2,-844
   88438:	20807b26 	beq	r4,r2,88628 <_free_r+0x280>
   8843c:	30800317 	ldw	r2,12(r6)
   88440:	3a07883a 	add	r3,r7,r8
   88444:	19c00015 	stw	r7,0(r3)
   88448:	11000215 	stw	r4,8(r2)
   8844c:	20800315 	stw	r2,12(r4)
   88450:	38800054 	ori	r2,r7,1
   88454:	40800115 	stw	r2,4(r8)
   88458:	28001a26 	beq	r5,zero,884c4 <_free_r+0x11c>
   8845c:	8809883a 	mov	r4,r17
   88460:	dfc00217 	ldw	ra,8(sp)
   88464:	dc400117 	ldw	r17,4(sp)
   88468:	dc000017 	ldw	r16,0(sp)
   8846c:	dec00304 	addi	sp,sp,12
   88470:	008ce701 	jmpi	8ce70 <__malloc_unlock>
   88474:	80bffe17 	ldw	r2,-8(r16)
   88478:	50c00204 	addi	r3,r10,8
   8847c:	4091c83a 	sub	r8,r8,r2
   88480:	41000217 	ldw	r4,8(r8)
   88484:	388f883a 	add	r7,r7,r2
   88488:	20c06126 	beq	r4,r3,88610 <_free_r+0x268>
   8848c:	40800317 	ldw	r2,12(r8)
   88490:	3247883a 	add	r3,r6,r9
   88494:	000b883a 	mov	r5,zero
   88498:	11000215 	stw	r4,8(r2)
   8849c:	20800315 	stw	r2,12(r4)
   884a0:	18800117 	ldw	r2,4(r3)
   884a4:	1080004c 	andi	r2,r2,1
   884a8:	103fdd26 	beq	r2,zero,88420 <_free_r+0x78>
   884ac:	38800054 	ori	r2,r7,1
   884b0:	3a07883a 	add	r3,r7,r8
   884b4:	280ac03a 	cmpne	r5,r5,zero
   884b8:	40800115 	stw	r2,4(r8)
   884bc:	19c00015 	stw	r7,0(r3)
   884c0:	283fe61e 	bne	r5,zero,8845c <_free_r+0xb4>
   884c4:	00807fc4 	movi	r2,511
   884c8:	11c01f2e 	bgeu	r2,r7,88548 <_free_r+0x1a0>
   884cc:	3806d27a 	srli	r3,r7,9
   884d0:	1800481e 	bne	r3,zero,885f4 <_free_r+0x24c>
   884d4:	3804d0fa 	srli	r2,r7,3
   884d8:	100690fa 	slli	r3,r2,3
   884dc:	1acd883a 	add	r6,r3,r11
   884e0:	31400217 	ldw	r5,8(r6)
   884e4:	31405926 	beq	r6,r5,8864c <_free_r+0x2a4>
   884e8:	28800117 	ldw	r2,4(r5)
   884ec:	00ffff04 	movi	r3,-4
   884f0:	10c4703a 	and	r2,r2,r3
   884f4:	3880022e 	bgeu	r7,r2,88500 <_free_r+0x158>
   884f8:	29400217 	ldw	r5,8(r5)
   884fc:	317ffa1e 	bne	r6,r5,884e8 <_free_r+0x140>
   88500:	29800317 	ldw	r6,12(r5)
   88504:	41800315 	stw	r6,12(r8)
   88508:	41400215 	stw	r5,8(r8)
   8850c:	8809883a 	mov	r4,r17
   88510:	2a000315 	stw	r8,12(r5)
   88514:	32000215 	stw	r8,8(r6)
   88518:	dfc00217 	ldw	ra,8(sp)
   8851c:	dc400117 	ldw	r17,4(sp)
   88520:	dc000017 	ldw	r16,0(sp)
   88524:	dec00304 	addi	sp,sp,12
   88528:	008ce701 	jmpi	8ce70 <__malloc_unlock>
   8852c:	dfc00217 	ldw	ra,8(sp)
   88530:	dc400117 	ldw	r17,4(sp)
   88534:	dc000017 	ldw	r16,0(sp)
   88538:	dec00304 	addi	sp,sp,12
   8853c:	f800283a 	ret
   88540:	31000217 	ldw	r4,8(r6)
   88544:	003fbd06 	br	8843c <_free_r+0x94>
   88548:	3806d0fa 	srli	r3,r7,3
   8854c:	00800044 	movi	r2,1
   88550:	51400117 	ldw	r5,4(r10)
   88554:	180890fa 	slli	r4,r3,3
   88558:	1807d0ba 	srai	r3,r3,2
   8855c:	22c9883a 	add	r4,r4,r11
   88560:	21800217 	ldw	r6,8(r4)
   88564:	10c4983a 	sll	r2,r2,r3
   88568:	41000315 	stw	r4,12(r8)
   8856c:	41800215 	stw	r6,8(r8)
   88570:	288ab03a 	or	r5,r5,r2
   88574:	22000215 	stw	r8,8(r4)
   88578:	8809883a 	mov	r4,r17
   8857c:	51400115 	stw	r5,4(r10)
   88580:	32000315 	stw	r8,12(r6)
   88584:	dfc00217 	ldw	ra,8(sp)
   88588:	dc400117 	ldw	r17,4(sp)
   8858c:	dc000017 	ldw	r16,0(sp)
   88590:	dec00304 	addi	sp,sp,12
   88594:	008ce701 	jmpi	8ce70 <__malloc_unlock>
   88598:	2880004c 	andi	r2,r5,1
   8859c:	3a4d883a 	add	r6,r7,r9
   885a0:	1000071e 	bne	r2,zero,885c0 <_free_r+0x218>
   885a4:	80bffe17 	ldw	r2,-8(r16)
   885a8:	4091c83a 	sub	r8,r8,r2
   885ac:	41000317 	ldw	r4,12(r8)
   885b0:	40c00217 	ldw	r3,8(r8)
   885b4:	308d883a 	add	r6,r6,r2
   885b8:	20c00215 	stw	r3,8(r4)
   885bc:	19000315 	stw	r4,12(r3)
   885c0:	00800274 	movhi	r2,9
   885c4:	1084b304 	addi	r2,r2,4812
   885c8:	11000017 	ldw	r4,0(r2)
   885cc:	30c00054 	ori	r3,r6,1
   885d0:	52000215 	stw	r8,8(r10)
   885d4:	40c00115 	stw	r3,4(r8)
   885d8:	313fa036 	bltu	r6,r4,8845c <_free_r+0xb4>
   885dc:	00800274 	movhi	r2,9
   885e0:	108be904 	addi	r2,r2,12196
   885e4:	11400017 	ldw	r5,0(r2)
   885e8:	8809883a 	mov	r4,r17
   885ec:	008827c0 	call	8827c <_malloc_trim_r>
   885f0:	003f9a06 	br	8845c <_free_r+0xb4>
   885f4:	00800104 	movi	r2,4
   885f8:	10c0072e 	bgeu	r2,r3,88618 <_free_r+0x270>
   885fc:	00800504 	movi	r2,20
   88600:	10c01936 	bltu	r2,r3,88668 <_free_r+0x2c0>
   88604:	188016c4 	addi	r2,r3,91
   88608:	100690fa 	slli	r3,r2,3
   8860c:	003fb306 	br	884dc <_free_r+0x134>
   88610:	01400044 	movi	r5,1
   88614:	003f7e06 	br	88410 <_free_r+0x68>
   88618:	3804d1ba 	srli	r2,r7,6
   8861c:	10800e04 	addi	r2,r2,56
   88620:	100690fa 	slli	r3,r2,3
   88624:	003fad06 	br	884dc <_free_r+0x134>
   88628:	22000315 	stw	r8,12(r4)
   8862c:	22000215 	stw	r8,8(r4)
   88630:	3a05883a 	add	r2,r7,r8
   88634:	38c00054 	ori	r3,r7,1
   88638:	11c00015 	stw	r7,0(r2)
   8863c:	41000215 	stw	r4,8(r8)
   88640:	40c00115 	stw	r3,4(r8)
   88644:	41000315 	stw	r4,12(r8)
   88648:	003f8406 	br	8845c <_free_r+0xb4>
   8864c:	1005d0ba 	srai	r2,r2,2
   88650:	00c00044 	movi	r3,1
   88654:	51000117 	ldw	r4,4(r10)
   88658:	1886983a 	sll	r3,r3,r2
   8865c:	20c8b03a 	or	r4,r4,r3
   88660:	51000115 	stw	r4,4(r10)
   88664:	003fa706 	br	88504 <_free_r+0x15c>
   88668:	00801504 	movi	r2,84
   8866c:	10c00436 	bltu	r2,r3,88680 <_free_r+0x2d8>
   88670:	3804d33a 	srli	r2,r7,12
   88674:	10801b84 	addi	r2,r2,110
   88678:	100690fa 	slli	r3,r2,3
   8867c:	003f9706 	br	884dc <_free_r+0x134>
   88680:	00805504 	movi	r2,340
   88684:	10c00436 	bltu	r2,r3,88698 <_free_r+0x2f0>
   88688:	3804d3fa 	srli	r2,r7,15
   8868c:	10801dc4 	addi	r2,r2,119
   88690:	100690fa 	slli	r3,r2,3
   88694:	003f9106 	br	884dc <_free_r+0x134>
   88698:	00815504 	movi	r2,1364
   8869c:	10c0032e 	bgeu	r2,r3,886ac <_free_r+0x304>
   886a0:	00801f84 	movi	r2,126
   886a4:	00c0fc04 	movi	r3,1008
   886a8:	003f8c06 	br	884dc <_free_r+0x134>
   886ac:	3804d4ba 	srli	r2,r7,18
   886b0:	10801f04 	addi	r2,r2,124
   886b4:	100690fa 	slli	r3,r2,3
   886b8:	003f8806 	br	884dc <_free_r+0x134>

000886bc <__sfvwrite_r>:
   886bc:	30800217 	ldw	r2,8(r6)
   886c0:	defff504 	addi	sp,sp,-44
   886c4:	df000915 	stw	fp,36(sp)
   886c8:	dd800715 	stw	r22,28(sp)
   886cc:	dc800315 	stw	r18,12(sp)
   886d0:	dfc00a15 	stw	ra,40(sp)
   886d4:	ddc00815 	stw	r23,32(sp)
   886d8:	dd400615 	stw	r21,24(sp)
   886dc:	dd000515 	stw	r20,20(sp)
   886e0:	dcc00415 	stw	r19,16(sp)
   886e4:	dc400215 	stw	r17,8(sp)
   886e8:	dc000115 	stw	r16,4(sp)
   886ec:	302d883a 	mov	r22,r6
   886f0:	2039883a 	mov	fp,r4
   886f4:	2825883a 	mov	r18,r5
   886f8:	10001c26 	beq	r2,zero,8876c <__sfvwrite_r+0xb0>
   886fc:	29c0030b 	ldhu	r7,12(r5)
   88700:	3880020c 	andi	r2,r7,8
   88704:	10002726 	beq	r2,zero,887a4 <__sfvwrite_r+0xe8>
   88708:	28800417 	ldw	r2,16(r5)
   8870c:	10002526 	beq	r2,zero,887a4 <__sfvwrite_r+0xe8>
   88710:	3880008c 	andi	r2,r7,2
   88714:	b5400017 	ldw	r21,0(r22)
   88718:	10002826 	beq	r2,zero,887bc <__sfvwrite_r+0x100>
   8871c:	0021883a 	mov	r16,zero
   88720:	0023883a 	mov	r17,zero
   88724:	880d883a 	mov	r6,r17
   88728:	e009883a 	mov	r4,fp
   8872c:	00810004 	movi	r2,1024
   88730:	80006e26 	beq	r16,zero,888ec <__sfvwrite_r+0x230>
   88734:	800f883a 	mov	r7,r16
   88738:	91400717 	ldw	r5,28(r18)
   8873c:	1400012e 	bgeu	r2,r16,88744 <__sfvwrite_r+0x88>
   88740:	100f883a 	mov	r7,r2
   88744:	90c00917 	ldw	r3,36(r18)
   88748:	183ee83a 	callr	r3
   8874c:	1007883a 	mov	r3,r2
   88750:	80a1c83a 	sub	r16,r16,r2
   88754:	88a3883a 	add	r17,r17,r2
   88758:	00806d0e 	bge	zero,r2,88910 <__sfvwrite_r+0x254>
   8875c:	b0800217 	ldw	r2,8(r22)
   88760:	10c5c83a 	sub	r2,r2,r3
   88764:	b0800215 	stw	r2,8(r22)
   88768:	103fee1e 	bne	r2,zero,88724 <__sfvwrite_r+0x68>
   8876c:	0009883a 	mov	r4,zero
   88770:	2005883a 	mov	r2,r4
   88774:	dfc00a17 	ldw	ra,40(sp)
   88778:	df000917 	ldw	fp,36(sp)
   8877c:	ddc00817 	ldw	r23,32(sp)
   88780:	dd800717 	ldw	r22,28(sp)
   88784:	dd400617 	ldw	r21,24(sp)
   88788:	dd000517 	ldw	r20,20(sp)
   8878c:	dcc00417 	ldw	r19,16(sp)
   88790:	dc800317 	ldw	r18,12(sp)
   88794:	dc400217 	ldw	r17,8(sp)
   88798:	dc000117 	ldw	r16,4(sp)
   8879c:	dec00b04 	addi	sp,sp,44
   887a0:	f800283a 	ret
   887a4:	00864840 	call	86484 <__swsetup_r>
   887a8:	1000e41e 	bne	r2,zero,88b3c <__sfvwrite_r+0x480>
   887ac:	91c0030b 	ldhu	r7,12(r18)
   887b0:	b5400017 	ldw	r21,0(r22)
   887b4:	3880008c 	andi	r2,r7,2
   887b8:	103fd81e 	bne	r2,zero,8871c <__sfvwrite_r+0x60>
   887bc:	3880004c 	andi	r2,r7,1
   887c0:	1005003a 	cmpeq	r2,r2,zero
   887c4:	10005726 	beq	r2,zero,88924 <__sfvwrite_r+0x268>
   887c8:	0029883a 	mov	r20,zero
   887cc:	002f883a 	mov	r23,zero
   887d0:	a0004226 	beq	r20,zero,888dc <__sfvwrite_r+0x220>
   887d4:	3880800c 	andi	r2,r7,512
   887d8:	94000217 	ldw	r16,8(r18)
   887dc:	10008b26 	beq	r2,zero,88a0c <__sfvwrite_r+0x350>
   887e0:	800d883a 	mov	r6,r16
   887e4:	a400a536 	bltu	r20,r16,88a7c <__sfvwrite_r+0x3c0>
   887e8:	3881200c 	andi	r2,r7,1152
   887ec:	10002726 	beq	r2,zero,8888c <__sfvwrite_r+0x1d0>
   887f0:	90800517 	ldw	r2,20(r18)
   887f4:	92000417 	ldw	r8,16(r18)
   887f8:	91400017 	ldw	r5,0(r18)
   887fc:	1087883a 	add	r3,r2,r2
   88800:	1887883a 	add	r3,r3,r2
   88804:	1808d7fa 	srli	r4,r3,31
   88808:	2a21c83a 	sub	r16,r5,r8
   8880c:	80800044 	addi	r2,r16,1
   88810:	20c9883a 	add	r4,r4,r3
   88814:	2027d07a 	srai	r19,r4,1
   88818:	a085883a 	add	r2,r20,r2
   8881c:	980d883a 	mov	r6,r19
   88820:	9880022e 	bgeu	r19,r2,8882c <__sfvwrite_r+0x170>
   88824:	1027883a 	mov	r19,r2
   88828:	100d883a 	mov	r6,r2
   8882c:	3881000c 	andi	r2,r7,1024
   88830:	1000b826 	beq	r2,zero,88b14 <__sfvwrite_r+0x458>
   88834:	300b883a 	mov	r5,r6
   88838:	e009883a 	mov	r4,fp
   8883c:	0088f300 	call	88f30 <_malloc_r>
   88840:	10003126 	beq	r2,zero,88908 <__sfvwrite_r+0x24c>
   88844:	91400417 	ldw	r5,16(r18)
   88848:	1009883a 	mov	r4,r2
   8884c:	800d883a 	mov	r6,r16
   88850:	1023883a 	mov	r17,r2
   88854:	00897540 	call	89754 <memcpy>
   88858:	90c0030b 	ldhu	r3,12(r18)
   8885c:	00beffc4 	movi	r2,-1025
   88860:	1886703a 	and	r3,r3,r2
   88864:	18c02014 	ori	r3,r3,128
   88868:	90c0030d 	sth	r3,12(r18)
   8886c:	9c07c83a 	sub	r3,r19,r16
   88870:	8c05883a 	add	r2,r17,r16
   88874:	a00d883a 	mov	r6,r20
   88878:	a021883a 	mov	r16,r20
   8887c:	90800015 	stw	r2,0(r18)
   88880:	90c00215 	stw	r3,8(r18)
   88884:	94400415 	stw	r17,16(r18)
   88888:	94c00515 	stw	r19,20(r18)
   8888c:	91000017 	ldw	r4,0(r18)
   88890:	b80b883a 	mov	r5,r23
   88894:	a023883a 	mov	r17,r20
   88898:	00897f40 	call	897f4 <memmove>
   8889c:	90c00217 	ldw	r3,8(r18)
   888a0:	90800017 	ldw	r2,0(r18)
   888a4:	a027883a 	mov	r19,r20
   888a8:	1c07c83a 	sub	r3,r3,r16
   888ac:	1405883a 	add	r2,r2,r16
   888b0:	90c00215 	stw	r3,8(r18)
   888b4:	a021883a 	mov	r16,r20
   888b8:	90800015 	stw	r2,0(r18)
   888bc:	b0800217 	ldw	r2,8(r22)
   888c0:	1405c83a 	sub	r2,r2,r16
   888c4:	b0800215 	stw	r2,8(r22)
   888c8:	103fa826 	beq	r2,zero,8876c <__sfvwrite_r+0xb0>
   888cc:	a469c83a 	sub	r20,r20,r17
   888d0:	91c0030b 	ldhu	r7,12(r18)
   888d4:	bcef883a 	add	r23,r23,r19
   888d8:	a03fbe1e 	bne	r20,zero,887d4 <__sfvwrite_r+0x118>
   888dc:	adc00017 	ldw	r23,0(r21)
   888e0:	ad000117 	ldw	r20,4(r21)
   888e4:	ad400204 	addi	r21,r21,8
   888e8:	003fb906 	br	887d0 <__sfvwrite_r+0x114>
   888ec:	ac400017 	ldw	r17,0(r21)
   888f0:	ac000117 	ldw	r16,4(r21)
   888f4:	ad400204 	addi	r21,r21,8
   888f8:	003f8a06 	br	88724 <__sfvwrite_r+0x68>
   888fc:	91400417 	ldw	r5,16(r18)
   88900:	e009883a 	mov	r4,fp
   88904:	00883a80 	call	883a8 <_free_r>
   88908:	00800304 	movi	r2,12
   8890c:	e0800015 	stw	r2,0(fp)
   88910:	9080030b 	ldhu	r2,12(r18)
   88914:	013fffc4 	movi	r4,-1
   88918:	10801014 	ori	r2,r2,64
   8891c:	9080030d 	sth	r2,12(r18)
   88920:	003f9306 	br	88770 <__sfvwrite_r+0xb4>
   88924:	0027883a 	mov	r19,zero
   88928:	002f883a 	mov	r23,zero
   8892c:	d8000015 	stw	zero,0(sp)
   88930:	0029883a 	mov	r20,zero
   88934:	98001e26 	beq	r19,zero,889b0 <__sfvwrite_r+0x2f4>
   88938:	d8c00017 	ldw	r3,0(sp)
   8893c:	1804c03a 	cmpne	r2,r3,zero
   88940:	10005e26 	beq	r2,zero,88abc <__sfvwrite_r+0x400>
   88944:	9821883a 	mov	r16,r19
   88948:	a4c0012e 	bgeu	r20,r19,88950 <__sfvwrite_r+0x294>
   8894c:	a021883a 	mov	r16,r20
   88950:	91000017 	ldw	r4,0(r18)
   88954:	90800417 	ldw	r2,16(r18)
   88958:	91800217 	ldw	r6,8(r18)
   8895c:	91c00517 	ldw	r7,20(r18)
   88960:	1100022e 	bgeu	r2,r4,8896c <__sfvwrite_r+0x2b0>
   88964:	31e3883a 	add	r17,r6,r7
   88968:	8c001616 	blt	r17,r16,889c4 <__sfvwrite_r+0x308>
   8896c:	81c03816 	blt	r16,r7,88a50 <__sfvwrite_r+0x394>
   88970:	90c00917 	ldw	r3,36(r18)
   88974:	91400717 	ldw	r5,28(r18)
   88978:	e009883a 	mov	r4,fp
   8897c:	b80d883a 	mov	r6,r23
   88980:	183ee83a 	callr	r3
   88984:	1023883a 	mov	r17,r2
   88988:	00bfe10e 	bge	zero,r2,88910 <__sfvwrite_r+0x254>
   8898c:	a469c83a 	sub	r20,r20,r17
   88990:	a0001826 	beq	r20,zero,889f4 <__sfvwrite_r+0x338>
   88994:	b0800217 	ldw	r2,8(r22)
   88998:	1445c83a 	sub	r2,r2,r17
   8899c:	b0800215 	stw	r2,8(r22)
   889a0:	103f7226 	beq	r2,zero,8876c <__sfvwrite_r+0xb0>
   889a4:	9c67c83a 	sub	r19,r19,r17
   889a8:	bc6f883a 	add	r23,r23,r17
   889ac:	983fe21e 	bne	r19,zero,88938 <__sfvwrite_r+0x27c>
   889b0:	adc00017 	ldw	r23,0(r21)
   889b4:	acc00117 	ldw	r19,4(r21)
   889b8:	ad400204 	addi	r21,r21,8
   889bc:	d8000015 	stw	zero,0(sp)
   889c0:	003fdc06 	br	88934 <__sfvwrite_r+0x278>
   889c4:	b80b883a 	mov	r5,r23
   889c8:	880d883a 	mov	r6,r17
   889cc:	00897f40 	call	897f4 <memmove>
   889d0:	90c00017 	ldw	r3,0(r18)
   889d4:	e009883a 	mov	r4,fp
   889d8:	900b883a 	mov	r5,r18
   889dc:	1c47883a 	add	r3,r3,r17
   889e0:	90c00015 	stw	r3,0(r18)
   889e4:	0087d8c0 	call	87d8c <_fflush_r>
   889e8:	103fc91e 	bne	r2,zero,88910 <__sfvwrite_r+0x254>
   889ec:	a469c83a 	sub	r20,r20,r17
   889f0:	a03fe81e 	bne	r20,zero,88994 <__sfvwrite_r+0x2d8>
   889f4:	e009883a 	mov	r4,fp
   889f8:	900b883a 	mov	r5,r18
   889fc:	0087d8c0 	call	87d8c <_fflush_r>
   88a00:	103fc31e 	bne	r2,zero,88910 <__sfvwrite_r+0x254>
   88a04:	d8000015 	stw	zero,0(sp)
   88a08:	003fe206 	br	88994 <__sfvwrite_r+0x2d8>
   88a0c:	91000017 	ldw	r4,0(r18)
   88a10:	90800417 	ldw	r2,16(r18)
   88a14:	1100022e 	bgeu	r2,r4,88a20 <__sfvwrite_r+0x364>
   88a18:	8023883a 	mov	r17,r16
   88a1c:	85003136 	bltu	r16,r20,88ae4 <__sfvwrite_r+0x428>
   88a20:	91c00517 	ldw	r7,20(r18)
   88a24:	a1c01836 	bltu	r20,r7,88a88 <__sfvwrite_r+0x3cc>
   88a28:	90c00917 	ldw	r3,36(r18)
   88a2c:	91400717 	ldw	r5,28(r18)
   88a30:	e009883a 	mov	r4,fp
   88a34:	b80d883a 	mov	r6,r23
   88a38:	183ee83a 	callr	r3
   88a3c:	1021883a 	mov	r16,r2
   88a40:	00bfb30e 	bge	zero,r2,88910 <__sfvwrite_r+0x254>
   88a44:	1023883a 	mov	r17,r2
   88a48:	1027883a 	mov	r19,r2
   88a4c:	003f9b06 	br	888bc <__sfvwrite_r+0x200>
   88a50:	b80b883a 	mov	r5,r23
   88a54:	800d883a 	mov	r6,r16
   88a58:	00897f40 	call	897f4 <memmove>
   88a5c:	90c00217 	ldw	r3,8(r18)
   88a60:	90800017 	ldw	r2,0(r18)
   88a64:	8023883a 	mov	r17,r16
   88a68:	1c07c83a 	sub	r3,r3,r16
   88a6c:	1405883a 	add	r2,r2,r16
   88a70:	90c00215 	stw	r3,8(r18)
   88a74:	90800015 	stw	r2,0(r18)
   88a78:	003fc406 	br	8898c <__sfvwrite_r+0x2d0>
   88a7c:	a00d883a 	mov	r6,r20
   88a80:	a021883a 	mov	r16,r20
   88a84:	003f8106 	br	8888c <__sfvwrite_r+0x1d0>
   88a88:	b80b883a 	mov	r5,r23
   88a8c:	a00d883a 	mov	r6,r20
   88a90:	00897f40 	call	897f4 <memmove>
   88a94:	90c00217 	ldw	r3,8(r18)
   88a98:	90800017 	ldw	r2,0(r18)
   88a9c:	a021883a 	mov	r16,r20
   88aa0:	1d07c83a 	sub	r3,r3,r20
   88aa4:	1505883a 	add	r2,r2,r20
   88aa8:	a023883a 	mov	r17,r20
   88aac:	a027883a 	mov	r19,r20
   88ab0:	90c00215 	stw	r3,8(r18)
   88ab4:	90800015 	stw	r2,0(r18)
   88ab8:	003f8006 	br	888bc <__sfvwrite_r+0x200>
   88abc:	b809883a 	mov	r4,r23
   88ac0:	01400284 	movi	r5,10
   88ac4:	980d883a 	mov	r6,r19
   88ac8:	00896700 	call	89670 <memchr>
   88acc:	10001726 	beq	r2,zero,88b2c <__sfvwrite_r+0x470>
   88ad0:	15c5c83a 	sub	r2,r2,r23
   88ad4:	15000044 	addi	r20,r2,1
   88ad8:	00800044 	movi	r2,1
   88adc:	d8800015 	stw	r2,0(sp)
   88ae0:	003f9806 	br	88944 <__sfvwrite_r+0x288>
   88ae4:	b80b883a 	mov	r5,r23
   88ae8:	800d883a 	mov	r6,r16
   88aec:	00897f40 	call	897f4 <memmove>
   88af0:	90c00017 	ldw	r3,0(r18)
   88af4:	e009883a 	mov	r4,fp
   88af8:	900b883a 	mov	r5,r18
   88afc:	1c07883a 	add	r3,r3,r16
   88b00:	90c00015 	stw	r3,0(r18)
   88b04:	8027883a 	mov	r19,r16
   88b08:	0087d8c0 	call	87d8c <_fflush_r>
   88b0c:	103f6b26 	beq	r2,zero,888bc <__sfvwrite_r+0x200>
   88b10:	003f7f06 	br	88910 <__sfvwrite_r+0x254>
   88b14:	400b883a 	mov	r5,r8
   88b18:	e009883a 	mov	r4,fp
   88b1c:	008a9600 	call	8a960 <_realloc_r>
   88b20:	103f7626 	beq	r2,zero,888fc <__sfvwrite_r+0x240>
   88b24:	1023883a 	mov	r17,r2
   88b28:	003f5006 	br	8886c <__sfvwrite_r+0x1b0>
   88b2c:	00c00044 	movi	r3,1
   88b30:	9d000044 	addi	r20,r19,1
   88b34:	d8c00015 	stw	r3,0(sp)
   88b38:	003f8206 	br	88944 <__sfvwrite_r+0x288>
   88b3c:	9080030b 	ldhu	r2,12(r18)
   88b40:	00c00244 	movi	r3,9
   88b44:	013fffc4 	movi	r4,-1
   88b48:	10801014 	ori	r2,r2,64
   88b4c:	9080030d 	sth	r2,12(r18)
   88b50:	e0c00015 	stw	r3,0(fp)
   88b54:	003f0606 	br	88770 <__sfvwrite_r+0xb4>

00088b58 <_fwalk_reent>:
   88b58:	defff704 	addi	sp,sp,-36
   88b5c:	dcc00315 	stw	r19,12(sp)
   88b60:	24c0b804 	addi	r19,r4,736
   88b64:	dd800615 	stw	r22,24(sp)
   88b68:	dd400515 	stw	r21,20(sp)
   88b6c:	dfc00815 	stw	ra,32(sp)
   88b70:	ddc00715 	stw	r23,28(sp)
   88b74:	dd000415 	stw	r20,16(sp)
   88b78:	dc800215 	stw	r18,8(sp)
   88b7c:	dc400115 	stw	r17,4(sp)
   88b80:	dc000015 	stw	r16,0(sp)
   88b84:	202b883a 	mov	r21,r4
   88b88:	282d883a 	mov	r22,r5
   88b8c:	00880140 	call	88014 <__sfp_lock_acquire>
   88b90:	98002126 	beq	r19,zero,88c18 <_fwalk_reent+0xc0>
   88b94:	002f883a 	mov	r23,zero
   88b98:	9c800117 	ldw	r18,4(r19)
   88b9c:	9c000217 	ldw	r16,8(r19)
   88ba0:	90bfffc4 	addi	r2,r18,-1
   88ba4:	10000d16 	blt	r2,zero,88bdc <_fwalk_reent+0x84>
   88ba8:	0023883a 	mov	r17,zero
   88bac:	053fffc4 	movi	r20,-1
   88bb0:	8080030f 	ldh	r2,12(r16)
   88bb4:	8c400044 	addi	r17,r17,1
   88bb8:	10000626 	beq	r2,zero,88bd4 <_fwalk_reent+0x7c>
   88bbc:	8080038f 	ldh	r2,14(r16)
   88bc0:	800b883a 	mov	r5,r16
   88bc4:	a809883a 	mov	r4,r21
   88bc8:	15000226 	beq	r2,r20,88bd4 <_fwalk_reent+0x7c>
   88bcc:	b03ee83a 	callr	r22
   88bd0:	b8aeb03a 	or	r23,r23,r2
   88bd4:	84001704 	addi	r16,r16,92
   88bd8:	947ff51e 	bne	r18,r17,88bb0 <_fwalk_reent+0x58>
   88bdc:	9cc00017 	ldw	r19,0(r19)
   88be0:	983fed1e 	bne	r19,zero,88b98 <_fwalk_reent+0x40>
   88be4:	00880180 	call	88018 <__sfp_lock_release>
   88be8:	b805883a 	mov	r2,r23
   88bec:	dfc00817 	ldw	ra,32(sp)
   88bf0:	ddc00717 	ldw	r23,28(sp)
   88bf4:	dd800617 	ldw	r22,24(sp)
   88bf8:	dd400517 	ldw	r21,20(sp)
   88bfc:	dd000417 	ldw	r20,16(sp)
   88c00:	dcc00317 	ldw	r19,12(sp)
   88c04:	dc800217 	ldw	r18,8(sp)
   88c08:	dc400117 	ldw	r17,4(sp)
   88c0c:	dc000017 	ldw	r16,0(sp)
   88c10:	dec00904 	addi	sp,sp,36
   88c14:	f800283a 	ret
   88c18:	002f883a 	mov	r23,zero
   88c1c:	003ff106 	br	88be4 <_fwalk_reent+0x8c>

00088c20 <_fwalk>:
   88c20:	defff804 	addi	sp,sp,-32
   88c24:	dcc00315 	stw	r19,12(sp)
   88c28:	24c0b804 	addi	r19,r4,736
   88c2c:	dd400515 	stw	r21,20(sp)
   88c30:	dfc00715 	stw	ra,28(sp)
   88c34:	dd800615 	stw	r22,24(sp)
   88c38:	dd000415 	stw	r20,16(sp)
   88c3c:	dc800215 	stw	r18,8(sp)
   88c40:	dc400115 	stw	r17,4(sp)
   88c44:	dc000015 	stw	r16,0(sp)
   88c48:	282b883a 	mov	r21,r5
   88c4c:	00880140 	call	88014 <__sfp_lock_acquire>
   88c50:	98001f26 	beq	r19,zero,88cd0 <_fwalk+0xb0>
   88c54:	002d883a 	mov	r22,zero
   88c58:	9c800117 	ldw	r18,4(r19)
   88c5c:	9c000217 	ldw	r16,8(r19)
   88c60:	90bfffc4 	addi	r2,r18,-1
   88c64:	10000c16 	blt	r2,zero,88c98 <_fwalk+0x78>
   88c68:	0023883a 	mov	r17,zero
   88c6c:	053fffc4 	movi	r20,-1
   88c70:	8080030f 	ldh	r2,12(r16)
   88c74:	8c400044 	addi	r17,r17,1
   88c78:	10000526 	beq	r2,zero,88c90 <_fwalk+0x70>
   88c7c:	8080038f 	ldh	r2,14(r16)
   88c80:	8009883a 	mov	r4,r16
   88c84:	15000226 	beq	r2,r20,88c90 <_fwalk+0x70>
   88c88:	a83ee83a 	callr	r21
   88c8c:	b0acb03a 	or	r22,r22,r2
   88c90:	84001704 	addi	r16,r16,92
   88c94:	947ff61e 	bne	r18,r17,88c70 <_fwalk+0x50>
   88c98:	9cc00017 	ldw	r19,0(r19)
   88c9c:	983fee1e 	bne	r19,zero,88c58 <_fwalk+0x38>
   88ca0:	00880180 	call	88018 <__sfp_lock_release>
   88ca4:	b005883a 	mov	r2,r22
   88ca8:	dfc00717 	ldw	ra,28(sp)
   88cac:	dd800617 	ldw	r22,24(sp)
   88cb0:	dd400517 	ldw	r21,20(sp)
   88cb4:	dd000417 	ldw	r20,16(sp)
   88cb8:	dcc00317 	ldw	r19,12(sp)
   88cbc:	dc800217 	ldw	r18,8(sp)
   88cc0:	dc400117 	ldw	r17,4(sp)
   88cc4:	dc000017 	ldw	r16,0(sp)
   88cc8:	dec00804 	addi	sp,sp,32
   88ccc:	f800283a 	ret
   88cd0:	002d883a 	mov	r22,zero
   88cd4:	003ff206 	br	88ca0 <_fwalk+0x80>

00088cd8 <__locale_charset>:
   88cd8:	d0a00317 	ldw	r2,-32756(gp)
   88cdc:	f800283a 	ret

00088ce0 <_localeconv_r>:
   88ce0:	00800274 	movhi	r2,9
   88ce4:	10bd3604 	addi	r2,r2,-2856
   88ce8:	f800283a 	ret

00088cec <localeconv>:
   88cec:	00800274 	movhi	r2,9
   88cf0:	1084af04 	addi	r2,r2,4796
   88cf4:	11000017 	ldw	r4,0(r2)
   88cf8:	0088ce01 	jmpi	88ce0 <_localeconv_r>

00088cfc <_setlocale_r>:
   88cfc:	defffc04 	addi	sp,sp,-16
   88d00:	00c00274 	movhi	r3,9
   88d04:	18fd3104 	addi	r3,r3,-2876
   88d08:	dc800215 	stw	r18,8(sp)
   88d0c:	dc400115 	stw	r17,4(sp)
   88d10:	dc000015 	stw	r16,0(sp)
   88d14:	2023883a 	mov	r17,r4
   88d18:	2825883a 	mov	r18,r5
   88d1c:	dfc00315 	stw	ra,12(sp)
   88d20:	3021883a 	mov	r16,r6
   88d24:	3009883a 	mov	r4,r6
   88d28:	180b883a 	mov	r5,r3
   88d2c:	30000926 	beq	r6,zero,88d54 <_setlocale_r+0x58>
   88d30:	008b1800 	call	8b180 <strcmp>
   88d34:	8009883a 	mov	r4,r16
   88d38:	01400274 	movhi	r5,9
   88d3c:	297d1c04 	addi	r5,r5,-2960
   88d40:	10000b1e 	bne	r2,zero,88d70 <_setlocale_r+0x74>
   88d44:	8c000d15 	stw	r16,52(r17)
   88d48:	8c800c15 	stw	r18,48(r17)
   88d4c:	00c00274 	movhi	r3,9
   88d50:	18fd3104 	addi	r3,r3,-2876
   88d54:	1805883a 	mov	r2,r3
   88d58:	dfc00317 	ldw	ra,12(sp)
   88d5c:	dc800217 	ldw	r18,8(sp)
   88d60:	dc400117 	ldw	r17,4(sp)
   88d64:	dc000017 	ldw	r16,0(sp)
   88d68:	dec00404 	addi	sp,sp,16
   88d6c:	f800283a 	ret
   88d70:	008b1800 	call	8b180 <strcmp>
   88d74:	0007883a 	mov	r3,zero
   88d78:	103ff226 	beq	r2,zero,88d44 <_setlocale_r+0x48>
   88d7c:	003ff506 	br	88d54 <_setlocale_r+0x58>

00088d80 <setlocale>:
   88d80:	01800274 	movhi	r6,9
   88d84:	3184af04 	addi	r6,r6,4796
   88d88:	2007883a 	mov	r3,r4
   88d8c:	31000017 	ldw	r4,0(r6)
   88d90:	280d883a 	mov	r6,r5
   88d94:	180b883a 	mov	r5,r3
   88d98:	0088cfc1 	jmpi	88cfc <_setlocale_r>

00088d9c <__smakebuf_r>:
   88d9c:	2880030b 	ldhu	r2,12(r5)
   88da0:	deffed04 	addi	sp,sp,-76
   88da4:	dc401015 	stw	r17,64(sp)
   88da8:	1080008c 	andi	r2,r2,2
   88dac:	dc000f15 	stw	r16,60(sp)
   88db0:	dfc01215 	stw	ra,72(sp)
   88db4:	dc801115 	stw	r18,68(sp)
   88db8:	2821883a 	mov	r16,r5
   88dbc:	2023883a 	mov	r17,r4
   88dc0:	10000b26 	beq	r2,zero,88df0 <__smakebuf_r+0x54>
   88dc4:	28c010c4 	addi	r3,r5,67
   88dc8:	00800044 	movi	r2,1
   88dcc:	28800515 	stw	r2,20(r5)
   88dd0:	28c00415 	stw	r3,16(r5)
   88dd4:	28c00015 	stw	r3,0(r5)
   88dd8:	dfc01217 	ldw	ra,72(sp)
   88ddc:	dc801117 	ldw	r18,68(sp)
   88de0:	dc401017 	ldw	r17,64(sp)
   88de4:	dc000f17 	ldw	r16,60(sp)
   88de8:	dec01304 	addi	sp,sp,76
   88dec:	f800283a 	ret
   88df0:	2940038f 	ldh	r5,14(r5)
   88df4:	28002116 	blt	r5,zero,88e7c <__smakebuf_r+0xe0>
   88df8:	d80d883a 	mov	r6,sp
   88dfc:	008b5700 	call	8b570 <_fstat_r>
   88e00:	10001e16 	blt	r2,zero,88e7c <__smakebuf_r+0xe0>
   88e04:	d8800117 	ldw	r2,4(sp)
   88e08:	00e00014 	movui	r3,32768
   88e0c:	113c000c 	andi	r4,r2,61440
   88e10:	20c03126 	beq	r4,r3,88ed8 <__smakebuf_r+0x13c>
   88e14:	8080030b 	ldhu	r2,12(r16)
   88e18:	00c80004 	movi	r3,8192
   88e1c:	10820014 	ori	r2,r2,2048
   88e20:	8080030d 	sth	r2,12(r16)
   88e24:	20c01e26 	beq	r4,r3,88ea0 <__smakebuf_r+0x104>
   88e28:	04810004 	movi	r18,1024
   88e2c:	8809883a 	mov	r4,r17
   88e30:	900b883a 	mov	r5,r18
   88e34:	0088f300 	call	88f30 <_malloc_r>
   88e38:	1009883a 	mov	r4,r2
   88e3c:	10003126 	beq	r2,zero,88f04 <__smakebuf_r+0x168>
   88e40:	80c0030b 	ldhu	r3,12(r16)
   88e44:	00800274 	movhi	r2,9
   88e48:	10a04204 	addi	r2,r2,-32504
   88e4c:	88800f15 	stw	r2,60(r17)
   88e50:	18c02014 	ori	r3,r3,128
   88e54:	84800515 	stw	r18,20(r16)
   88e58:	80c0030d 	sth	r3,12(r16)
   88e5c:	81000415 	stw	r4,16(r16)
   88e60:	81000015 	stw	r4,0(r16)
   88e64:	dfc01217 	ldw	ra,72(sp)
   88e68:	dc801117 	ldw	r18,68(sp)
   88e6c:	dc401017 	ldw	r17,64(sp)
   88e70:	dc000f17 	ldw	r16,60(sp)
   88e74:	dec01304 	addi	sp,sp,76
   88e78:	f800283a 	ret
   88e7c:	80c0030b 	ldhu	r3,12(r16)
   88e80:	1880200c 	andi	r2,r3,128
   88e84:	10000426 	beq	r2,zero,88e98 <__smakebuf_r+0xfc>
   88e88:	04801004 	movi	r18,64
   88e8c:	18820014 	ori	r2,r3,2048
   88e90:	8080030d 	sth	r2,12(r16)
   88e94:	003fe506 	br	88e2c <__smakebuf_r+0x90>
   88e98:	04810004 	movi	r18,1024
   88e9c:	003ffb06 	br	88e8c <__smakebuf_r+0xf0>
   88ea0:	8140038f 	ldh	r5,14(r16)
   88ea4:	8809883a 	mov	r4,r17
   88ea8:	008b5e40 	call	8b5e4 <_isatty_r>
   88eac:	103fde26 	beq	r2,zero,88e28 <__smakebuf_r+0x8c>
   88eb0:	8080030b 	ldhu	r2,12(r16)
   88eb4:	80c010c4 	addi	r3,r16,67
   88eb8:	04810004 	movi	r18,1024
   88ebc:	10800054 	ori	r2,r2,1
   88ec0:	8080030d 	sth	r2,12(r16)
   88ec4:	00800044 	movi	r2,1
   88ec8:	80c00415 	stw	r3,16(r16)
   88ecc:	80800515 	stw	r2,20(r16)
   88ed0:	80c00015 	stw	r3,0(r16)
   88ed4:	003fd506 	br	88e2c <__smakebuf_r+0x90>
   88ed8:	80c00a17 	ldw	r3,40(r16)
   88edc:	00800274 	movhi	r2,9
   88ee0:	10ac0f04 	addi	r2,r2,-20420
   88ee4:	18bfcb1e 	bne	r3,r2,88e14 <__smakebuf_r+0x78>
   88ee8:	8080030b 	ldhu	r2,12(r16)
   88eec:	00c10004 	movi	r3,1024
   88ef0:	1825883a 	mov	r18,r3
   88ef4:	10c4b03a 	or	r2,r2,r3
   88ef8:	8080030d 	sth	r2,12(r16)
   88efc:	80c01315 	stw	r3,76(r16)
   88f00:	003fca06 	br	88e2c <__smakebuf_r+0x90>
   88f04:	8100030b 	ldhu	r4,12(r16)
   88f08:	2080800c 	andi	r2,r4,512
   88f0c:	103fb21e 	bne	r2,zero,88dd8 <__smakebuf_r+0x3c>
   88f10:	80c010c4 	addi	r3,r16,67
   88f14:	21000094 	ori	r4,r4,2
   88f18:	00800044 	movi	r2,1
   88f1c:	80800515 	stw	r2,20(r16)
   88f20:	8100030d 	sth	r4,12(r16)
   88f24:	80c00415 	stw	r3,16(r16)
   88f28:	80c00015 	stw	r3,0(r16)
   88f2c:	003faa06 	br	88dd8 <__smakebuf_r+0x3c>

00088f30 <_malloc_r>:
   88f30:	defff604 	addi	sp,sp,-40
   88f34:	28c002c4 	addi	r3,r5,11
   88f38:	00800584 	movi	r2,22
   88f3c:	dc800215 	stw	r18,8(sp)
   88f40:	dfc00915 	stw	ra,36(sp)
   88f44:	df000815 	stw	fp,32(sp)
   88f48:	ddc00715 	stw	r23,28(sp)
   88f4c:	dd800615 	stw	r22,24(sp)
   88f50:	dd400515 	stw	r21,20(sp)
   88f54:	dd000415 	stw	r20,16(sp)
   88f58:	dcc00315 	stw	r19,12(sp)
   88f5c:	dc400115 	stw	r17,4(sp)
   88f60:	dc000015 	stw	r16,0(sp)
   88f64:	2025883a 	mov	r18,r4
   88f68:	10c01236 	bltu	r2,r3,88fb4 <_malloc_r+0x84>
   88f6c:	04400404 	movi	r17,16
   88f70:	8940142e 	bgeu	r17,r5,88fc4 <_malloc_r+0x94>
   88f74:	00800304 	movi	r2,12
   88f78:	0007883a 	mov	r3,zero
   88f7c:	90800015 	stw	r2,0(r18)
   88f80:	1805883a 	mov	r2,r3
   88f84:	dfc00917 	ldw	ra,36(sp)
   88f88:	df000817 	ldw	fp,32(sp)
   88f8c:	ddc00717 	ldw	r23,28(sp)
   88f90:	dd800617 	ldw	r22,24(sp)
   88f94:	dd400517 	ldw	r21,20(sp)
   88f98:	dd000417 	ldw	r20,16(sp)
   88f9c:	dcc00317 	ldw	r19,12(sp)
   88fa0:	dc800217 	ldw	r18,8(sp)
   88fa4:	dc400117 	ldw	r17,4(sp)
   88fa8:	dc000017 	ldw	r16,0(sp)
   88fac:	dec00a04 	addi	sp,sp,40
   88fb0:	f800283a 	ret
   88fb4:	00bffe04 	movi	r2,-8
   88fb8:	18a2703a 	and	r17,r3,r2
   88fbc:	883fed16 	blt	r17,zero,88f74 <_malloc_r+0x44>
   88fc0:	897fec36 	bltu	r17,r5,88f74 <_malloc_r+0x44>
   88fc4:	9009883a 	mov	r4,r18
   88fc8:	008ce500 	call	8ce50 <__malloc_lock>
   88fcc:	00807dc4 	movi	r2,503
   88fd0:	14402b2e 	bgeu	r2,r17,89080 <_malloc_r+0x150>
   88fd4:	8806d27a 	srli	r3,r17,9
   88fd8:	18003f1e 	bne	r3,zero,890d8 <_malloc_r+0x1a8>
   88fdc:	880cd0fa 	srli	r6,r17,3
   88fe0:	300490fa 	slli	r2,r6,3
   88fe4:	02c00274 	movhi	r11,9
   88fe8:	5aff2b04 	addi	r11,r11,-852
   88fec:	12cb883a 	add	r5,r2,r11
   88ff0:	2c000317 	ldw	r16,12(r5)
   88ff4:	580f883a 	mov	r7,r11
   88ff8:	2c00041e 	bne	r5,r16,8900c <_malloc_r+0xdc>
   88ffc:	00000a06 	br	89028 <_malloc_r+0xf8>
   89000:	1800860e 	bge	r3,zero,8921c <_malloc_r+0x2ec>
   89004:	84000317 	ldw	r16,12(r16)
   89008:	2c000726 	beq	r5,r16,89028 <_malloc_r+0xf8>
   8900c:	80800117 	ldw	r2,4(r16)
   89010:	00ffff04 	movi	r3,-4
   89014:	10c8703a 	and	r4,r2,r3
   89018:	2447c83a 	sub	r3,r4,r17
   8901c:	008003c4 	movi	r2,15
   89020:	10fff70e 	bge	r2,r3,89000 <_malloc_r+0xd0>
   89024:	31bfffc4 	addi	r6,r6,-1
   89028:	32400044 	addi	r9,r6,1
   8902c:	02800274 	movhi	r10,9
   89030:	52bf2d04 	addi	r10,r10,-844
   89034:	54000217 	ldw	r16,8(r10)
   89038:	8280a026 	beq	r16,r10,892bc <_malloc_r+0x38c>
   8903c:	80800117 	ldw	r2,4(r16)
   89040:	00ffff04 	movi	r3,-4
   89044:	10ca703a 	and	r5,r2,r3
   89048:	2c4dc83a 	sub	r6,r5,r17
   8904c:	008003c4 	movi	r2,15
   89050:	11808316 	blt	r2,r6,89260 <_malloc_r+0x330>
   89054:	52800315 	stw	r10,12(r10)
   89058:	52800215 	stw	r10,8(r10)
   8905c:	30002916 	blt	r6,zero,89104 <_malloc_r+0x1d4>
   89060:	8147883a 	add	r3,r16,r5
   89064:	18800117 	ldw	r2,4(r3)
   89068:	9009883a 	mov	r4,r18
   8906c:	10800054 	ori	r2,r2,1
   89070:	18800115 	stw	r2,4(r3)
   89074:	008ce700 	call	8ce70 <__malloc_unlock>
   89078:	80c00204 	addi	r3,r16,8
   8907c:	003fc006 	br	88f80 <_malloc_r+0x50>
   89080:	02c00274 	movhi	r11,9
   89084:	5aff2b04 	addi	r11,r11,-852
   89088:	8ac5883a 	add	r2,r17,r11
   8908c:	14000317 	ldw	r16,12(r2)
   89090:	580f883a 	mov	r7,r11
   89094:	8806d0fa 	srli	r3,r17,3
   89098:	14006c26 	beq	r2,r16,8924c <_malloc_r+0x31c>
   8909c:	80c00117 	ldw	r3,4(r16)
   890a0:	00bfff04 	movi	r2,-4
   890a4:	81800317 	ldw	r6,12(r16)
   890a8:	1886703a 	and	r3,r3,r2
   890ac:	80c7883a 	add	r3,r16,r3
   890b0:	18800117 	ldw	r2,4(r3)
   890b4:	81400217 	ldw	r5,8(r16)
   890b8:	9009883a 	mov	r4,r18
   890bc:	10800054 	ori	r2,r2,1
   890c0:	18800115 	stw	r2,4(r3)
   890c4:	31400215 	stw	r5,8(r6)
   890c8:	29800315 	stw	r6,12(r5)
   890cc:	008ce700 	call	8ce70 <__malloc_unlock>
   890d0:	80c00204 	addi	r3,r16,8
   890d4:	003faa06 	br	88f80 <_malloc_r+0x50>
   890d8:	00800104 	movi	r2,4
   890dc:	10c0052e 	bgeu	r2,r3,890f4 <_malloc_r+0x1c4>
   890e0:	00800504 	movi	r2,20
   890e4:	10c07836 	bltu	r2,r3,892c8 <_malloc_r+0x398>
   890e8:	198016c4 	addi	r6,r3,91
   890ec:	300490fa 	slli	r2,r6,3
   890f0:	003fbc06 	br	88fe4 <_malloc_r+0xb4>
   890f4:	8804d1ba 	srli	r2,r17,6
   890f8:	11800e04 	addi	r6,r2,56
   890fc:	300490fa 	slli	r2,r6,3
   89100:	003fb806 	br	88fe4 <_malloc_r+0xb4>
   89104:	00807fc4 	movi	r2,511
   89108:	1140bb36 	bltu	r2,r5,893f8 <_malloc_r+0x4c8>
   8910c:	2806d0fa 	srli	r3,r5,3
   89110:	573ffe04 	addi	fp,r10,-8
   89114:	00800044 	movi	r2,1
   89118:	180890fa 	slli	r4,r3,3
   8911c:	1807d0ba 	srai	r3,r3,2
   89120:	e1c00117 	ldw	r7,4(fp)
   89124:	5909883a 	add	r4,r11,r4
   89128:	21400217 	ldw	r5,8(r4)
   8912c:	10c4983a 	sll	r2,r2,r3
   89130:	81000315 	stw	r4,12(r16)
   89134:	81400215 	stw	r5,8(r16)
   89138:	388eb03a 	or	r7,r7,r2
   8913c:	2c000315 	stw	r16,12(r5)
   89140:	24000215 	stw	r16,8(r4)
   89144:	e1c00115 	stw	r7,4(fp)
   89148:	4807883a 	mov	r3,r9
   8914c:	4800cd16 	blt	r9,zero,89484 <_malloc_r+0x554>
   89150:	1807d0ba 	srai	r3,r3,2
   89154:	00800044 	movi	r2,1
   89158:	10c8983a 	sll	r4,r2,r3
   8915c:	39004436 	bltu	r7,r4,89270 <_malloc_r+0x340>
   89160:	21c4703a 	and	r2,r4,r7
   89164:	10000a1e 	bne	r2,zero,89190 <_malloc_r+0x260>
   89168:	2109883a 	add	r4,r4,r4
   8916c:	00bfff04 	movi	r2,-4
   89170:	4884703a 	and	r2,r9,r2
   89174:	3906703a 	and	r3,r7,r4
   89178:	12400104 	addi	r9,r2,4
   8917c:	1800041e 	bne	r3,zero,89190 <_malloc_r+0x260>
   89180:	2109883a 	add	r4,r4,r4
   89184:	3904703a 	and	r2,r7,r4
   89188:	4a400104 	addi	r9,r9,4
   8918c:	103ffc26 	beq	r2,zero,89180 <_malloc_r+0x250>
   89190:	480490fa 	slli	r2,r9,3
   89194:	4819883a 	mov	r12,r9
   89198:	023fff04 	movi	r8,-4
   8919c:	589b883a 	add	r13,r11,r2
   891a0:	6807883a 	mov	r3,r13
   891a4:	014003c4 	movi	r5,15
   891a8:	1c000317 	ldw	r16,12(r3)
   891ac:	1c00041e 	bne	r3,r16,891c0 <_malloc_r+0x290>
   891b0:	0000a706 	br	89450 <_malloc_r+0x520>
   891b4:	3000ab0e 	bge	r6,zero,89464 <_malloc_r+0x534>
   891b8:	84000317 	ldw	r16,12(r16)
   891bc:	1c00a426 	beq	r3,r16,89450 <_malloc_r+0x520>
   891c0:	80800117 	ldw	r2,4(r16)
   891c4:	1204703a 	and	r2,r2,r8
   891c8:	144dc83a 	sub	r6,r2,r17
   891cc:	29bff90e 	bge	r5,r6,891b4 <_malloc_r+0x284>
   891d0:	81000317 	ldw	r4,12(r16)
   891d4:	80c00217 	ldw	r3,8(r16)
   891d8:	89400054 	ori	r5,r17,1
   891dc:	8445883a 	add	r2,r16,r17
   891e0:	20c00215 	stw	r3,8(r4)
   891e4:	19000315 	stw	r4,12(r3)
   891e8:	81400115 	stw	r5,4(r16)
   891ec:	1187883a 	add	r3,r2,r6
   891f0:	31000054 	ori	r4,r6,1
   891f4:	50800315 	stw	r2,12(r10)
   891f8:	50800215 	stw	r2,8(r10)
   891fc:	19800015 	stw	r6,0(r3)
   89200:	11000115 	stw	r4,4(r2)
   89204:	12800215 	stw	r10,8(r2)
   89208:	12800315 	stw	r10,12(r2)
   8920c:	9009883a 	mov	r4,r18
   89210:	008ce700 	call	8ce70 <__malloc_unlock>
   89214:	80c00204 	addi	r3,r16,8
   89218:	003f5906 	br	88f80 <_malloc_r+0x50>
   8921c:	8109883a 	add	r4,r16,r4
   89220:	20800117 	ldw	r2,4(r4)
   89224:	80c00217 	ldw	r3,8(r16)
   89228:	81400317 	ldw	r5,12(r16)
   8922c:	10800054 	ori	r2,r2,1
   89230:	20800115 	stw	r2,4(r4)
   89234:	28c00215 	stw	r3,8(r5)
   89238:	19400315 	stw	r5,12(r3)
   8923c:	9009883a 	mov	r4,r18
   89240:	008ce700 	call	8ce70 <__malloc_unlock>
   89244:	80c00204 	addi	r3,r16,8
   89248:	003f4d06 	br	88f80 <_malloc_r+0x50>
   8924c:	80800204 	addi	r2,r16,8
   89250:	14000317 	ldw	r16,12(r2)
   89254:	143f911e 	bne	r2,r16,8909c <_malloc_r+0x16c>
   89258:	1a400084 	addi	r9,r3,2
   8925c:	003f7306 	br	8902c <_malloc_r+0xfc>
   89260:	88c00054 	ori	r3,r17,1
   89264:	8445883a 	add	r2,r16,r17
   89268:	80c00115 	stw	r3,4(r16)
   8926c:	003fdf06 	br	891ec <_malloc_r+0x2bc>
   89270:	e4000217 	ldw	r16,8(fp)
   89274:	00bfff04 	movi	r2,-4
   89278:	80c00117 	ldw	r3,4(r16)
   8927c:	802d883a 	mov	r22,r16
   89280:	18aa703a 	and	r21,r3,r2
   89284:	ac401636 	bltu	r21,r17,892e0 <_malloc_r+0x3b0>
   89288:	ac49c83a 	sub	r4,r21,r17
   8928c:	008003c4 	movi	r2,15
   89290:	1100130e 	bge	r2,r4,892e0 <_malloc_r+0x3b0>
   89294:	88800054 	ori	r2,r17,1
   89298:	8447883a 	add	r3,r16,r17
   8929c:	80800115 	stw	r2,4(r16)
   892a0:	20800054 	ori	r2,r4,1
   892a4:	18800115 	stw	r2,4(r3)
   892a8:	e0c00215 	stw	r3,8(fp)
   892ac:	9009883a 	mov	r4,r18
   892b0:	008ce700 	call	8ce70 <__malloc_unlock>
   892b4:	80c00204 	addi	r3,r16,8
   892b8:	003f3106 	br	88f80 <_malloc_r+0x50>
   892bc:	39c00117 	ldw	r7,4(r7)
   892c0:	573ffe04 	addi	fp,r10,-8
   892c4:	003fa006 	br	89148 <_malloc_r+0x218>
   892c8:	00801504 	movi	r2,84
   892cc:	10c06736 	bltu	r2,r3,8946c <_malloc_r+0x53c>
   892d0:	8804d33a 	srli	r2,r17,12
   892d4:	11801b84 	addi	r6,r2,110
   892d8:	300490fa 	slli	r2,r6,3
   892dc:	003f4106 	br	88fe4 <_malloc_r+0xb4>
   892e0:	d0a73a17 	ldw	r2,-25368(gp)
   892e4:	d0e00517 	ldw	r3,-32748(gp)
   892e8:	053fffc4 	movi	r20,-1
   892ec:	10800404 	addi	r2,r2,16
   892f0:	88a7883a 	add	r19,r17,r2
   892f4:	1d000326 	beq	r3,r20,89304 <_malloc_r+0x3d4>
   892f8:	98c3ffc4 	addi	r3,r19,4095
   892fc:	00bc0004 	movi	r2,-4096
   89300:	18a6703a 	and	r19,r3,r2
   89304:	9009883a 	mov	r4,r18
   89308:	980b883a 	mov	r5,r19
   8930c:	008afc40 	call	8afc4 <_sbrk_r>
   89310:	1009883a 	mov	r4,r2
   89314:	15000426 	beq	r2,r20,89328 <_malloc_r+0x3f8>
   89318:	854b883a 	add	r5,r16,r21
   8931c:	1029883a 	mov	r20,r2
   89320:	11405a2e 	bgeu	r2,r5,8948c <_malloc_r+0x55c>
   89324:	87000c26 	beq	r16,fp,89358 <_malloc_r+0x428>
   89328:	e4000217 	ldw	r16,8(fp)
   8932c:	80c00117 	ldw	r3,4(r16)
   89330:	00bfff04 	movi	r2,-4
   89334:	1884703a 	and	r2,r3,r2
   89338:	14400336 	bltu	r2,r17,89348 <_malloc_r+0x418>
   8933c:	1449c83a 	sub	r4,r2,r17
   89340:	008003c4 	movi	r2,15
   89344:	113fd316 	blt	r2,r4,89294 <_malloc_r+0x364>
   89348:	9009883a 	mov	r4,r18
   8934c:	008ce700 	call	8ce70 <__malloc_unlock>
   89350:	0007883a 	mov	r3,zero
   89354:	003f0a06 	br	88f80 <_malloc_r+0x50>
   89358:	05c00274 	movhi	r23,9
   8935c:	bdcbf304 	addi	r23,r23,12236
   89360:	b8800017 	ldw	r2,0(r23)
   89364:	988d883a 	add	r6,r19,r2
   89368:	b9800015 	stw	r6,0(r23)
   8936c:	d0e00517 	ldw	r3,-32748(gp)
   89370:	00bfffc4 	movi	r2,-1
   89374:	18808e26 	beq	r3,r2,895b0 <_malloc_r+0x680>
   89378:	2145c83a 	sub	r2,r4,r5
   8937c:	3085883a 	add	r2,r6,r2
   89380:	b8800015 	stw	r2,0(r23)
   89384:	20c001cc 	andi	r3,r4,7
   89388:	18005f1e 	bne	r3,zero,89508 <_malloc_r+0x5d8>
   8938c:	000b883a 	mov	r5,zero
   89390:	a4c5883a 	add	r2,r20,r19
   89394:	1083ffcc 	andi	r2,r2,4095
   89398:	00c40004 	movi	r3,4096
   8939c:	1887c83a 	sub	r3,r3,r2
   893a0:	28e7883a 	add	r19,r5,r3
   893a4:	9009883a 	mov	r4,r18
   893a8:	980b883a 	mov	r5,r19
   893ac:	008afc40 	call	8afc4 <_sbrk_r>
   893b0:	1007883a 	mov	r3,r2
   893b4:	00bfffc4 	movi	r2,-1
   893b8:	18807a26 	beq	r3,r2,895a4 <_malloc_r+0x674>
   893bc:	1d05c83a 	sub	r2,r3,r20
   893c0:	9885883a 	add	r2,r19,r2
   893c4:	10c00054 	ori	r3,r2,1
   893c8:	b8800017 	ldw	r2,0(r23)
   893cc:	a021883a 	mov	r16,r20
   893d0:	a0c00115 	stw	r3,4(r20)
   893d4:	9885883a 	add	r2,r19,r2
   893d8:	b8800015 	stw	r2,0(r23)
   893dc:	e5000215 	stw	r20,8(fp)
   893e0:	b7003626 	beq	r22,fp,894bc <_malloc_r+0x58c>
   893e4:	018003c4 	movi	r6,15
   893e8:	35404b36 	bltu	r6,r21,89518 <_malloc_r+0x5e8>
   893ec:	00800044 	movi	r2,1
   893f0:	a0800115 	stw	r2,4(r20)
   893f4:	003fcd06 	br	8932c <_malloc_r+0x3fc>
   893f8:	2808d27a 	srli	r4,r5,9
   893fc:	2000371e 	bne	r4,zero,894dc <_malloc_r+0x5ac>
   89400:	2808d0fa 	srli	r4,r5,3
   89404:	200690fa 	slli	r3,r4,3
   89408:	1ad1883a 	add	r8,r3,r11
   8940c:	41800217 	ldw	r6,8(r8)
   89410:	41805b26 	beq	r8,r6,89580 <_malloc_r+0x650>
   89414:	30800117 	ldw	r2,4(r6)
   89418:	00ffff04 	movi	r3,-4
   8941c:	10c4703a 	and	r2,r2,r3
   89420:	2880022e 	bgeu	r5,r2,8942c <_malloc_r+0x4fc>
   89424:	31800217 	ldw	r6,8(r6)
   89428:	41bffa1e 	bne	r8,r6,89414 <_malloc_r+0x4e4>
   8942c:	32000317 	ldw	r8,12(r6)
   89430:	39c00117 	ldw	r7,4(r7)
   89434:	82000315 	stw	r8,12(r16)
   89438:	81800215 	stw	r6,8(r16)
   8943c:	07000274 	movhi	fp,9
   89440:	e73f2b04 	addi	fp,fp,-852
   89444:	34000315 	stw	r16,12(r6)
   89448:	44000215 	stw	r16,8(r8)
   8944c:	003f3e06 	br	89148 <_malloc_r+0x218>
   89450:	63000044 	addi	r12,r12,1
   89454:	608000cc 	andi	r2,r12,3
   89458:	10005d26 	beq	r2,zero,895d0 <_malloc_r+0x6a0>
   8945c:	18c00204 	addi	r3,r3,8
   89460:	003f5106 	br	891a8 <_malloc_r+0x278>
   89464:	8089883a 	add	r4,r16,r2
   89468:	003f6d06 	br	89220 <_malloc_r+0x2f0>
   8946c:	00805504 	movi	r2,340
   89470:	10c02036 	bltu	r2,r3,894f4 <_malloc_r+0x5c4>
   89474:	8804d3fa 	srli	r2,r17,15
   89478:	11801dc4 	addi	r6,r2,119
   8947c:	300490fa 	slli	r2,r6,3
   89480:	003ed806 	br	88fe4 <_malloc_r+0xb4>
   89484:	48c000c4 	addi	r3,r9,3
   89488:	003f3106 	br	89150 <_malloc_r+0x220>
   8948c:	05c00274 	movhi	r23,9
   89490:	bdcbf304 	addi	r23,r23,12236
   89494:	b8800017 	ldw	r2,0(r23)
   89498:	988d883a 	add	r6,r19,r2
   8949c:	b9800015 	stw	r6,0(r23)
   894a0:	293fb21e 	bne	r5,r4,8936c <_malloc_r+0x43c>
   894a4:	2083ffcc 	andi	r2,r4,4095
   894a8:	103fb01e 	bne	r2,zero,8936c <_malloc_r+0x43c>
   894ac:	e4000217 	ldw	r16,8(fp)
   894b0:	9d45883a 	add	r2,r19,r21
   894b4:	10800054 	ori	r2,r2,1
   894b8:	80800115 	stw	r2,4(r16)
   894bc:	b8c00017 	ldw	r3,0(r23)
   894c0:	d0a73b17 	ldw	r2,-25364(gp)
   894c4:	10c0012e 	bgeu	r2,r3,894cc <_malloc_r+0x59c>
   894c8:	d0e73b15 	stw	r3,-25364(gp)
   894cc:	d0a73c17 	ldw	r2,-25360(gp)
   894d0:	10ff962e 	bgeu	r2,r3,8932c <_malloc_r+0x3fc>
   894d4:	d0e73c15 	stw	r3,-25360(gp)
   894d8:	003f9406 	br	8932c <_malloc_r+0x3fc>
   894dc:	00800104 	movi	r2,4
   894e0:	11001e36 	bltu	r2,r4,8955c <_malloc_r+0x62c>
   894e4:	2804d1ba 	srli	r2,r5,6
   894e8:	11000e04 	addi	r4,r2,56
   894ec:	200690fa 	slli	r3,r4,3
   894f0:	003fc506 	br	89408 <_malloc_r+0x4d8>
   894f4:	00815504 	movi	r2,1364
   894f8:	10c01d2e 	bgeu	r2,r3,89570 <_malloc_r+0x640>
   894fc:	01801f84 	movi	r6,126
   89500:	0080fc04 	movi	r2,1008
   89504:	003eb706 	br	88fe4 <_malloc_r+0xb4>
   89508:	00800204 	movi	r2,8
   8950c:	10cbc83a 	sub	r5,r2,r3
   89510:	2169883a 	add	r20,r4,r5
   89514:	003f9e06 	br	89390 <_malloc_r+0x460>
   89518:	00bffe04 	movi	r2,-8
   8951c:	a93ffd04 	addi	r4,r21,-12
   89520:	2088703a 	and	r4,r4,r2
   89524:	b10b883a 	add	r5,r22,r4
   89528:	00c00144 	movi	r3,5
   8952c:	28c00215 	stw	r3,8(r5)
   89530:	28c00115 	stw	r3,4(r5)
   89534:	b0800117 	ldw	r2,4(r22)
   89538:	1080004c 	andi	r2,r2,1
   8953c:	2084b03a 	or	r2,r4,r2
   89540:	b0800115 	stw	r2,4(r22)
   89544:	313fdd2e 	bgeu	r6,r4,894bc <_malloc_r+0x58c>
   89548:	b1400204 	addi	r5,r22,8
   8954c:	9009883a 	mov	r4,r18
   89550:	00883a80 	call	883a8 <_free_r>
   89554:	e4000217 	ldw	r16,8(fp)
   89558:	003fd806 	br	894bc <_malloc_r+0x58c>
   8955c:	00800504 	movi	r2,20
   89560:	11001536 	bltu	r2,r4,895b8 <_malloc_r+0x688>
   89564:	210016c4 	addi	r4,r4,91
   89568:	200690fa 	slli	r3,r4,3
   8956c:	003fa606 	br	89408 <_malloc_r+0x4d8>
   89570:	8804d4ba 	srli	r2,r17,18
   89574:	11801f04 	addi	r6,r2,124
   89578:	300490fa 	slli	r2,r6,3
   8957c:	003e9906 	br	88fe4 <_malloc_r+0xb4>
   89580:	2009d0ba 	srai	r4,r4,2
   89584:	01400274 	movhi	r5,9
   89588:	297f2b04 	addi	r5,r5,-852
   8958c:	00c00044 	movi	r3,1
   89590:	28800117 	ldw	r2,4(r5)
   89594:	1906983a 	sll	r3,r3,r4
   89598:	10c4b03a 	or	r2,r2,r3
   8959c:	28800115 	stw	r2,4(r5)
   895a0:	003fa306 	br	89430 <_malloc_r+0x500>
   895a4:	0027883a 	mov	r19,zero
   895a8:	00c00044 	movi	r3,1
   895ac:	003f8606 	br	893c8 <_malloc_r+0x498>
   895b0:	d1200515 	stw	r4,-32748(gp)
   895b4:	003f7306 	br	89384 <_malloc_r+0x454>
   895b8:	00801504 	movi	r2,84
   895bc:	11001936 	bltu	r2,r4,89624 <_malloc_r+0x6f4>
   895c0:	2804d33a 	srli	r2,r5,12
   895c4:	11001b84 	addi	r4,r2,110
   895c8:	200690fa 	slli	r3,r4,3
   895cc:	003f8e06 	br	89408 <_malloc_r+0x4d8>
   895d0:	480b883a 	mov	r5,r9
   895d4:	6807883a 	mov	r3,r13
   895d8:	288000cc 	andi	r2,r5,3
   895dc:	18fffe04 	addi	r3,r3,-8
   895e0:	297fffc4 	addi	r5,r5,-1
   895e4:	10001526 	beq	r2,zero,8963c <_malloc_r+0x70c>
   895e8:	18800217 	ldw	r2,8(r3)
   895ec:	10fffa26 	beq	r2,r3,895d8 <_malloc_r+0x6a8>
   895f0:	2109883a 	add	r4,r4,r4
   895f4:	393f1e36 	bltu	r7,r4,89270 <_malloc_r+0x340>
   895f8:	203f1d26 	beq	r4,zero,89270 <_malloc_r+0x340>
   895fc:	21c4703a 	and	r2,r4,r7
   89600:	10000226 	beq	r2,zero,8960c <_malloc_r+0x6dc>
   89604:	6013883a 	mov	r9,r12
   89608:	003ee106 	br	89190 <_malloc_r+0x260>
   8960c:	2109883a 	add	r4,r4,r4
   89610:	3904703a 	and	r2,r7,r4
   89614:	63000104 	addi	r12,r12,4
   89618:	103ffc26 	beq	r2,zero,8960c <_malloc_r+0x6dc>
   8961c:	6013883a 	mov	r9,r12
   89620:	003edb06 	br	89190 <_malloc_r+0x260>
   89624:	00805504 	movi	r2,340
   89628:	11000836 	bltu	r2,r4,8964c <_malloc_r+0x71c>
   8962c:	2804d3fa 	srli	r2,r5,15
   89630:	11001dc4 	addi	r4,r2,119
   89634:	200690fa 	slli	r3,r4,3
   89638:	003f7306 	br	89408 <_malloc_r+0x4d8>
   8963c:	0104303a 	nor	r2,zero,r4
   89640:	388e703a 	and	r7,r7,r2
   89644:	e1c00115 	stw	r7,4(fp)
   89648:	003fe906 	br	895f0 <_malloc_r+0x6c0>
   8964c:	00815504 	movi	r2,1364
   89650:	1100032e 	bgeu	r2,r4,89660 <_malloc_r+0x730>
   89654:	01001f84 	movi	r4,126
   89658:	00c0fc04 	movi	r3,1008
   8965c:	003f6a06 	br	89408 <_malloc_r+0x4d8>
   89660:	2804d4ba 	srli	r2,r5,18
   89664:	11001f04 	addi	r4,r2,124
   89668:	200690fa 	slli	r3,r4,3
   8966c:	003f6606 	br	89408 <_malloc_r+0x4d8>

00089670 <memchr>:
   89670:	008000c4 	movi	r2,3
   89674:	29403fcc 	andi	r5,r5,255
   89678:	2007883a 	mov	r3,r4
   8967c:	1180022e 	bgeu	r2,r6,89688 <memchr+0x18>
   89680:	2084703a 	and	r2,r4,r2
   89684:	10000b26 	beq	r2,zero,896b4 <memchr+0x44>
   89688:	313fffc4 	addi	r4,r6,-1
   8968c:	3000051e 	bne	r6,zero,896a4 <memchr+0x34>
   89690:	00002c06 	br	89744 <memchr+0xd4>
   89694:	213fffc4 	addi	r4,r4,-1
   89698:	00bfffc4 	movi	r2,-1
   8969c:	18c00044 	addi	r3,r3,1
   896a0:	20802826 	beq	r4,r2,89744 <memchr+0xd4>
   896a4:	18800003 	ldbu	r2,0(r3)
   896a8:	28bffa1e 	bne	r5,r2,89694 <memchr+0x24>
   896ac:	1805883a 	mov	r2,r3
   896b0:	f800283a 	ret
   896b4:	0011883a 	mov	r8,zero
   896b8:	0007883a 	mov	r3,zero
   896bc:	01c00104 	movi	r7,4
   896c0:	4004923a 	slli	r2,r8,8
   896c4:	18c00044 	addi	r3,r3,1
   896c8:	1151883a 	add	r8,r2,r5
   896cc:	19fffc1e 	bne	r3,r7,896c0 <memchr+0x50>
   896d0:	02bfbff4 	movhi	r10,65279
   896d4:	52bfbfc4 	addi	r10,r10,-257
   896d8:	02602074 	movhi	r9,32897
   896dc:	4a602004 	addi	r9,r9,-32640
   896e0:	02c000c4 	movi	r11,3
   896e4:	20800017 	ldw	r2,0(r4)
   896e8:	31bfff04 	addi	r6,r6,-4
   896ec:	200f883a 	mov	r7,r4
   896f0:	1204f03a 	xor	r2,r2,r8
   896f4:	1287883a 	add	r3,r2,r10
   896f8:	1a46703a 	and	r3,r3,r9
   896fc:	0084303a 	nor	r2,zero,r2
   89700:	10c4703a 	and	r2,r2,r3
   89704:	10000b26 	beq	r2,zero,89734 <memchr+0xc4>
   89708:	20800003 	ldbu	r2,0(r4)
   8970c:	28800f26 	beq	r5,r2,8974c <memchr+0xdc>
   89710:	20800043 	ldbu	r2,1(r4)
   89714:	21c00044 	addi	r7,r4,1
   89718:	28800c26 	beq	r5,r2,8974c <memchr+0xdc>
   8971c:	20800083 	ldbu	r2,2(r4)
   89720:	21c00084 	addi	r7,r4,2
   89724:	28800926 	beq	r5,r2,8974c <memchr+0xdc>
   89728:	208000c3 	ldbu	r2,3(r4)
   8972c:	21c000c4 	addi	r7,r4,3
   89730:	28800626 	beq	r5,r2,8974c <memchr+0xdc>
   89734:	21000104 	addi	r4,r4,4
   89738:	59bfea36 	bltu	r11,r6,896e4 <memchr+0x74>
   8973c:	2007883a 	mov	r3,r4
   89740:	003fd106 	br	89688 <memchr+0x18>
   89744:	0005883a 	mov	r2,zero
   89748:	f800283a 	ret
   8974c:	3805883a 	mov	r2,r7
   89750:	f800283a 	ret

00089754 <memcpy>:
   89754:	01c003c4 	movi	r7,15
   89758:	2007883a 	mov	r3,r4
   8975c:	3980032e 	bgeu	r7,r6,8976c <memcpy+0x18>
   89760:	2904b03a 	or	r2,r5,r4
   89764:	108000cc 	andi	r2,r2,3
   89768:	10000926 	beq	r2,zero,89790 <memcpy+0x3c>
   8976c:	30000626 	beq	r6,zero,89788 <memcpy+0x34>
   89770:	30cd883a 	add	r6,r6,r3
   89774:	28800003 	ldbu	r2,0(r5)
   89778:	29400044 	addi	r5,r5,1
   8977c:	18800005 	stb	r2,0(r3)
   89780:	18c00044 	addi	r3,r3,1
   89784:	30fffb1e 	bne	r6,r3,89774 <memcpy+0x20>
   89788:	2005883a 	mov	r2,r4
   8978c:	f800283a 	ret
   89790:	3811883a 	mov	r8,r7
   89794:	200f883a 	mov	r7,r4
   89798:	28c00017 	ldw	r3,0(r5)
   8979c:	31bffc04 	addi	r6,r6,-16
   897a0:	38c00015 	stw	r3,0(r7)
   897a4:	28800117 	ldw	r2,4(r5)
   897a8:	38800115 	stw	r2,4(r7)
   897ac:	28c00217 	ldw	r3,8(r5)
   897b0:	38c00215 	stw	r3,8(r7)
   897b4:	28800317 	ldw	r2,12(r5)
   897b8:	29400404 	addi	r5,r5,16
   897bc:	38800315 	stw	r2,12(r7)
   897c0:	39c00404 	addi	r7,r7,16
   897c4:	41bff436 	bltu	r8,r6,89798 <memcpy+0x44>
   897c8:	008000c4 	movi	r2,3
   897cc:	1180072e 	bgeu	r2,r6,897ec <memcpy+0x98>
   897d0:	1007883a 	mov	r3,r2
   897d4:	28800017 	ldw	r2,0(r5)
   897d8:	31bfff04 	addi	r6,r6,-4
   897dc:	29400104 	addi	r5,r5,4
   897e0:	38800015 	stw	r2,0(r7)
   897e4:	39c00104 	addi	r7,r7,4
   897e8:	19bffa36 	bltu	r3,r6,897d4 <memcpy+0x80>
   897ec:	3807883a 	mov	r3,r7
   897f0:	003fde06 	br	8976c <memcpy+0x18>

000897f4 <memmove>:
   897f4:	2807883a 	mov	r3,r5
   897f8:	2011883a 	mov	r8,r4
   897fc:	29000c2e 	bgeu	r5,r4,89830 <memmove+0x3c>
   89800:	298f883a 	add	r7,r5,r6
   89804:	21c00a2e 	bgeu	r4,r7,89830 <memmove+0x3c>
   89808:	30000726 	beq	r6,zero,89828 <memmove+0x34>
   8980c:	2187883a 	add	r3,r4,r6
   89810:	198dc83a 	sub	r6,r3,r6
   89814:	39ffffc4 	addi	r7,r7,-1
   89818:	38800003 	ldbu	r2,0(r7)
   8981c:	18ffffc4 	addi	r3,r3,-1
   89820:	18800005 	stb	r2,0(r3)
   89824:	19bffb1e 	bne	r3,r6,89814 <memmove+0x20>
   89828:	2005883a 	mov	r2,r4
   8982c:	f800283a 	ret
   89830:	01c003c4 	movi	r7,15
   89834:	39800a36 	bltu	r7,r6,89860 <memmove+0x6c>
   89838:	303ffb26 	beq	r6,zero,89828 <memmove+0x34>
   8983c:	400f883a 	mov	r7,r8
   89840:	320d883a 	add	r6,r6,r8
   89844:	28800003 	ldbu	r2,0(r5)
   89848:	29400044 	addi	r5,r5,1
   8984c:	38800005 	stb	r2,0(r7)
   89850:	39c00044 	addi	r7,r7,1
   89854:	39bffb1e 	bne	r7,r6,89844 <memmove+0x50>
   89858:	2005883a 	mov	r2,r4
   8985c:	f800283a 	ret
   89860:	1904b03a 	or	r2,r3,r4
   89864:	108000cc 	andi	r2,r2,3
   89868:	103ff31e 	bne	r2,zero,89838 <memmove+0x44>
   8986c:	3811883a 	mov	r8,r7
   89870:	180b883a 	mov	r5,r3
   89874:	200f883a 	mov	r7,r4
   89878:	28c00017 	ldw	r3,0(r5)
   8987c:	31bffc04 	addi	r6,r6,-16
   89880:	38c00015 	stw	r3,0(r7)
   89884:	28800117 	ldw	r2,4(r5)
   89888:	38800115 	stw	r2,4(r7)
   8988c:	28c00217 	ldw	r3,8(r5)
   89890:	38c00215 	stw	r3,8(r7)
   89894:	28800317 	ldw	r2,12(r5)
   89898:	29400404 	addi	r5,r5,16
   8989c:	38800315 	stw	r2,12(r7)
   898a0:	39c00404 	addi	r7,r7,16
   898a4:	41bff436 	bltu	r8,r6,89878 <memmove+0x84>
   898a8:	008000c4 	movi	r2,3
   898ac:	1180072e 	bgeu	r2,r6,898cc <memmove+0xd8>
   898b0:	1007883a 	mov	r3,r2
   898b4:	28800017 	ldw	r2,0(r5)
   898b8:	31bfff04 	addi	r6,r6,-4
   898bc:	29400104 	addi	r5,r5,4
   898c0:	38800015 	stw	r2,0(r7)
   898c4:	39c00104 	addi	r7,r7,4
   898c8:	19bffa36 	bltu	r3,r6,898b4 <memmove+0xc0>
   898cc:	3811883a 	mov	r8,r7
   898d0:	003fd906 	br	89838 <memmove+0x44>

000898d4 <memset>:
   898d4:	008000c4 	movi	r2,3
   898d8:	29403fcc 	andi	r5,r5,255
   898dc:	2007883a 	mov	r3,r4
   898e0:	1180022e 	bgeu	r2,r6,898ec <memset+0x18>
   898e4:	2084703a 	and	r2,r4,r2
   898e8:	10000826 	beq	r2,zero,8990c <memset+0x38>
   898ec:	30000526 	beq	r6,zero,89904 <memset+0x30>
   898f0:	2805883a 	mov	r2,r5
   898f4:	30cd883a 	add	r6,r6,r3
   898f8:	18800005 	stb	r2,0(r3)
   898fc:	18c00044 	addi	r3,r3,1
   89900:	19bffd1e 	bne	r3,r6,898f8 <memset+0x24>
   89904:	2005883a 	mov	r2,r4
   89908:	f800283a 	ret
   8990c:	2804923a 	slli	r2,r5,8
   89910:	020003c4 	movi	r8,15
   89914:	200f883a 	mov	r7,r4
   89918:	2884b03a 	or	r2,r5,r2
   8991c:	1006943a 	slli	r3,r2,16
   89920:	10c6b03a 	or	r3,r2,r3
   89924:	41800a2e 	bgeu	r8,r6,89950 <memset+0x7c>
   89928:	4005883a 	mov	r2,r8
   8992c:	31bffc04 	addi	r6,r6,-16
   89930:	38c00015 	stw	r3,0(r7)
   89934:	38c00115 	stw	r3,4(r7)
   89938:	38c00215 	stw	r3,8(r7)
   8993c:	38c00315 	stw	r3,12(r7)
   89940:	39c00404 	addi	r7,r7,16
   89944:	11bff936 	bltu	r2,r6,8992c <memset+0x58>
   89948:	008000c4 	movi	r2,3
   8994c:	1180052e 	bgeu	r2,r6,89964 <memset+0x90>
   89950:	31bfff04 	addi	r6,r6,-4
   89954:	008000c4 	movi	r2,3
   89958:	38c00015 	stw	r3,0(r7)
   8995c:	39c00104 	addi	r7,r7,4
   89960:	11bffb36 	bltu	r2,r6,89950 <memset+0x7c>
   89964:	3807883a 	mov	r3,r7
   89968:	003fe006 	br	898ec <memset+0x18>

0008996c <_Bfree>:
   8996c:	28000826 	beq	r5,zero,89990 <_Bfree+0x24>
   89970:	28800117 	ldw	r2,4(r5)
   89974:	21001317 	ldw	r4,76(r4)
   89978:	1085883a 	add	r2,r2,r2
   8997c:	1085883a 	add	r2,r2,r2
   89980:	1105883a 	add	r2,r2,r4
   89984:	10c00017 	ldw	r3,0(r2)
   89988:	28c00015 	stw	r3,0(r5)
   8998c:	11400015 	stw	r5,0(r2)
   89990:	f800283a 	ret

00089994 <__hi0bits>:
   89994:	20bfffec 	andhi	r2,r4,65535
   89998:	10001426 	beq	r2,zero,899ec <__hi0bits+0x58>
   8999c:	0007883a 	mov	r3,zero
   899a0:	20bfc02c 	andhi	r2,r4,65280
   899a4:	1000021e 	bne	r2,zero,899b0 <__hi0bits+0x1c>
   899a8:	2008923a 	slli	r4,r4,8
   899ac:	18c00204 	addi	r3,r3,8
   899b0:	20bc002c 	andhi	r2,r4,61440
   899b4:	1000021e 	bne	r2,zero,899c0 <__hi0bits+0x2c>
   899b8:	2008913a 	slli	r4,r4,4
   899bc:	18c00104 	addi	r3,r3,4
   899c0:	20b0002c 	andhi	r2,r4,49152
   899c4:	1000031e 	bne	r2,zero,899d4 <__hi0bits+0x40>
   899c8:	2105883a 	add	r2,r4,r4
   899cc:	18c00084 	addi	r3,r3,2
   899d0:	1089883a 	add	r4,r2,r2
   899d4:	20000316 	blt	r4,zero,899e4 <__hi0bits+0x50>
   899d8:	2090002c 	andhi	r2,r4,16384
   899dc:	10000626 	beq	r2,zero,899f8 <__hi0bits+0x64>
   899e0:	18c00044 	addi	r3,r3,1
   899e4:	1805883a 	mov	r2,r3
   899e8:	f800283a 	ret
   899ec:	2008943a 	slli	r4,r4,16
   899f0:	00c00404 	movi	r3,16
   899f4:	003fea06 	br	899a0 <__hi0bits+0xc>
   899f8:	00c00804 	movi	r3,32
   899fc:	1805883a 	mov	r2,r3
   89a00:	f800283a 	ret

00089a04 <__lo0bits>:
   89a04:	20c00017 	ldw	r3,0(r4)
   89a08:	188001cc 	andi	r2,r3,7
   89a0c:	10000a26 	beq	r2,zero,89a38 <__lo0bits+0x34>
   89a10:	1880004c 	andi	r2,r3,1
   89a14:	1005003a 	cmpeq	r2,r2,zero
   89a18:	10002126 	beq	r2,zero,89aa0 <__lo0bits+0x9c>
   89a1c:	1880008c 	andi	r2,r3,2
   89a20:	1000251e 	bne	r2,zero,89ab8 <__lo0bits+0xb4>
   89a24:	1804d0ba 	srli	r2,r3,2
   89a28:	01400084 	movi	r5,2
   89a2c:	20800015 	stw	r2,0(r4)
   89a30:	2805883a 	mov	r2,r5
   89a34:	f800283a 	ret
   89a38:	18bfffcc 	andi	r2,r3,65535
   89a3c:	10001526 	beq	r2,zero,89a94 <__lo0bits+0x90>
   89a40:	000b883a 	mov	r5,zero
   89a44:	18803fcc 	andi	r2,r3,255
   89a48:	1000021e 	bne	r2,zero,89a54 <__lo0bits+0x50>
   89a4c:	1806d23a 	srli	r3,r3,8
   89a50:	29400204 	addi	r5,r5,8
   89a54:	188003cc 	andi	r2,r3,15
   89a58:	1000021e 	bne	r2,zero,89a64 <__lo0bits+0x60>
   89a5c:	1806d13a 	srli	r3,r3,4
   89a60:	29400104 	addi	r5,r5,4
   89a64:	188000cc 	andi	r2,r3,3
   89a68:	1000021e 	bne	r2,zero,89a74 <__lo0bits+0x70>
   89a6c:	1806d0ba 	srli	r3,r3,2
   89a70:	29400084 	addi	r5,r5,2
   89a74:	1880004c 	andi	r2,r3,1
   89a78:	1000031e 	bne	r2,zero,89a88 <__lo0bits+0x84>
   89a7c:	1806d07a 	srli	r3,r3,1
   89a80:	18000a26 	beq	r3,zero,89aac <__lo0bits+0xa8>
   89a84:	29400044 	addi	r5,r5,1
   89a88:	2805883a 	mov	r2,r5
   89a8c:	20c00015 	stw	r3,0(r4)
   89a90:	f800283a 	ret
   89a94:	1806d43a 	srli	r3,r3,16
   89a98:	01400404 	movi	r5,16
   89a9c:	003fe906 	br	89a44 <__lo0bits+0x40>
   89aa0:	000b883a 	mov	r5,zero
   89aa4:	2805883a 	mov	r2,r5
   89aa8:	f800283a 	ret
   89aac:	01400804 	movi	r5,32
   89ab0:	2805883a 	mov	r2,r5
   89ab4:	f800283a 	ret
   89ab8:	1804d07a 	srli	r2,r3,1
   89abc:	01400044 	movi	r5,1
   89ac0:	20800015 	stw	r2,0(r4)
   89ac4:	003fda06 	br	89a30 <__lo0bits+0x2c>

00089ac8 <__mcmp>:
   89ac8:	20800417 	ldw	r2,16(r4)
   89acc:	28c00417 	ldw	r3,16(r5)
   89ad0:	10cfc83a 	sub	r7,r2,r3
   89ad4:	38000c1e 	bne	r7,zero,89b08 <__mcmp+0x40>
   89ad8:	18c5883a 	add	r2,r3,r3
   89adc:	1085883a 	add	r2,r2,r2
   89ae0:	10c00504 	addi	r3,r2,20
   89ae4:	21000504 	addi	r4,r4,20
   89ae8:	28cb883a 	add	r5,r5,r3
   89aec:	2085883a 	add	r2,r4,r2
   89af0:	10bfff04 	addi	r2,r2,-4
   89af4:	297fff04 	addi	r5,r5,-4
   89af8:	11800017 	ldw	r6,0(r2)
   89afc:	28c00017 	ldw	r3,0(r5)
   89b00:	30c0031e 	bne	r6,r3,89b10 <__mcmp+0x48>
   89b04:	20bffa36 	bltu	r4,r2,89af0 <__mcmp+0x28>
   89b08:	3805883a 	mov	r2,r7
   89b0c:	f800283a 	ret
   89b10:	30c00336 	bltu	r6,r3,89b20 <__mcmp+0x58>
   89b14:	01c00044 	movi	r7,1
   89b18:	3805883a 	mov	r2,r7
   89b1c:	f800283a 	ret
   89b20:	01ffffc4 	movi	r7,-1
   89b24:	003ff806 	br	89b08 <__mcmp+0x40>

00089b28 <__ulp>:
   89b28:	295ffc2c 	andhi	r5,r5,32752
   89b2c:	013f3034 	movhi	r4,64704
   89b30:	290b883a 	add	r5,r5,r4
   89b34:	0145c83a 	sub	r2,zero,r5
   89b38:	1007d53a 	srai	r3,r2,20
   89b3c:	000d883a 	mov	r6,zero
   89b40:	0140040e 	bge	zero,r5,89b54 <__ulp+0x2c>
   89b44:	280f883a 	mov	r7,r5
   89b48:	3807883a 	mov	r3,r7
   89b4c:	3005883a 	mov	r2,r6
   89b50:	f800283a 	ret
   89b54:	008004c4 	movi	r2,19
   89b58:	193ffb04 	addi	r4,r3,-20
   89b5c:	10c00c0e 	bge	r2,r3,89b90 <__ulp+0x68>
   89b60:	008007c4 	movi	r2,31
   89b64:	1107c83a 	sub	r3,r2,r4
   89b68:	00800784 	movi	r2,30
   89b6c:	01400044 	movi	r5,1
   89b70:	11000216 	blt	r2,r4,89b7c <__ulp+0x54>
   89b74:	00800044 	movi	r2,1
   89b78:	10ca983a 	sll	r5,r2,r3
   89b7c:	000f883a 	mov	r7,zero
   89b80:	280d883a 	mov	r6,r5
   89b84:	3807883a 	mov	r3,r7
   89b88:	3005883a 	mov	r2,r6
   89b8c:	f800283a 	ret
   89b90:	00800234 	movhi	r2,8
   89b94:	10cfd83a 	sra	r7,r2,r3
   89b98:	000d883a 	mov	r6,zero
   89b9c:	3005883a 	mov	r2,r6
   89ba0:	3807883a 	mov	r3,r7
   89ba4:	f800283a 	ret

00089ba8 <__b2d>:
   89ba8:	20800417 	ldw	r2,16(r4)
   89bac:	defff904 	addi	sp,sp,-28
   89bb0:	dd000415 	stw	r20,16(sp)
   89bb4:	1085883a 	add	r2,r2,r2
   89bb8:	25000504 	addi	r20,r4,20
   89bbc:	1085883a 	add	r2,r2,r2
   89bc0:	dc000015 	stw	r16,0(sp)
   89bc4:	a0a1883a 	add	r16,r20,r2
   89bc8:	dd400515 	stw	r21,20(sp)
   89bcc:	857fff17 	ldw	r21,-4(r16)
   89bd0:	dc400115 	stw	r17,4(sp)
   89bd4:	dfc00615 	stw	ra,24(sp)
   89bd8:	a809883a 	mov	r4,r21
   89bdc:	2823883a 	mov	r17,r5
   89be0:	dcc00315 	stw	r19,12(sp)
   89be4:	dc800215 	stw	r18,8(sp)
   89be8:	00899940 	call	89994 <__hi0bits>
   89bec:	100b883a 	mov	r5,r2
   89bf0:	00800804 	movi	r2,32
   89bf4:	1145c83a 	sub	r2,r2,r5
   89bf8:	88800015 	stw	r2,0(r17)
   89bfc:	00800284 	movi	r2,10
   89c00:	80ffff04 	addi	r3,r16,-4
   89c04:	11401416 	blt	r2,r5,89c58 <__b2d+0xb0>
   89c08:	008002c4 	movi	r2,11
   89c0c:	1149c83a 	sub	r4,r2,r5
   89c10:	a0c02736 	bltu	r20,r3,89cb0 <__b2d+0x108>
   89c14:	000d883a 	mov	r6,zero
   89c18:	28800544 	addi	r2,r5,21
   89c1c:	a906d83a 	srl	r3,r21,r4
   89c20:	a884983a 	sll	r2,r21,r2
   89c24:	1ccffc34 	orhi	r19,r3,16368
   89c28:	11a4b03a 	or	r18,r2,r6
   89c2c:	9005883a 	mov	r2,r18
   89c30:	9807883a 	mov	r3,r19
   89c34:	dfc00617 	ldw	ra,24(sp)
   89c38:	dd400517 	ldw	r21,20(sp)
   89c3c:	dd000417 	ldw	r20,16(sp)
   89c40:	dcc00317 	ldw	r19,12(sp)
   89c44:	dc800217 	ldw	r18,8(sp)
   89c48:	dc400117 	ldw	r17,4(sp)
   89c4c:	dc000017 	ldw	r16,0(sp)
   89c50:	dec00704 	addi	sp,sp,28
   89c54:	f800283a 	ret
   89c58:	a0c00e36 	bltu	r20,r3,89c94 <__b2d+0xec>
   89c5c:	293ffd44 	addi	r4,r5,-11
   89c60:	000d883a 	mov	r6,zero
   89c64:	20000f26 	beq	r4,zero,89ca4 <__b2d+0xfc>
   89c68:	00800804 	movi	r2,32
   89c6c:	110bc83a 	sub	r5,r2,r4
   89c70:	a0c01236 	bltu	r20,r3,89cbc <__b2d+0x114>
   89c74:	000f883a 	mov	r7,zero
   89c78:	a904983a 	sll	r2,r21,r4
   89c7c:	3146d83a 	srl	r3,r6,r5
   89c80:	3108983a 	sll	r4,r6,r4
   89c84:	108ffc34 	orhi	r2,r2,16368
   89c88:	18a6b03a 	or	r19,r3,r2
   89c8c:	3924b03a 	or	r18,r7,r4
   89c90:	003fe606 	br	89c2c <__b2d+0x84>
   89c94:	293ffd44 	addi	r4,r5,-11
   89c98:	81bffe17 	ldw	r6,-8(r16)
   89c9c:	80fffe04 	addi	r3,r16,-8
   89ca0:	203ff11e 	bne	r4,zero,89c68 <__b2d+0xc0>
   89ca4:	accffc34 	orhi	r19,r21,16368
   89ca8:	3025883a 	mov	r18,r6
   89cac:	003fdf06 	br	89c2c <__b2d+0x84>
   89cb0:	18bfff17 	ldw	r2,-4(r3)
   89cb4:	110cd83a 	srl	r6,r2,r4
   89cb8:	003fd706 	br	89c18 <__b2d+0x70>
   89cbc:	18bfff17 	ldw	r2,-4(r3)
   89cc0:	114ed83a 	srl	r7,r2,r5
   89cc4:	003fec06 	br	89c78 <__b2d+0xd0>

00089cc8 <__ratio>:
   89cc8:	defff904 	addi	sp,sp,-28
   89ccc:	dc400215 	stw	r17,8(sp)
   89cd0:	2823883a 	mov	r17,r5
   89cd4:	d80b883a 	mov	r5,sp
   89cd8:	dfc00615 	stw	ra,24(sp)
   89cdc:	dd000515 	stw	r20,20(sp)
   89ce0:	dcc00415 	stw	r19,16(sp)
   89ce4:	dc800315 	stw	r18,12(sp)
   89ce8:	2025883a 	mov	r18,r4
   89cec:	0089ba80 	call	89ba8 <__b2d>
   89cf0:	8809883a 	mov	r4,r17
   89cf4:	d9400104 	addi	r5,sp,4
   89cf8:	1027883a 	mov	r19,r2
   89cfc:	1829883a 	mov	r20,r3
   89d00:	0089ba80 	call	89ba8 <__b2d>
   89d04:	89000417 	ldw	r4,16(r17)
   89d08:	91c00417 	ldw	r7,16(r18)
   89d0c:	d9800117 	ldw	r6,4(sp)
   89d10:	180b883a 	mov	r5,r3
   89d14:	390fc83a 	sub	r7,r7,r4
   89d18:	1009883a 	mov	r4,r2
   89d1c:	d8800017 	ldw	r2,0(sp)
   89d20:	380e917a 	slli	r7,r7,5
   89d24:	2011883a 	mov	r8,r4
   89d28:	1185c83a 	sub	r2,r2,r6
   89d2c:	11c5883a 	add	r2,r2,r7
   89d30:	1006953a 	slli	r3,r2,20
   89d34:	2813883a 	mov	r9,r5
   89d38:	00800d0e 	bge	zero,r2,89d70 <__ratio+0xa8>
   89d3c:	1d29883a 	add	r20,r3,r20
   89d40:	a00b883a 	mov	r5,r20
   89d44:	480f883a 	mov	r7,r9
   89d48:	9809883a 	mov	r4,r19
   89d4c:	400d883a 	mov	r6,r8
   89d50:	008c2d00 	call	8c2d0 <__divdf3>
   89d54:	dfc00617 	ldw	ra,24(sp)
   89d58:	dd000517 	ldw	r20,20(sp)
   89d5c:	dcc00417 	ldw	r19,16(sp)
   89d60:	dc800317 	ldw	r18,12(sp)
   89d64:	dc400217 	ldw	r17,8(sp)
   89d68:	dec00704 	addi	sp,sp,28
   89d6c:	f800283a 	ret
   89d70:	28d3c83a 	sub	r9,r5,r3
   89d74:	003ff206 	br	89d40 <__ratio+0x78>

00089d78 <_mprec_log10>:
   89d78:	defffe04 	addi	sp,sp,-8
   89d7c:	008005c4 	movi	r2,23
   89d80:	dc000015 	stw	r16,0(sp)
   89d84:	dfc00115 	stw	ra,4(sp)
   89d88:	2021883a 	mov	r16,r4
   89d8c:	11000c16 	blt	r2,r4,89dc0 <_mprec_log10+0x48>
   89d90:	200490fa 	slli	r2,r4,3
   89d94:	00c00274 	movhi	r3,9
   89d98:	18fd4204 	addi	r3,r3,-2808
   89d9c:	10c5883a 	add	r2,r2,r3
   89da0:	12400117 	ldw	r9,4(r2)
   89da4:	12000017 	ldw	r8,0(r2)
   89da8:	4807883a 	mov	r3,r9
   89dac:	4005883a 	mov	r2,r8
   89db0:	dfc00117 	ldw	ra,4(sp)
   89db4:	dc000017 	ldw	r16,0(sp)
   89db8:	dec00204 	addi	sp,sp,8
   89dbc:	f800283a 	ret
   89dc0:	0011883a 	mov	r8,zero
   89dc4:	024ffc34 	movhi	r9,16368
   89dc8:	0005883a 	mov	r2,zero
   89dcc:	00d00934 	movhi	r3,16420
   89dd0:	480b883a 	mov	r5,r9
   89dd4:	4009883a 	mov	r4,r8
   89dd8:	180f883a 	mov	r7,r3
   89ddc:	100d883a 	mov	r6,r2
   89de0:	00836400 	call	83640 <__muldf3>
   89de4:	843fffc4 	addi	r16,r16,-1
   89de8:	1011883a 	mov	r8,r2
   89dec:	1813883a 	mov	r9,r3
   89df0:	803ff51e 	bne	r16,zero,89dc8 <_mprec_log10+0x50>
   89df4:	4005883a 	mov	r2,r8
   89df8:	4807883a 	mov	r3,r9
   89dfc:	dfc00117 	ldw	ra,4(sp)
   89e00:	dc000017 	ldw	r16,0(sp)
   89e04:	dec00204 	addi	sp,sp,8
   89e08:	f800283a 	ret

00089e0c <__copybits>:
   89e0c:	297fffc4 	addi	r5,r5,-1
   89e10:	30800417 	ldw	r2,16(r6)
   89e14:	280bd17a 	srai	r5,r5,5
   89e18:	31800504 	addi	r6,r6,20
   89e1c:	1085883a 	add	r2,r2,r2
   89e20:	294b883a 	add	r5,r5,r5
   89e24:	294b883a 	add	r5,r5,r5
   89e28:	1085883a 	add	r2,r2,r2
   89e2c:	290b883a 	add	r5,r5,r4
   89e30:	3087883a 	add	r3,r6,r2
   89e34:	29400104 	addi	r5,r5,4
   89e38:	30c0052e 	bgeu	r6,r3,89e50 <__copybits+0x44>
   89e3c:	30800017 	ldw	r2,0(r6)
   89e40:	31800104 	addi	r6,r6,4
   89e44:	20800015 	stw	r2,0(r4)
   89e48:	21000104 	addi	r4,r4,4
   89e4c:	30fffb36 	bltu	r6,r3,89e3c <__copybits+0x30>
   89e50:	2140032e 	bgeu	r4,r5,89e60 <__copybits+0x54>
   89e54:	20000015 	stw	zero,0(r4)
   89e58:	21000104 	addi	r4,r4,4
   89e5c:	217ffd36 	bltu	r4,r5,89e54 <__copybits+0x48>
   89e60:	f800283a 	ret

00089e64 <__any_on>:
   89e64:	20800417 	ldw	r2,16(r4)
   89e68:	2807d17a 	srai	r3,r5,5
   89e6c:	21000504 	addi	r4,r4,20
   89e70:	10c00d0e 	bge	r2,r3,89ea8 <__any_on+0x44>
   89e74:	1085883a 	add	r2,r2,r2
   89e78:	1085883a 	add	r2,r2,r2
   89e7c:	208d883a 	add	r6,r4,r2
   89e80:	2180182e 	bgeu	r4,r6,89ee4 <__any_on+0x80>
   89e84:	30bfff17 	ldw	r2,-4(r6)
   89e88:	30ffff04 	addi	r3,r6,-4
   89e8c:	1000041e 	bne	r2,zero,89ea0 <__any_on+0x3c>
   89e90:	20c0142e 	bgeu	r4,r3,89ee4 <__any_on+0x80>
   89e94:	18ffff04 	addi	r3,r3,-4
   89e98:	18800017 	ldw	r2,0(r3)
   89e9c:	103ffc26 	beq	r2,zero,89e90 <__any_on+0x2c>
   89ea0:	00800044 	movi	r2,1
   89ea4:	f800283a 	ret
   89ea8:	18800a0e 	bge	r3,r2,89ed4 <__any_on+0x70>
   89eac:	294007cc 	andi	r5,r5,31
   89eb0:	28000826 	beq	r5,zero,89ed4 <__any_on+0x70>
   89eb4:	18c5883a 	add	r2,r3,r3
   89eb8:	1085883a 	add	r2,r2,r2
   89ebc:	208d883a 	add	r6,r4,r2
   89ec0:	30c00017 	ldw	r3,0(r6)
   89ec4:	1944d83a 	srl	r2,r3,r5
   89ec8:	1144983a 	sll	r2,r2,r5
   89ecc:	18bff41e 	bne	r3,r2,89ea0 <__any_on+0x3c>
   89ed0:	003feb06 	br	89e80 <__any_on+0x1c>
   89ed4:	18c5883a 	add	r2,r3,r3
   89ed8:	1085883a 	add	r2,r2,r2
   89edc:	208d883a 	add	r6,r4,r2
   89ee0:	003fe706 	br	89e80 <__any_on+0x1c>
   89ee4:	0005883a 	mov	r2,zero
   89ee8:	f800283a 	ret

00089eec <_Balloc>:
   89eec:	20c01317 	ldw	r3,76(r4)
   89ef0:	defffb04 	addi	sp,sp,-20
   89ef4:	dcc00315 	stw	r19,12(sp)
   89ef8:	dc800215 	stw	r18,8(sp)
   89efc:	dfc00415 	stw	ra,16(sp)
   89f00:	2825883a 	mov	r18,r5
   89f04:	dc400115 	stw	r17,4(sp)
   89f08:	dc000015 	stw	r16,0(sp)
   89f0c:	2027883a 	mov	r19,r4
   89f10:	01800404 	movi	r6,16
   89f14:	01400104 	movi	r5,4
   89f18:	18001726 	beq	r3,zero,89f78 <_Balloc+0x8c>
   89f1c:	01400044 	movi	r5,1
   89f20:	9485883a 	add	r2,r18,r18
   89f24:	2ca2983a 	sll	r17,r5,r18
   89f28:	1085883a 	add	r2,r2,r2
   89f2c:	10c7883a 	add	r3,r2,r3
   89f30:	1c000017 	ldw	r16,0(r3)
   89f34:	8c4d883a 	add	r6,r17,r17
   89f38:	318d883a 	add	r6,r6,r6
   89f3c:	9809883a 	mov	r4,r19
   89f40:	31800504 	addi	r6,r6,20
   89f44:	80001226 	beq	r16,zero,89f90 <_Balloc+0xa4>
   89f48:	80800017 	ldw	r2,0(r16)
   89f4c:	18800015 	stw	r2,0(r3)
   89f50:	80000415 	stw	zero,16(r16)
   89f54:	80000315 	stw	zero,12(r16)
   89f58:	8005883a 	mov	r2,r16
   89f5c:	dfc00417 	ldw	ra,16(sp)
   89f60:	dcc00317 	ldw	r19,12(sp)
   89f64:	dc800217 	ldw	r18,8(sp)
   89f68:	dc400117 	ldw	r17,4(sp)
   89f6c:	dc000017 	ldw	r16,0(sp)
   89f70:	dec00504 	addi	sp,sp,20
   89f74:	f800283a 	ret
   89f78:	008b3280 	call	8b328 <_calloc_r>
   89f7c:	1007883a 	mov	r3,r2
   89f80:	0021883a 	mov	r16,zero
   89f84:	98801315 	stw	r2,76(r19)
   89f88:	103fe41e 	bne	r2,zero,89f1c <_Balloc+0x30>
   89f8c:	003ff206 	br	89f58 <_Balloc+0x6c>
   89f90:	008b3280 	call	8b328 <_calloc_r>
   89f94:	103ff026 	beq	r2,zero,89f58 <_Balloc+0x6c>
   89f98:	1021883a 	mov	r16,r2
   89f9c:	14800115 	stw	r18,4(r2)
   89fa0:	14400215 	stw	r17,8(r2)
   89fa4:	003fea06 	br	89f50 <_Balloc+0x64>

00089fa8 <__d2b>:
   89fa8:	defff504 	addi	sp,sp,-44
   89fac:	dcc00515 	stw	r19,20(sp)
   89fb0:	04c00044 	movi	r19,1
   89fb4:	dc000215 	stw	r16,8(sp)
   89fb8:	2821883a 	mov	r16,r5
   89fbc:	980b883a 	mov	r5,r19
   89fc0:	ddc00915 	stw	r23,36(sp)
   89fc4:	dd800815 	stw	r22,32(sp)
   89fc8:	dd400715 	stw	r21,28(sp)
   89fcc:	dd000615 	stw	r20,24(sp)
   89fd0:	dc800415 	stw	r18,16(sp)
   89fd4:	dc400315 	stw	r17,12(sp)
   89fd8:	dfc00a15 	stw	ra,40(sp)
   89fdc:	3023883a 	mov	r17,r6
   89fe0:	382d883a 	mov	r22,r7
   89fe4:	ddc00b17 	ldw	r23,44(sp)
   89fe8:	0089eec0 	call	89eec <_Balloc>
   89fec:	1025883a 	mov	r18,r2
   89ff0:	00a00034 	movhi	r2,32768
   89ff4:	10bfffc4 	addi	r2,r2,-1
   89ff8:	8888703a 	and	r4,r17,r2
   89ffc:	202ad53a 	srli	r21,r4,20
   8a000:	00800434 	movhi	r2,16
   8a004:	10bfffc4 	addi	r2,r2,-1
   8a008:	8886703a 	and	r3,r17,r2
   8a00c:	a829003a 	cmpeq	r20,r21,zero
   8a010:	800b883a 	mov	r5,r16
   8a014:	d8c00115 	stw	r3,4(sp)
   8a018:	94000504 	addi	r16,r18,20
   8a01c:	a000021e 	bne	r20,zero,8a028 <__d2b+0x80>
   8a020:	18c00434 	orhi	r3,r3,16
   8a024:	d8c00115 	stw	r3,4(sp)
   8a028:	28002726 	beq	r5,zero,8a0c8 <__d2b+0x120>
   8a02c:	d809883a 	mov	r4,sp
   8a030:	d9400015 	stw	r5,0(sp)
   8a034:	0089a040 	call	89a04 <__lo0bits>
   8a038:	100d883a 	mov	r6,r2
   8a03c:	10003526 	beq	r2,zero,8a114 <__d2b+0x16c>
   8a040:	d8c00117 	ldw	r3,4(sp)
   8a044:	00800804 	movi	r2,32
   8a048:	1185c83a 	sub	r2,r2,r6
   8a04c:	d9000017 	ldw	r4,0(sp)
   8a050:	1886983a 	sll	r3,r3,r2
   8a054:	1906b03a 	or	r3,r3,r4
   8a058:	90c00515 	stw	r3,20(r18)
   8a05c:	d8c00117 	ldw	r3,4(sp)
   8a060:	1986d83a 	srl	r3,r3,r6
   8a064:	d8c00115 	stw	r3,4(sp)
   8a068:	180b003a 	cmpeq	r5,r3,zero
   8a06c:	00800084 	movi	r2,2
   8a070:	114bc83a 	sub	r5,r2,r5
   8a074:	80c00115 	stw	r3,4(r16)
   8a078:	91400415 	stw	r5,16(r18)
   8a07c:	a0001a1e 	bne	r20,zero,8a0e8 <__d2b+0x140>
   8a080:	3545883a 	add	r2,r6,r21
   8a084:	10bef344 	addi	r2,r2,-1075
   8a088:	00c00d44 	movi	r3,53
   8a08c:	b0800015 	stw	r2,0(r22)
   8a090:	1987c83a 	sub	r3,r3,r6
   8a094:	b8c00015 	stw	r3,0(r23)
   8a098:	9005883a 	mov	r2,r18
   8a09c:	dfc00a17 	ldw	ra,40(sp)
   8a0a0:	ddc00917 	ldw	r23,36(sp)
   8a0a4:	dd800817 	ldw	r22,32(sp)
   8a0a8:	dd400717 	ldw	r21,28(sp)
   8a0ac:	dd000617 	ldw	r20,24(sp)
   8a0b0:	dcc00517 	ldw	r19,20(sp)
   8a0b4:	dc800417 	ldw	r18,16(sp)
   8a0b8:	dc400317 	ldw	r17,12(sp)
   8a0bc:	dc000217 	ldw	r16,8(sp)
   8a0c0:	dec00b04 	addi	sp,sp,44
   8a0c4:	f800283a 	ret
   8a0c8:	d9000104 	addi	r4,sp,4
   8a0cc:	0089a040 	call	89a04 <__lo0bits>
   8a0d0:	11800804 	addi	r6,r2,32
   8a0d4:	d8800117 	ldw	r2,4(sp)
   8a0d8:	94c00415 	stw	r19,16(r18)
   8a0dc:	980b883a 	mov	r5,r19
   8a0e0:	90800515 	stw	r2,20(r18)
   8a0e4:	a03fe626 	beq	r20,zero,8a080 <__d2b+0xd8>
   8a0e8:	2945883a 	add	r2,r5,r5
   8a0ec:	1085883a 	add	r2,r2,r2
   8a0f0:	1405883a 	add	r2,r2,r16
   8a0f4:	113fff17 	ldw	r4,-4(r2)
   8a0f8:	30fef384 	addi	r3,r6,-1074
   8a0fc:	2820917a 	slli	r16,r5,5
   8a100:	b0c00015 	stw	r3,0(r22)
   8a104:	00899940 	call	89994 <__hi0bits>
   8a108:	80a1c83a 	sub	r16,r16,r2
   8a10c:	bc000015 	stw	r16,0(r23)
   8a110:	003fe106 	br	8a098 <__d2b+0xf0>
   8a114:	d8800017 	ldw	r2,0(sp)
   8a118:	90800515 	stw	r2,20(r18)
   8a11c:	d8c00117 	ldw	r3,4(sp)
   8a120:	003fd106 	br	8a068 <__d2b+0xc0>

0008a124 <__mdiff>:
   8a124:	defffb04 	addi	sp,sp,-20
   8a128:	dc000015 	stw	r16,0(sp)
   8a12c:	2821883a 	mov	r16,r5
   8a130:	dc800215 	stw	r18,8(sp)
   8a134:	300b883a 	mov	r5,r6
   8a138:	2025883a 	mov	r18,r4
   8a13c:	8009883a 	mov	r4,r16
   8a140:	dc400115 	stw	r17,4(sp)
   8a144:	dfc00415 	stw	ra,16(sp)
   8a148:	dcc00315 	stw	r19,12(sp)
   8a14c:	3023883a 	mov	r17,r6
   8a150:	0089ac80 	call	89ac8 <__mcmp>
   8a154:	10004226 	beq	r2,zero,8a260 <__mdiff+0x13c>
   8a158:	10005016 	blt	r2,zero,8a29c <__mdiff+0x178>
   8a15c:	0027883a 	mov	r19,zero
   8a160:	81400117 	ldw	r5,4(r16)
   8a164:	9009883a 	mov	r4,r18
   8a168:	0089eec0 	call	89eec <_Balloc>
   8a16c:	1019883a 	mov	r12,r2
   8a170:	82800417 	ldw	r10,16(r16)
   8a174:	88800417 	ldw	r2,16(r17)
   8a178:	81800504 	addi	r6,r16,20
   8a17c:	5287883a 	add	r3,r10,r10
   8a180:	1085883a 	add	r2,r2,r2
   8a184:	18c7883a 	add	r3,r3,r3
   8a188:	1085883a 	add	r2,r2,r2
   8a18c:	8a000504 	addi	r8,r17,20
   8a190:	64c00315 	stw	r19,12(r12)
   8a194:	30db883a 	add	r13,r6,r3
   8a198:	4097883a 	add	r11,r8,r2
   8a19c:	61c00504 	addi	r7,r12,20
   8a1a0:	0013883a 	mov	r9,zero
   8a1a4:	31000017 	ldw	r4,0(r6)
   8a1a8:	41400017 	ldw	r5,0(r8)
   8a1ac:	42000104 	addi	r8,r8,4
   8a1b0:	20bfffcc 	andi	r2,r4,65535
   8a1b4:	28ffffcc 	andi	r3,r5,65535
   8a1b8:	10c5c83a 	sub	r2,r2,r3
   8a1bc:	1245883a 	add	r2,r2,r9
   8a1c0:	2008d43a 	srli	r4,r4,16
   8a1c4:	280ad43a 	srli	r5,r5,16
   8a1c8:	1007d43a 	srai	r3,r2,16
   8a1cc:	3880000d 	sth	r2,0(r7)
   8a1d0:	2149c83a 	sub	r4,r4,r5
   8a1d4:	20c9883a 	add	r4,r4,r3
   8a1d8:	3900008d 	sth	r4,2(r7)
   8a1dc:	31800104 	addi	r6,r6,4
   8a1e0:	39c00104 	addi	r7,r7,4
   8a1e4:	2013d43a 	srai	r9,r4,16
   8a1e8:	42ffee36 	bltu	r8,r11,8a1a4 <__mdiff+0x80>
   8a1ec:	33400c2e 	bgeu	r6,r13,8a220 <__mdiff+0xfc>
   8a1f0:	30800017 	ldw	r2,0(r6)
   8a1f4:	31800104 	addi	r6,r6,4
   8a1f8:	10ffffcc 	andi	r3,r2,65535
   8a1fc:	1a47883a 	add	r3,r3,r9
   8a200:	1004d43a 	srli	r2,r2,16
   8a204:	1809d43a 	srai	r4,r3,16
   8a208:	38c0000d 	sth	r3,0(r7)
   8a20c:	1105883a 	add	r2,r2,r4
   8a210:	3880008d 	sth	r2,2(r7)
   8a214:	1013d43a 	srai	r9,r2,16
   8a218:	39c00104 	addi	r7,r7,4
   8a21c:	337ff436 	bltu	r6,r13,8a1f0 <__mdiff+0xcc>
   8a220:	38bfff17 	ldw	r2,-4(r7)
   8a224:	38ffff04 	addi	r3,r7,-4
   8a228:	1000041e 	bne	r2,zero,8a23c <__mdiff+0x118>
   8a22c:	18ffff04 	addi	r3,r3,-4
   8a230:	18800017 	ldw	r2,0(r3)
   8a234:	52bfffc4 	addi	r10,r10,-1
   8a238:	103ffc26 	beq	r2,zero,8a22c <__mdiff+0x108>
   8a23c:	6005883a 	mov	r2,r12
   8a240:	62800415 	stw	r10,16(r12)
   8a244:	dfc00417 	ldw	ra,16(sp)
   8a248:	dcc00317 	ldw	r19,12(sp)
   8a24c:	dc800217 	ldw	r18,8(sp)
   8a250:	dc400117 	ldw	r17,4(sp)
   8a254:	dc000017 	ldw	r16,0(sp)
   8a258:	dec00504 	addi	sp,sp,20
   8a25c:	f800283a 	ret
   8a260:	9009883a 	mov	r4,r18
   8a264:	000b883a 	mov	r5,zero
   8a268:	0089eec0 	call	89eec <_Balloc>
   8a26c:	1019883a 	mov	r12,r2
   8a270:	00800044 	movi	r2,1
   8a274:	60800415 	stw	r2,16(r12)
   8a278:	6005883a 	mov	r2,r12
   8a27c:	60000515 	stw	zero,20(r12)
   8a280:	dfc00417 	ldw	ra,16(sp)
   8a284:	dcc00317 	ldw	r19,12(sp)
   8a288:	dc800217 	ldw	r18,8(sp)
   8a28c:	dc400117 	ldw	r17,4(sp)
   8a290:	dc000017 	ldw	r16,0(sp)
   8a294:	dec00504 	addi	sp,sp,20
   8a298:	f800283a 	ret
   8a29c:	880d883a 	mov	r6,r17
   8a2a0:	04c00044 	movi	r19,1
   8a2a4:	8023883a 	mov	r17,r16
   8a2a8:	3021883a 	mov	r16,r6
   8a2ac:	003fac06 	br	8a160 <__mdiff+0x3c>

0008a2b0 <__lshift>:
   8a2b0:	defff904 	addi	sp,sp,-28
   8a2b4:	28800417 	ldw	r2,16(r5)
   8a2b8:	dc000015 	stw	r16,0(sp)
   8a2bc:	3021d17a 	srai	r16,r6,5
   8a2c0:	28c00217 	ldw	r3,8(r5)
   8a2c4:	10800044 	addi	r2,r2,1
   8a2c8:	dc400115 	stw	r17,4(sp)
   8a2cc:	80a3883a 	add	r17,r16,r2
   8a2d0:	dd400515 	stw	r21,20(sp)
   8a2d4:	dd000415 	stw	r20,16(sp)
   8a2d8:	dc800215 	stw	r18,8(sp)
   8a2dc:	dfc00615 	stw	ra,24(sp)
   8a2e0:	2825883a 	mov	r18,r5
   8a2e4:	dcc00315 	stw	r19,12(sp)
   8a2e8:	3029883a 	mov	r20,r6
   8a2ec:	202b883a 	mov	r21,r4
   8a2f0:	29400117 	ldw	r5,4(r5)
   8a2f4:	1c40030e 	bge	r3,r17,8a304 <__lshift+0x54>
   8a2f8:	18c7883a 	add	r3,r3,r3
   8a2fc:	29400044 	addi	r5,r5,1
   8a300:	1c7ffd16 	blt	r3,r17,8a2f8 <__lshift+0x48>
   8a304:	a809883a 	mov	r4,r21
   8a308:	0089eec0 	call	89eec <_Balloc>
   8a30c:	1027883a 	mov	r19,r2
   8a310:	11400504 	addi	r5,r2,20
   8a314:	0400090e 	bge	zero,r16,8a33c <__lshift+0x8c>
   8a318:	2805883a 	mov	r2,r5
   8a31c:	0007883a 	mov	r3,zero
   8a320:	18c00044 	addi	r3,r3,1
   8a324:	10000015 	stw	zero,0(r2)
   8a328:	10800104 	addi	r2,r2,4
   8a32c:	80fffc1e 	bne	r16,r3,8a320 <__lshift+0x70>
   8a330:	8405883a 	add	r2,r16,r16
   8a334:	1085883a 	add	r2,r2,r2
   8a338:	288b883a 	add	r5,r5,r2
   8a33c:	90800417 	ldw	r2,16(r18)
   8a340:	91000504 	addi	r4,r18,20
   8a344:	a18007cc 	andi	r6,r20,31
   8a348:	1085883a 	add	r2,r2,r2
   8a34c:	1085883a 	add	r2,r2,r2
   8a350:	208f883a 	add	r7,r4,r2
   8a354:	30001e26 	beq	r6,zero,8a3d0 <__lshift+0x120>
   8a358:	00800804 	movi	r2,32
   8a35c:	1191c83a 	sub	r8,r2,r6
   8a360:	0007883a 	mov	r3,zero
   8a364:	20800017 	ldw	r2,0(r4)
   8a368:	1184983a 	sll	r2,r2,r6
   8a36c:	1884b03a 	or	r2,r3,r2
   8a370:	28800015 	stw	r2,0(r5)
   8a374:	20c00017 	ldw	r3,0(r4)
   8a378:	21000104 	addi	r4,r4,4
   8a37c:	29400104 	addi	r5,r5,4
   8a380:	1a06d83a 	srl	r3,r3,r8
   8a384:	21fff736 	bltu	r4,r7,8a364 <__lshift+0xb4>
   8a388:	28c00015 	stw	r3,0(r5)
   8a38c:	18000126 	beq	r3,zero,8a394 <__lshift+0xe4>
   8a390:	8c400044 	addi	r17,r17,1
   8a394:	88bfffc4 	addi	r2,r17,-1
   8a398:	98800415 	stw	r2,16(r19)
   8a39c:	a809883a 	mov	r4,r21
   8a3a0:	900b883a 	mov	r5,r18
   8a3a4:	008996c0 	call	8996c <_Bfree>
   8a3a8:	9805883a 	mov	r2,r19
   8a3ac:	dfc00617 	ldw	ra,24(sp)
   8a3b0:	dd400517 	ldw	r21,20(sp)
   8a3b4:	dd000417 	ldw	r20,16(sp)
   8a3b8:	dcc00317 	ldw	r19,12(sp)
   8a3bc:	dc800217 	ldw	r18,8(sp)
   8a3c0:	dc400117 	ldw	r17,4(sp)
   8a3c4:	dc000017 	ldw	r16,0(sp)
   8a3c8:	dec00704 	addi	sp,sp,28
   8a3cc:	f800283a 	ret
   8a3d0:	20800017 	ldw	r2,0(r4)
   8a3d4:	21000104 	addi	r4,r4,4
   8a3d8:	28800015 	stw	r2,0(r5)
   8a3dc:	29400104 	addi	r5,r5,4
   8a3e0:	21ffec2e 	bgeu	r4,r7,8a394 <__lshift+0xe4>
   8a3e4:	20800017 	ldw	r2,0(r4)
   8a3e8:	21000104 	addi	r4,r4,4
   8a3ec:	28800015 	stw	r2,0(r5)
   8a3f0:	29400104 	addi	r5,r5,4
   8a3f4:	21fff636 	bltu	r4,r7,8a3d0 <__lshift+0x120>
   8a3f8:	003fe606 	br	8a394 <__lshift+0xe4>

0008a3fc <__multiply>:
   8a3fc:	defff904 	addi	sp,sp,-28
   8a400:	dcc00315 	stw	r19,12(sp)
   8a404:	dc800215 	stw	r18,8(sp)
   8a408:	2cc00417 	ldw	r19,16(r5)
   8a40c:	34800417 	ldw	r18,16(r6)
   8a410:	dd000415 	stw	r20,16(sp)
   8a414:	dc400115 	stw	r17,4(sp)
   8a418:	dfc00615 	stw	ra,24(sp)
   8a41c:	dd400515 	stw	r21,20(sp)
   8a420:	dc000015 	stw	r16,0(sp)
   8a424:	2823883a 	mov	r17,r5
   8a428:	3029883a 	mov	r20,r6
   8a42c:	9c80040e 	bge	r19,r18,8a440 <__multiply+0x44>
   8a430:	9027883a 	mov	r19,r18
   8a434:	2c800417 	ldw	r18,16(r5)
   8a438:	2829883a 	mov	r20,r5
   8a43c:	3023883a 	mov	r17,r6
   8a440:	88800217 	ldw	r2,8(r17)
   8a444:	9ca1883a 	add	r16,r19,r18
   8a448:	89400117 	ldw	r5,4(r17)
   8a44c:	1400010e 	bge	r2,r16,8a454 <__multiply+0x58>
   8a450:	29400044 	addi	r5,r5,1
   8a454:	0089eec0 	call	89eec <_Balloc>
   8a458:	102b883a 	mov	r21,r2
   8a45c:	8405883a 	add	r2,r16,r16
   8a460:	1085883a 	add	r2,r2,r2
   8a464:	a9000504 	addi	r4,r21,20
   8a468:	209d883a 	add	r14,r4,r2
   8a46c:	2380042e 	bgeu	r4,r14,8a480 <__multiply+0x84>
   8a470:	2005883a 	mov	r2,r4
   8a474:	10000015 	stw	zero,0(r2)
   8a478:	10800104 	addi	r2,r2,4
   8a47c:	13bffd36 	bltu	r2,r14,8a474 <__multiply+0x78>
   8a480:	9485883a 	add	r2,r18,r18
   8a484:	9cc7883a 	add	r3,r19,r19
   8a488:	a1800504 	addi	r6,r20,20
   8a48c:	1085883a 	add	r2,r2,r2
   8a490:	8b400504 	addi	r13,r17,20
   8a494:	18c7883a 	add	r3,r3,r3
   8a498:	309f883a 	add	r15,r6,r2
   8a49c:	68d7883a 	add	r11,r13,r3
   8a4a0:	33c03b2e 	bgeu	r6,r15,8a590 <__multiply+0x194>
   8a4a4:	2019883a 	mov	r12,r4
   8a4a8:	30800017 	ldw	r2,0(r6)
   8a4ac:	127fffcc 	andi	r9,r2,65535
   8a4b0:	48001826 	beq	r9,zero,8a514 <__multiply+0x118>
   8a4b4:	6811883a 	mov	r8,r13
   8a4b8:	600f883a 	mov	r7,r12
   8a4bc:	0015883a 	mov	r10,zero
   8a4c0:	40c00017 	ldw	r3,0(r8)
   8a4c4:	39400017 	ldw	r5,0(r7)
   8a4c8:	42000104 	addi	r8,r8,4
   8a4cc:	193fffcc 	andi	r4,r3,65535
   8a4d0:	4909383a 	mul	r4,r9,r4
   8a4d4:	1806d43a 	srli	r3,r3,16
   8a4d8:	28bfffcc 	andi	r2,r5,65535
   8a4dc:	5085883a 	add	r2,r10,r2
   8a4e0:	2089883a 	add	r4,r4,r2
   8a4e4:	48c7383a 	mul	r3,r9,r3
   8a4e8:	280ad43a 	srli	r5,r5,16
   8a4ec:	2004d43a 	srli	r2,r4,16
   8a4f0:	3900000d 	sth	r4,0(r7)
   8a4f4:	1947883a 	add	r3,r3,r5
   8a4f8:	10c5883a 	add	r2,r2,r3
   8a4fc:	3880008d 	sth	r2,2(r7)
   8a500:	1014d43a 	srli	r10,r2,16
   8a504:	39c00104 	addi	r7,r7,4
   8a508:	42ffed36 	bltu	r8,r11,8a4c0 <__multiply+0xc4>
   8a50c:	3a800015 	stw	r10,0(r7)
   8a510:	30800017 	ldw	r2,0(r6)
   8a514:	1012d43a 	srli	r9,r2,16
   8a518:	48001926 	beq	r9,zero,8a580 <__multiply+0x184>
   8a51c:	60800017 	ldw	r2,0(r12)
   8a520:	6811883a 	mov	r8,r13
   8a524:	600f883a 	mov	r7,r12
   8a528:	0015883a 	mov	r10,zero
   8a52c:	100b883a 	mov	r5,r2
   8a530:	41000017 	ldw	r4,0(r8)
   8a534:	2806d43a 	srli	r3,r5,16
   8a538:	3880000d 	sth	r2,0(r7)
   8a53c:	20bfffcc 	andi	r2,r4,65535
   8a540:	4885383a 	mul	r2,r9,r2
   8a544:	50c7883a 	add	r3,r10,r3
   8a548:	2008d43a 	srli	r4,r4,16
   8a54c:	10c5883a 	add	r2,r2,r3
   8a550:	3880008d 	sth	r2,2(r7)
   8a554:	39c00104 	addi	r7,r7,4
   8a558:	39400017 	ldw	r5,0(r7)
   8a55c:	4909383a 	mul	r4,r9,r4
   8a560:	1004d43a 	srli	r2,r2,16
   8a564:	28ffffcc 	andi	r3,r5,65535
   8a568:	20c9883a 	add	r4,r4,r3
   8a56c:	1105883a 	add	r2,r2,r4
   8a570:	42000104 	addi	r8,r8,4
   8a574:	1014d43a 	srli	r10,r2,16
   8a578:	42ffed36 	bltu	r8,r11,8a530 <__multiply+0x134>
   8a57c:	38800015 	stw	r2,0(r7)
   8a580:	31800104 	addi	r6,r6,4
   8a584:	33c0022e 	bgeu	r6,r15,8a590 <__multiply+0x194>
   8a588:	63000104 	addi	r12,r12,4
   8a58c:	003fc606 	br	8a4a8 <__multiply+0xac>
   8a590:	0400090e 	bge	zero,r16,8a5b8 <__multiply+0x1bc>
   8a594:	70bfff17 	ldw	r2,-4(r14)
   8a598:	70ffff04 	addi	r3,r14,-4
   8a59c:	10000326 	beq	r2,zero,8a5ac <__multiply+0x1b0>
   8a5a0:	00000506 	br	8a5b8 <__multiply+0x1bc>
   8a5a4:	18800017 	ldw	r2,0(r3)
   8a5a8:	1000031e 	bne	r2,zero,8a5b8 <__multiply+0x1bc>
   8a5ac:	843fffc4 	addi	r16,r16,-1
   8a5b0:	18ffff04 	addi	r3,r3,-4
   8a5b4:	803ffb1e 	bne	r16,zero,8a5a4 <__multiply+0x1a8>
   8a5b8:	a805883a 	mov	r2,r21
   8a5bc:	ac000415 	stw	r16,16(r21)
   8a5c0:	dfc00617 	ldw	ra,24(sp)
   8a5c4:	dd400517 	ldw	r21,20(sp)
   8a5c8:	dd000417 	ldw	r20,16(sp)
   8a5cc:	dcc00317 	ldw	r19,12(sp)
   8a5d0:	dc800217 	ldw	r18,8(sp)
   8a5d4:	dc400117 	ldw	r17,4(sp)
   8a5d8:	dc000017 	ldw	r16,0(sp)
   8a5dc:	dec00704 	addi	sp,sp,28
   8a5e0:	f800283a 	ret

0008a5e4 <__i2b>:
   8a5e4:	defffd04 	addi	sp,sp,-12
   8a5e8:	dc000015 	stw	r16,0(sp)
   8a5ec:	04000044 	movi	r16,1
   8a5f0:	dc800115 	stw	r18,4(sp)
   8a5f4:	2825883a 	mov	r18,r5
   8a5f8:	800b883a 	mov	r5,r16
   8a5fc:	dfc00215 	stw	ra,8(sp)
   8a600:	0089eec0 	call	89eec <_Balloc>
   8a604:	14000415 	stw	r16,16(r2)
   8a608:	14800515 	stw	r18,20(r2)
   8a60c:	dfc00217 	ldw	ra,8(sp)
   8a610:	dc800117 	ldw	r18,4(sp)
   8a614:	dc000017 	ldw	r16,0(sp)
   8a618:	dec00304 	addi	sp,sp,12
   8a61c:	f800283a 	ret

0008a620 <__multadd>:
   8a620:	defffa04 	addi	sp,sp,-24
   8a624:	dc800215 	stw	r18,8(sp)
   8a628:	2c800417 	ldw	r18,16(r5)
   8a62c:	dd000415 	stw	r20,16(sp)
   8a630:	dcc00315 	stw	r19,12(sp)
   8a634:	dc000015 	stw	r16,0(sp)
   8a638:	dfc00515 	stw	ra,20(sp)
   8a63c:	3821883a 	mov	r16,r7
   8a640:	dc400115 	stw	r17,4(sp)
   8a644:	2827883a 	mov	r19,r5
   8a648:	2029883a 	mov	r20,r4
   8a64c:	2a000504 	addi	r8,r5,20
   8a650:	000f883a 	mov	r7,zero
   8a654:	40800017 	ldw	r2,0(r8)
   8a658:	39c00044 	addi	r7,r7,1
   8a65c:	10ffffcc 	andi	r3,r2,65535
   8a660:	1987383a 	mul	r3,r3,r6
   8a664:	1004d43a 	srli	r2,r2,16
   8a668:	1c07883a 	add	r3,r3,r16
   8a66c:	180ad43a 	srli	r5,r3,16
   8a670:	1185383a 	mul	r2,r2,r6
   8a674:	18ffffcc 	andi	r3,r3,65535
   8a678:	1145883a 	add	r2,r2,r5
   8a67c:	1008943a 	slli	r4,r2,16
   8a680:	1020d43a 	srli	r16,r2,16
   8a684:	20c9883a 	add	r4,r4,r3
   8a688:	41000015 	stw	r4,0(r8)
   8a68c:	42000104 	addi	r8,r8,4
   8a690:	3cbff016 	blt	r7,r18,8a654 <__multadd+0x34>
   8a694:	80000826 	beq	r16,zero,8a6b8 <__multadd+0x98>
   8a698:	98800217 	ldw	r2,8(r19)
   8a69c:	90800f0e 	bge	r18,r2,8a6dc <__multadd+0xbc>
   8a6a0:	9485883a 	add	r2,r18,r18
   8a6a4:	1085883a 	add	r2,r2,r2
   8a6a8:	14c5883a 	add	r2,r2,r19
   8a6ac:	90c00044 	addi	r3,r18,1
   8a6b0:	14000515 	stw	r16,20(r2)
   8a6b4:	98c00415 	stw	r3,16(r19)
   8a6b8:	9805883a 	mov	r2,r19
   8a6bc:	dfc00517 	ldw	ra,20(sp)
   8a6c0:	dd000417 	ldw	r20,16(sp)
   8a6c4:	dcc00317 	ldw	r19,12(sp)
   8a6c8:	dc800217 	ldw	r18,8(sp)
   8a6cc:	dc400117 	ldw	r17,4(sp)
   8a6d0:	dc000017 	ldw	r16,0(sp)
   8a6d4:	dec00604 	addi	sp,sp,24
   8a6d8:	f800283a 	ret
   8a6dc:	99400117 	ldw	r5,4(r19)
   8a6e0:	a009883a 	mov	r4,r20
   8a6e4:	29400044 	addi	r5,r5,1
   8a6e8:	0089eec0 	call	89eec <_Balloc>
   8a6ec:	99800417 	ldw	r6,16(r19)
   8a6f0:	99400304 	addi	r5,r19,12
   8a6f4:	11000304 	addi	r4,r2,12
   8a6f8:	318d883a 	add	r6,r6,r6
   8a6fc:	318d883a 	add	r6,r6,r6
   8a700:	31800204 	addi	r6,r6,8
   8a704:	1023883a 	mov	r17,r2
   8a708:	00897540 	call	89754 <memcpy>
   8a70c:	980b883a 	mov	r5,r19
   8a710:	a009883a 	mov	r4,r20
   8a714:	008996c0 	call	8996c <_Bfree>
   8a718:	8827883a 	mov	r19,r17
   8a71c:	003fe006 	br	8a6a0 <__multadd+0x80>

0008a720 <__pow5mult>:
   8a720:	defffa04 	addi	sp,sp,-24
   8a724:	308000cc 	andi	r2,r6,3
   8a728:	dd000415 	stw	r20,16(sp)
   8a72c:	dcc00315 	stw	r19,12(sp)
   8a730:	dc000015 	stw	r16,0(sp)
   8a734:	dfc00515 	stw	ra,20(sp)
   8a738:	dc800215 	stw	r18,8(sp)
   8a73c:	dc400115 	stw	r17,4(sp)
   8a740:	3021883a 	mov	r16,r6
   8a744:	2027883a 	mov	r19,r4
   8a748:	2829883a 	mov	r20,r5
   8a74c:	10002b1e 	bne	r2,zero,8a7fc <__pow5mult+0xdc>
   8a750:	8025d0ba 	srai	r18,r16,2
   8a754:	90001b26 	beq	r18,zero,8a7c4 <__pow5mult+0xa4>
   8a758:	9c001217 	ldw	r16,72(r19)
   8a75c:	8000081e 	bne	r16,zero,8a780 <__pow5mult+0x60>
   8a760:	00003006 	br	8a824 <__pow5mult+0x104>
   8a764:	800b883a 	mov	r5,r16
   8a768:	800d883a 	mov	r6,r16
   8a76c:	9809883a 	mov	r4,r19
   8a770:	90001426 	beq	r18,zero,8a7c4 <__pow5mult+0xa4>
   8a774:	80800017 	ldw	r2,0(r16)
   8a778:	10001b26 	beq	r2,zero,8a7e8 <__pow5mult+0xc8>
   8a77c:	1021883a 	mov	r16,r2
   8a780:	9080004c 	andi	r2,r18,1
   8a784:	1005003a 	cmpeq	r2,r2,zero
   8a788:	9025d07a 	srai	r18,r18,1
   8a78c:	800d883a 	mov	r6,r16
   8a790:	9809883a 	mov	r4,r19
   8a794:	a00b883a 	mov	r5,r20
   8a798:	103ff21e 	bne	r2,zero,8a764 <__pow5mult+0x44>
   8a79c:	008a3fc0 	call	8a3fc <__multiply>
   8a7a0:	a00b883a 	mov	r5,r20
   8a7a4:	9809883a 	mov	r4,r19
   8a7a8:	1023883a 	mov	r17,r2
   8a7ac:	008996c0 	call	8996c <_Bfree>
   8a7b0:	8829883a 	mov	r20,r17
   8a7b4:	800b883a 	mov	r5,r16
   8a7b8:	800d883a 	mov	r6,r16
   8a7bc:	9809883a 	mov	r4,r19
   8a7c0:	903fec1e 	bne	r18,zero,8a774 <__pow5mult+0x54>
   8a7c4:	a005883a 	mov	r2,r20
   8a7c8:	dfc00517 	ldw	ra,20(sp)
   8a7cc:	dd000417 	ldw	r20,16(sp)
   8a7d0:	dcc00317 	ldw	r19,12(sp)
   8a7d4:	dc800217 	ldw	r18,8(sp)
   8a7d8:	dc400117 	ldw	r17,4(sp)
   8a7dc:	dc000017 	ldw	r16,0(sp)
   8a7e0:	dec00604 	addi	sp,sp,24
   8a7e4:	f800283a 	ret
   8a7e8:	008a3fc0 	call	8a3fc <__multiply>
   8a7ec:	80800015 	stw	r2,0(r16)
   8a7f0:	1021883a 	mov	r16,r2
   8a7f4:	10000015 	stw	zero,0(r2)
   8a7f8:	003fe106 	br	8a780 <__pow5mult+0x60>
   8a7fc:	1085883a 	add	r2,r2,r2
   8a800:	00c00274 	movhi	r3,9
   8a804:	18fd8804 	addi	r3,r3,-2528
   8a808:	1085883a 	add	r2,r2,r2
   8a80c:	10c5883a 	add	r2,r2,r3
   8a810:	11bfff17 	ldw	r6,-4(r2)
   8a814:	000f883a 	mov	r7,zero
   8a818:	008a6200 	call	8a620 <__multadd>
   8a81c:	1029883a 	mov	r20,r2
   8a820:	003fcb06 	br	8a750 <__pow5mult+0x30>
   8a824:	9809883a 	mov	r4,r19
   8a828:	01409c44 	movi	r5,625
   8a82c:	008a5e40 	call	8a5e4 <__i2b>
   8a830:	98801215 	stw	r2,72(r19)
   8a834:	1021883a 	mov	r16,r2
   8a838:	10000015 	stw	zero,0(r2)
   8a83c:	003fd006 	br	8a780 <__pow5mult+0x60>

0008a840 <__s2b>:
   8a840:	defff904 	addi	sp,sp,-28
   8a844:	dcc00315 	stw	r19,12(sp)
   8a848:	dc800215 	stw	r18,8(sp)
   8a84c:	2827883a 	mov	r19,r5
   8a850:	2025883a 	mov	r18,r4
   8a854:	01400244 	movi	r5,9
   8a858:	39000204 	addi	r4,r7,8
   8a85c:	dd000415 	stw	r20,16(sp)
   8a860:	dc400115 	stw	r17,4(sp)
   8a864:	dfc00615 	stw	ra,24(sp)
   8a868:	dd400515 	stw	r21,20(sp)
   8a86c:	dc000015 	stw	r16,0(sp)
   8a870:	3829883a 	mov	r20,r7
   8a874:	3023883a 	mov	r17,r6
   8a878:	0083de80 	call	83de8 <__divsi3>
   8a87c:	00c00044 	movi	r3,1
   8a880:	1880350e 	bge	r3,r2,8a958 <__s2b+0x118>
   8a884:	000b883a 	mov	r5,zero
   8a888:	18c7883a 	add	r3,r3,r3
   8a88c:	29400044 	addi	r5,r5,1
   8a890:	18bffd16 	blt	r3,r2,8a888 <__s2b+0x48>
   8a894:	9009883a 	mov	r4,r18
   8a898:	0089eec0 	call	89eec <_Balloc>
   8a89c:	1011883a 	mov	r8,r2
   8a8a0:	d8800717 	ldw	r2,28(sp)
   8a8a4:	00c00044 	movi	r3,1
   8a8a8:	01800244 	movi	r6,9
   8a8ac:	40800515 	stw	r2,20(r8)
   8a8b0:	40c00415 	stw	r3,16(r8)
   8a8b4:	3440260e 	bge	r6,r17,8a950 <__s2b+0x110>
   8a8b8:	3021883a 	mov	r16,r6
   8a8bc:	99ab883a 	add	r21,r19,r6
   8a8c0:	9c05883a 	add	r2,r19,r16
   8a8c4:	11c00007 	ldb	r7,0(r2)
   8a8c8:	400b883a 	mov	r5,r8
   8a8cc:	9009883a 	mov	r4,r18
   8a8d0:	39fff404 	addi	r7,r7,-48
   8a8d4:	01800284 	movi	r6,10
   8a8d8:	008a6200 	call	8a620 <__multadd>
   8a8dc:	84000044 	addi	r16,r16,1
   8a8e0:	1011883a 	mov	r8,r2
   8a8e4:	8c3ff61e 	bne	r17,r16,8a8c0 <__s2b+0x80>
   8a8e8:	ac45883a 	add	r2,r21,r17
   8a8ec:	117ffe04 	addi	r5,r2,-8
   8a8f0:	880d883a 	mov	r6,r17
   8a8f4:	35000c0e 	bge	r6,r20,8a928 <__s2b+0xe8>
   8a8f8:	a185c83a 	sub	r2,r20,r6
   8a8fc:	2821883a 	mov	r16,r5
   8a900:	28a3883a 	add	r17,r5,r2
   8a904:	81c00007 	ldb	r7,0(r16)
   8a908:	400b883a 	mov	r5,r8
   8a90c:	9009883a 	mov	r4,r18
   8a910:	39fff404 	addi	r7,r7,-48
   8a914:	01800284 	movi	r6,10
   8a918:	008a6200 	call	8a620 <__multadd>
   8a91c:	84000044 	addi	r16,r16,1
   8a920:	1011883a 	mov	r8,r2
   8a924:	847ff71e 	bne	r16,r17,8a904 <__s2b+0xc4>
   8a928:	4005883a 	mov	r2,r8
   8a92c:	dfc00617 	ldw	ra,24(sp)
   8a930:	dd400517 	ldw	r21,20(sp)
   8a934:	dd000417 	ldw	r20,16(sp)
   8a938:	dcc00317 	ldw	r19,12(sp)
   8a93c:	dc800217 	ldw	r18,8(sp)
   8a940:	dc400117 	ldw	r17,4(sp)
   8a944:	dc000017 	ldw	r16,0(sp)
   8a948:	dec00704 	addi	sp,sp,28
   8a94c:	f800283a 	ret
   8a950:	99400284 	addi	r5,r19,10
   8a954:	003fe706 	br	8a8f4 <__s2b+0xb4>
   8a958:	000b883a 	mov	r5,zero
   8a95c:	003fcd06 	br	8a894 <__s2b+0x54>

0008a960 <_realloc_r>:
   8a960:	defff404 	addi	sp,sp,-48
   8a964:	dd800815 	stw	r22,32(sp)
   8a968:	dc800415 	stw	r18,16(sp)
   8a96c:	dc400315 	stw	r17,12(sp)
   8a970:	dfc00b15 	stw	ra,44(sp)
   8a974:	df000a15 	stw	fp,40(sp)
   8a978:	ddc00915 	stw	r23,36(sp)
   8a97c:	dd400715 	stw	r21,28(sp)
   8a980:	dd000615 	stw	r20,24(sp)
   8a984:	dcc00515 	stw	r19,20(sp)
   8a988:	dc000215 	stw	r16,8(sp)
   8a98c:	2825883a 	mov	r18,r5
   8a990:	3023883a 	mov	r17,r6
   8a994:	202d883a 	mov	r22,r4
   8a998:	2800c926 	beq	r5,zero,8acc0 <_realloc_r+0x360>
   8a99c:	008ce500 	call	8ce50 <__malloc_lock>
   8a9a0:	943ffe04 	addi	r16,r18,-8
   8a9a4:	88c002c4 	addi	r3,r17,11
   8a9a8:	00800584 	movi	r2,22
   8a9ac:	82000117 	ldw	r8,4(r16)
   8a9b0:	10c01b2e 	bgeu	r2,r3,8aa20 <_realloc_r+0xc0>
   8a9b4:	00bffe04 	movi	r2,-8
   8a9b8:	188e703a 	and	r7,r3,r2
   8a9bc:	3839883a 	mov	fp,r7
   8a9c0:	38001a16 	blt	r7,zero,8aa2c <_realloc_r+0xcc>
   8a9c4:	e4401936 	bltu	fp,r17,8aa2c <_realloc_r+0xcc>
   8a9c8:	013fff04 	movi	r4,-4
   8a9cc:	4126703a 	and	r19,r8,r4
   8a9d0:	99c02616 	blt	r19,r7,8aa6c <_realloc_r+0x10c>
   8a9d4:	802b883a 	mov	r21,r16
   8a9d8:	9829883a 	mov	r20,r19
   8a9dc:	84000204 	addi	r16,r16,8
   8a9e0:	a80f883a 	mov	r7,r21
   8a9e4:	a70dc83a 	sub	r6,r20,fp
   8a9e8:	008003c4 	movi	r2,15
   8a9ec:	1180c136 	bltu	r2,r6,8acf4 <_realloc_r+0x394>
   8a9f0:	38800117 	ldw	r2,4(r7)
   8a9f4:	a549883a 	add	r4,r20,r21
   8a9f8:	1080004c 	andi	r2,r2,1
   8a9fc:	a084b03a 	or	r2,r20,r2
   8aa00:	38800115 	stw	r2,4(r7)
   8aa04:	20c00117 	ldw	r3,4(r4)
   8aa08:	18c00054 	ori	r3,r3,1
   8aa0c:	20c00115 	stw	r3,4(r4)
   8aa10:	b009883a 	mov	r4,r22
   8aa14:	008ce700 	call	8ce70 <__malloc_unlock>
   8aa18:	8023883a 	mov	r17,r16
   8aa1c:	00000606 	br	8aa38 <_realloc_r+0xd8>
   8aa20:	01c00404 	movi	r7,16
   8aa24:	3839883a 	mov	fp,r7
   8aa28:	e47fe72e 	bgeu	fp,r17,8a9c8 <_realloc_r+0x68>
   8aa2c:	00800304 	movi	r2,12
   8aa30:	0023883a 	mov	r17,zero
   8aa34:	b0800015 	stw	r2,0(r22)
   8aa38:	8805883a 	mov	r2,r17
   8aa3c:	dfc00b17 	ldw	ra,44(sp)
   8aa40:	df000a17 	ldw	fp,40(sp)
   8aa44:	ddc00917 	ldw	r23,36(sp)
   8aa48:	dd800817 	ldw	r22,32(sp)
   8aa4c:	dd400717 	ldw	r21,28(sp)
   8aa50:	dd000617 	ldw	r20,24(sp)
   8aa54:	dcc00517 	ldw	r19,20(sp)
   8aa58:	dc800417 	ldw	r18,16(sp)
   8aa5c:	dc400317 	ldw	r17,12(sp)
   8aa60:	dc000217 	ldw	r16,8(sp)
   8aa64:	dec00c04 	addi	sp,sp,48
   8aa68:	f800283a 	ret
   8aa6c:	00800274 	movhi	r2,9
   8aa70:	10bf2b04 	addi	r2,r2,-852
   8aa74:	12400217 	ldw	r9,8(r2)
   8aa78:	84cd883a 	add	r6,r16,r19
   8aa7c:	802b883a 	mov	r21,r16
   8aa80:	3240b926 	beq	r6,r9,8ad68 <_realloc_r+0x408>
   8aa84:	31400117 	ldw	r5,4(r6)
   8aa88:	00bfff84 	movi	r2,-2
   8aa8c:	2884703a 	and	r2,r5,r2
   8aa90:	1185883a 	add	r2,r2,r6
   8aa94:	10c00117 	ldw	r3,4(r2)
   8aa98:	18c0004c 	andi	r3,r3,1
   8aa9c:	1807003a 	cmpeq	r3,r3,zero
   8aaa0:	1800a326 	beq	r3,zero,8ad30 <_realloc_r+0x3d0>
   8aaa4:	2908703a 	and	r4,r5,r4
   8aaa8:	9929883a 	add	r20,r19,r4
   8aaac:	a1c0a30e 	bge	r20,r7,8ad3c <_realloc_r+0x3dc>
   8aab0:	4080004c 	andi	r2,r8,1
   8aab4:	1000551e 	bne	r2,zero,8ac0c <_realloc_r+0x2ac>
   8aab8:	80800017 	ldw	r2,0(r16)
   8aabc:	80afc83a 	sub	r23,r16,r2
   8aac0:	b8c00117 	ldw	r3,4(r23)
   8aac4:	00bfff04 	movi	r2,-4
   8aac8:	1884703a 	and	r2,r3,r2
   8aacc:	30002e26 	beq	r6,zero,8ab88 <_realloc_r+0x228>
   8aad0:	3240b926 	beq	r6,r9,8adb8 <_realloc_r+0x458>
   8aad4:	98a9883a 	add	r20,r19,r2
   8aad8:	2509883a 	add	r4,r4,r20
   8aadc:	d9000015 	stw	r4,0(sp)
   8aae0:	21c02a16 	blt	r4,r7,8ab8c <_realloc_r+0x22c>
   8aae4:	30800317 	ldw	r2,12(r6)
   8aae8:	30c00217 	ldw	r3,8(r6)
   8aaec:	01400904 	movi	r5,36
   8aaf0:	99bfff04 	addi	r6,r19,-4
   8aaf4:	18800315 	stw	r2,12(r3)
   8aaf8:	10c00215 	stw	r3,8(r2)
   8aafc:	b9000317 	ldw	r4,12(r23)
   8ab00:	b8800217 	ldw	r2,8(r23)
   8ab04:	b82b883a 	mov	r21,r23
   8ab08:	bc000204 	addi	r16,r23,8
   8ab0c:	20800215 	stw	r2,8(r4)
   8ab10:	11000315 	stw	r4,12(r2)
   8ab14:	2980e436 	bltu	r5,r6,8aea8 <_realloc_r+0x548>
   8ab18:	008004c4 	movi	r2,19
   8ab1c:	9009883a 	mov	r4,r18
   8ab20:	8011883a 	mov	r8,r16
   8ab24:	11800f2e 	bgeu	r2,r6,8ab64 <_realloc_r+0x204>
   8ab28:	90800017 	ldw	r2,0(r18)
   8ab2c:	ba000404 	addi	r8,r23,16
   8ab30:	91000204 	addi	r4,r18,8
   8ab34:	b8800215 	stw	r2,8(r23)
   8ab38:	90c00117 	ldw	r3,4(r18)
   8ab3c:	008006c4 	movi	r2,27
   8ab40:	b8c00315 	stw	r3,12(r23)
   8ab44:	1180072e 	bgeu	r2,r6,8ab64 <_realloc_r+0x204>
   8ab48:	90c00217 	ldw	r3,8(r18)
   8ab4c:	ba000604 	addi	r8,r23,24
   8ab50:	91000404 	addi	r4,r18,16
   8ab54:	b8c00415 	stw	r3,16(r23)
   8ab58:	90800317 	ldw	r2,12(r18)
   8ab5c:	b8800515 	stw	r2,20(r23)
   8ab60:	3140e726 	beq	r6,r5,8af00 <_realloc_r+0x5a0>
   8ab64:	20800017 	ldw	r2,0(r4)
   8ab68:	dd000017 	ldw	r20,0(sp)
   8ab6c:	b80f883a 	mov	r7,r23
   8ab70:	40800015 	stw	r2,0(r8)
   8ab74:	20c00117 	ldw	r3,4(r4)
   8ab78:	40c00115 	stw	r3,4(r8)
   8ab7c:	20800217 	ldw	r2,8(r4)
   8ab80:	40800215 	stw	r2,8(r8)
   8ab84:	003f9706 	br	8a9e4 <_realloc_r+0x84>
   8ab88:	98a9883a 	add	r20,r19,r2
   8ab8c:	a1c01f16 	blt	r20,r7,8ac0c <_realloc_r+0x2ac>
   8ab90:	b8c00317 	ldw	r3,12(r23)
   8ab94:	b8800217 	ldw	r2,8(r23)
   8ab98:	99bfff04 	addi	r6,r19,-4
   8ab9c:	01400904 	movi	r5,36
   8aba0:	b82b883a 	mov	r21,r23
   8aba4:	18800215 	stw	r2,8(r3)
   8aba8:	10c00315 	stw	r3,12(r2)
   8abac:	bc000204 	addi	r16,r23,8
   8abb0:	2980c336 	bltu	r5,r6,8aec0 <_realloc_r+0x560>
   8abb4:	008004c4 	movi	r2,19
   8abb8:	9009883a 	mov	r4,r18
   8abbc:	8011883a 	mov	r8,r16
   8abc0:	11800f2e 	bgeu	r2,r6,8ac00 <_realloc_r+0x2a0>
   8abc4:	90800017 	ldw	r2,0(r18)
   8abc8:	ba000404 	addi	r8,r23,16
   8abcc:	91000204 	addi	r4,r18,8
   8abd0:	b8800215 	stw	r2,8(r23)
   8abd4:	90c00117 	ldw	r3,4(r18)
   8abd8:	008006c4 	movi	r2,27
   8abdc:	b8c00315 	stw	r3,12(r23)
   8abe0:	1180072e 	bgeu	r2,r6,8ac00 <_realloc_r+0x2a0>
   8abe4:	90c00217 	ldw	r3,8(r18)
   8abe8:	ba000604 	addi	r8,r23,24
   8abec:	91000404 	addi	r4,r18,16
   8abf0:	b8c00415 	stw	r3,16(r23)
   8abf4:	90800317 	ldw	r2,12(r18)
   8abf8:	b8800515 	stw	r2,20(r23)
   8abfc:	3140c726 	beq	r6,r5,8af1c <_realloc_r+0x5bc>
   8ac00:	20800017 	ldw	r2,0(r4)
   8ac04:	b80f883a 	mov	r7,r23
   8ac08:	003fd906 	br	8ab70 <_realloc_r+0x210>
   8ac0c:	880b883a 	mov	r5,r17
   8ac10:	b009883a 	mov	r4,r22
   8ac14:	0088f300 	call	88f30 <_malloc_r>
   8ac18:	1023883a 	mov	r17,r2
   8ac1c:	10002526 	beq	r2,zero,8acb4 <_realloc_r+0x354>
   8ac20:	80800117 	ldw	r2,4(r16)
   8ac24:	00ffff84 	movi	r3,-2
   8ac28:	893ffe04 	addi	r4,r17,-8
   8ac2c:	10c4703a 	and	r2,r2,r3
   8ac30:	8085883a 	add	r2,r16,r2
   8ac34:	20809526 	beq	r4,r2,8ae8c <_realloc_r+0x52c>
   8ac38:	99bfff04 	addi	r6,r19,-4
   8ac3c:	01c00904 	movi	r7,36
   8ac40:	39804536 	bltu	r7,r6,8ad58 <_realloc_r+0x3f8>
   8ac44:	008004c4 	movi	r2,19
   8ac48:	9009883a 	mov	r4,r18
   8ac4c:	880b883a 	mov	r5,r17
   8ac50:	11800f2e 	bgeu	r2,r6,8ac90 <_realloc_r+0x330>
   8ac54:	90800017 	ldw	r2,0(r18)
   8ac58:	89400204 	addi	r5,r17,8
   8ac5c:	91000204 	addi	r4,r18,8
   8ac60:	88800015 	stw	r2,0(r17)
   8ac64:	90c00117 	ldw	r3,4(r18)
   8ac68:	008006c4 	movi	r2,27
   8ac6c:	88c00115 	stw	r3,4(r17)
   8ac70:	1180072e 	bgeu	r2,r6,8ac90 <_realloc_r+0x330>
   8ac74:	90c00217 	ldw	r3,8(r18)
   8ac78:	89400404 	addi	r5,r17,16
   8ac7c:	91000404 	addi	r4,r18,16
   8ac80:	88c00215 	stw	r3,8(r17)
   8ac84:	90800317 	ldw	r2,12(r18)
   8ac88:	88800315 	stw	r2,12(r17)
   8ac8c:	31c09126 	beq	r6,r7,8aed4 <_realloc_r+0x574>
   8ac90:	20800017 	ldw	r2,0(r4)
   8ac94:	28800015 	stw	r2,0(r5)
   8ac98:	20c00117 	ldw	r3,4(r4)
   8ac9c:	28c00115 	stw	r3,4(r5)
   8aca0:	20800217 	ldw	r2,8(r4)
   8aca4:	28800215 	stw	r2,8(r5)
   8aca8:	900b883a 	mov	r5,r18
   8acac:	b009883a 	mov	r4,r22
   8acb0:	00883a80 	call	883a8 <_free_r>
   8acb4:	b009883a 	mov	r4,r22
   8acb8:	008ce700 	call	8ce70 <__malloc_unlock>
   8acbc:	003f5e06 	br	8aa38 <_realloc_r+0xd8>
   8acc0:	300b883a 	mov	r5,r6
   8acc4:	dfc00b17 	ldw	ra,44(sp)
   8acc8:	df000a17 	ldw	fp,40(sp)
   8accc:	ddc00917 	ldw	r23,36(sp)
   8acd0:	dd800817 	ldw	r22,32(sp)
   8acd4:	dd400717 	ldw	r21,28(sp)
   8acd8:	dd000617 	ldw	r20,24(sp)
   8acdc:	dcc00517 	ldw	r19,20(sp)
   8ace0:	dc800417 	ldw	r18,16(sp)
   8ace4:	dc400317 	ldw	r17,12(sp)
   8ace8:	dc000217 	ldw	r16,8(sp)
   8acec:	dec00c04 	addi	sp,sp,48
   8acf0:	0088f301 	jmpi	88f30 <_malloc_r>
   8acf4:	38800117 	ldw	r2,4(r7)
   8acf8:	e54b883a 	add	r5,fp,r21
   8acfc:	31000054 	ori	r4,r6,1
   8ad00:	1080004c 	andi	r2,r2,1
   8ad04:	1704b03a 	or	r2,r2,fp
   8ad08:	38800115 	stw	r2,4(r7)
   8ad0c:	29000115 	stw	r4,4(r5)
   8ad10:	2987883a 	add	r3,r5,r6
   8ad14:	18800117 	ldw	r2,4(r3)
   8ad18:	29400204 	addi	r5,r5,8
   8ad1c:	b009883a 	mov	r4,r22
   8ad20:	10800054 	ori	r2,r2,1
   8ad24:	18800115 	stw	r2,4(r3)
   8ad28:	00883a80 	call	883a8 <_free_r>
   8ad2c:	003f3806 	br	8aa10 <_realloc_r+0xb0>
   8ad30:	000d883a 	mov	r6,zero
   8ad34:	0009883a 	mov	r4,zero
   8ad38:	003f5d06 	br	8aab0 <_realloc_r+0x150>
   8ad3c:	30c00217 	ldw	r3,8(r6)
   8ad40:	30800317 	ldw	r2,12(r6)
   8ad44:	800f883a 	mov	r7,r16
   8ad48:	84000204 	addi	r16,r16,8
   8ad4c:	10c00215 	stw	r3,8(r2)
   8ad50:	18800315 	stw	r2,12(r3)
   8ad54:	003f2306 	br	8a9e4 <_realloc_r+0x84>
   8ad58:	8809883a 	mov	r4,r17
   8ad5c:	900b883a 	mov	r5,r18
   8ad60:	00897f40 	call	897f4 <memmove>
   8ad64:	003fd006 	br	8aca8 <_realloc_r+0x348>
   8ad68:	30800117 	ldw	r2,4(r6)
   8ad6c:	e0c00404 	addi	r3,fp,16
   8ad70:	1108703a 	and	r4,r2,r4
   8ad74:	9905883a 	add	r2,r19,r4
   8ad78:	10ff4d16 	blt	r2,r3,8aab0 <_realloc_r+0x150>
   8ad7c:	1705c83a 	sub	r2,r2,fp
   8ad80:	870b883a 	add	r5,r16,fp
   8ad84:	10800054 	ori	r2,r2,1
   8ad88:	28800115 	stw	r2,4(r5)
   8ad8c:	80c00117 	ldw	r3,4(r16)
   8ad90:	00800274 	movhi	r2,9
   8ad94:	10bf2b04 	addi	r2,r2,-852
   8ad98:	b009883a 	mov	r4,r22
   8ad9c:	18c0004c 	andi	r3,r3,1
   8ada0:	e0c6b03a 	or	r3,fp,r3
   8ada4:	11400215 	stw	r5,8(r2)
   8ada8:	80c00115 	stw	r3,4(r16)
   8adac:	008ce700 	call	8ce70 <__malloc_unlock>
   8adb0:	84400204 	addi	r17,r16,8
   8adb4:	003f2006 	br	8aa38 <_realloc_r+0xd8>
   8adb8:	98a9883a 	add	r20,r19,r2
   8adbc:	2509883a 	add	r4,r4,r20
   8adc0:	e0800404 	addi	r2,fp,16
   8adc4:	d9000115 	stw	r4,4(sp)
   8adc8:	20bf7016 	blt	r4,r2,8ab8c <_realloc_r+0x22c>
   8adcc:	b8c00317 	ldw	r3,12(r23)
   8add0:	b8800217 	ldw	r2,8(r23)
   8add4:	99bfff04 	addi	r6,r19,-4
   8add8:	01400904 	movi	r5,36
   8addc:	18800215 	stw	r2,8(r3)
   8ade0:	10c00315 	stw	r3,12(r2)
   8ade4:	bc400204 	addi	r17,r23,8
   8ade8:	29804136 	bltu	r5,r6,8aef0 <_realloc_r+0x590>
   8adec:	008004c4 	movi	r2,19
   8adf0:	9009883a 	mov	r4,r18
   8adf4:	880f883a 	mov	r7,r17
   8adf8:	11800f2e 	bgeu	r2,r6,8ae38 <_realloc_r+0x4d8>
   8adfc:	90800017 	ldw	r2,0(r18)
   8ae00:	b9c00404 	addi	r7,r23,16
   8ae04:	91000204 	addi	r4,r18,8
   8ae08:	b8800215 	stw	r2,8(r23)
   8ae0c:	90c00117 	ldw	r3,4(r18)
   8ae10:	008006c4 	movi	r2,27
   8ae14:	b8c00315 	stw	r3,12(r23)
   8ae18:	1180072e 	bgeu	r2,r6,8ae38 <_realloc_r+0x4d8>
   8ae1c:	90c00217 	ldw	r3,8(r18)
   8ae20:	b9c00604 	addi	r7,r23,24
   8ae24:	91000404 	addi	r4,r18,16
   8ae28:	b8c00415 	stw	r3,16(r23)
   8ae2c:	90800317 	ldw	r2,12(r18)
   8ae30:	b8800515 	stw	r2,20(r23)
   8ae34:	31404026 	beq	r6,r5,8af38 <_realloc_r+0x5d8>
   8ae38:	20800017 	ldw	r2,0(r4)
   8ae3c:	38800015 	stw	r2,0(r7)
   8ae40:	20c00117 	ldw	r3,4(r4)
   8ae44:	38c00115 	stw	r3,4(r7)
   8ae48:	20800217 	ldw	r2,8(r4)
   8ae4c:	38800215 	stw	r2,8(r7)
   8ae50:	d8c00117 	ldw	r3,4(sp)
   8ae54:	bf0b883a 	add	r5,r23,fp
   8ae58:	b009883a 	mov	r4,r22
   8ae5c:	1f05c83a 	sub	r2,r3,fp
   8ae60:	10800054 	ori	r2,r2,1
   8ae64:	28800115 	stw	r2,4(r5)
   8ae68:	b8c00117 	ldw	r3,4(r23)
   8ae6c:	00800274 	movhi	r2,9
   8ae70:	10bf2b04 	addi	r2,r2,-852
   8ae74:	11400215 	stw	r5,8(r2)
   8ae78:	18c0004c 	andi	r3,r3,1
   8ae7c:	e0c6b03a 	or	r3,fp,r3
   8ae80:	b8c00115 	stw	r3,4(r23)
   8ae84:	008ce700 	call	8ce70 <__malloc_unlock>
   8ae88:	003eeb06 	br	8aa38 <_realloc_r+0xd8>
   8ae8c:	20800117 	ldw	r2,4(r4)
   8ae90:	00ffff04 	movi	r3,-4
   8ae94:	800f883a 	mov	r7,r16
   8ae98:	10c4703a 	and	r2,r2,r3
   8ae9c:	98a9883a 	add	r20,r19,r2
   8aea0:	84000204 	addi	r16,r16,8
   8aea4:	003ecf06 	br	8a9e4 <_realloc_r+0x84>
   8aea8:	900b883a 	mov	r5,r18
   8aeac:	8009883a 	mov	r4,r16
   8aeb0:	00897f40 	call	897f4 <memmove>
   8aeb4:	dd000017 	ldw	r20,0(sp)
   8aeb8:	b80f883a 	mov	r7,r23
   8aebc:	003ec906 	br	8a9e4 <_realloc_r+0x84>
   8aec0:	900b883a 	mov	r5,r18
   8aec4:	8009883a 	mov	r4,r16
   8aec8:	00897f40 	call	897f4 <memmove>
   8aecc:	b80f883a 	mov	r7,r23
   8aed0:	003ec406 	br	8a9e4 <_realloc_r+0x84>
   8aed4:	90c00417 	ldw	r3,16(r18)
   8aed8:	89400604 	addi	r5,r17,24
   8aedc:	91000604 	addi	r4,r18,24
   8aee0:	88c00415 	stw	r3,16(r17)
   8aee4:	90800517 	ldw	r2,20(r18)
   8aee8:	88800515 	stw	r2,20(r17)
   8aeec:	003f6806 	br	8ac90 <_realloc_r+0x330>
   8aef0:	900b883a 	mov	r5,r18
   8aef4:	8809883a 	mov	r4,r17
   8aef8:	00897f40 	call	897f4 <memmove>
   8aefc:	003fd406 	br	8ae50 <_realloc_r+0x4f0>
   8af00:	90c00417 	ldw	r3,16(r18)
   8af04:	91000604 	addi	r4,r18,24
   8af08:	ba000804 	addi	r8,r23,32
   8af0c:	b8c00615 	stw	r3,24(r23)
   8af10:	90800517 	ldw	r2,20(r18)
   8af14:	b8800715 	stw	r2,28(r23)
   8af18:	003f1206 	br	8ab64 <_realloc_r+0x204>
   8af1c:	90c00417 	ldw	r3,16(r18)
   8af20:	91000604 	addi	r4,r18,24
   8af24:	ba000804 	addi	r8,r23,32
   8af28:	b8c00615 	stw	r3,24(r23)
   8af2c:	90800517 	ldw	r2,20(r18)
   8af30:	b8800715 	stw	r2,28(r23)
   8af34:	003f3206 	br	8ac00 <_realloc_r+0x2a0>
   8af38:	90c00417 	ldw	r3,16(r18)
   8af3c:	91000604 	addi	r4,r18,24
   8af40:	b9c00804 	addi	r7,r23,32
   8af44:	b8c00615 	stw	r3,24(r23)
   8af48:	90800517 	ldw	r2,20(r18)
   8af4c:	b8800715 	stw	r2,28(r23)
   8af50:	003fb906 	br	8ae38 <_realloc_r+0x4d8>

0008af54 <__isinfd>:
   8af54:	200d883a 	mov	r6,r4
   8af58:	0109c83a 	sub	r4,zero,r4
   8af5c:	2188b03a 	or	r4,r4,r6
   8af60:	2008d7fa 	srli	r4,r4,31
   8af64:	00a00034 	movhi	r2,32768
   8af68:	10bfffc4 	addi	r2,r2,-1
   8af6c:	1144703a 	and	r2,r2,r5
   8af70:	2088b03a 	or	r4,r4,r2
   8af74:	009ffc34 	movhi	r2,32752
   8af78:	1105c83a 	sub	r2,r2,r4
   8af7c:	0087c83a 	sub	r3,zero,r2
   8af80:	10c4b03a 	or	r2,r2,r3
   8af84:	1004d7fa 	srli	r2,r2,31
   8af88:	00c00044 	movi	r3,1
   8af8c:	1885c83a 	sub	r2,r3,r2
   8af90:	f800283a 	ret

0008af94 <__isnand>:
   8af94:	200d883a 	mov	r6,r4
   8af98:	0109c83a 	sub	r4,zero,r4
   8af9c:	2188b03a 	or	r4,r4,r6
   8afa0:	2008d7fa 	srli	r4,r4,31
   8afa4:	00a00034 	movhi	r2,32768
   8afa8:	10bfffc4 	addi	r2,r2,-1
   8afac:	1144703a 	and	r2,r2,r5
   8afb0:	2088b03a 	or	r4,r4,r2
   8afb4:	009ffc34 	movhi	r2,32752
   8afb8:	1105c83a 	sub	r2,r2,r4
   8afbc:	1004d7fa 	srli	r2,r2,31
   8afc0:	f800283a 	ret

0008afc4 <_sbrk_r>:
   8afc4:	defffd04 	addi	sp,sp,-12
   8afc8:	dc000015 	stw	r16,0(sp)
   8afcc:	04000274 	movhi	r16,9
   8afd0:	840bec04 	addi	r16,r16,12208
   8afd4:	dc400115 	stw	r17,4(sp)
   8afd8:	80000015 	stw	zero,0(r16)
   8afdc:	2023883a 	mov	r17,r4
   8afe0:	2809883a 	mov	r4,r5
   8afe4:	dfc00215 	stw	ra,8(sp)
   8afe8:	008d0700 	call	8d070 <sbrk>
   8afec:	1007883a 	mov	r3,r2
   8aff0:	00bfffc4 	movi	r2,-1
   8aff4:	18800626 	beq	r3,r2,8b010 <_sbrk_r+0x4c>
   8aff8:	1805883a 	mov	r2,r3
   8affc:	dfc00217 	ldw	ra,8(sp)
   8b000:	dc400117 	ldw	r17,4(sp)
   8b004:	dc000017 	ldw	r16,0(sp)
   8b008:	dec00304 	addi	sp,sp,12
   8b00c:	f800283a 	ret
   8b010:	80800017 	ldw	r2,0(r16)
   8b014:	103ff826 	beq	r2,zero,8aff8 <_sbrk_r+0x34>
   8b018:	88800015 	stw	r2,0(r17)
   8b01c:	1805883a 	mov	r2,r3
   8b020:	dfc00217 	ldw	ra,8(sp)
   8b024:	dc400117 	ldw	r17,4(sp)
   8b028:	dc000017 	ldw	r16,0(sp)
   8b02c:	dec00304 	addi	sp,sp,12
   8b030:	f800283a 	ret

0008b034 <__sclose>:
   8b034:	2940038f 	ldh	r5,14(r5)
   8b038:	008b3dc1 	jmpi	8b3dc <_close_r>

0008b03c <__sseek>:
   8b03c:	defffe04 	addi	sp,sp,-8
   8b040:	dc000015 	stw	r16,0(sp)
   8b044:	2821883a 	mov	r16,r5
   8b048:	2940038f 	ldh	r5,14(r5)
   8b04c:	dfc00115 	stw	ra,4(sp)
   8b050:	008b6540 	call	8b654 <_lseek_r>
   8b054:	1007883a 	mov	r3,r2
   8b058:	00bfffc4 	movi	r2,-1
   8b05c:	18800926 	beq	r3,r2,8b084 <__sseek+0x48>
   8b060:	8080030b 	ldhu	r2,12(r16)
   8b064:	80c01415 	stw	r3,80(r16)
   8b068:	10840014 	ori	r2,r2,4096
   8b06c:	8080030d 	sth	r2,12(r16)
   8b070:	1805883a 	mov	r2,r3
   8b074:	dfc00117 	ldw	ra,4(sp)
   8b078:	dc000017 	ldw	r16,0(sp)
   8b07c:	dec00204 	addi	sp,sp,8
   8b080:	f800283a 	ret
   8b084:	8080030b 	ldhu	r2,12(r16)
   8b088:	10bbffcc 	andi	r2,r2,61439
   8b08c:	8080030d 	sth	r2,12(r16)
   8b090:	1805883a 	mov	r2,r3
   8b094:	dfc00117 	ldw	ra,4(sp)
   8b098:	dc000017 	ldw	r16,0(sp)
   8b09c:	dec00204 	addi	sp,sp,8
   8b0a0:	f800283a 	ret

0008b0a4 <__swrite>:
   8b0a4:	2880030b 	ldhu	r2,12(r5)
   8b0a8:	defffb04 	addi	sp,sp,-20
   8b0ac:	dcc00315 	stw	r19,12(sp)
   8b0b0:	1080400c 	andi	r2,r2,256
   8b0b4:	dc800215 	stw	r18,8(sp)
   8b0b8:	dc400115 	stw	r17,4(sp)
   8b0bc:	dc000015 	stw	r16,0(sp)
   8b0c0:	3027883a 	mov	r19,r6
   8b0c4:	3825883a 	mov	r18,r7
   8b0c8:	dfc00415 	stw	ra,16(sp)
   8b0cc:	2821883a 	mov	r16,r5
   8b0d0:	000d883a 	mov	r6,zero
   8b0d4:	01c00084 	movi	r7,2
   8b0d8:	2023883a 	mov	r17,r4
   8b0dc:	10000226 	beq	r2,zero,8b0e8 <__swrite+0x44>
   8b0e0:	2940038f 	ldh	r5,14(r5)
   8b0e4:	008b6540 	call	8b654 <_lseek_r>
   8b0e8:	8080030b 	ldhu	r2,12(r16)
   8b0ec:	8140038f 	ldh	r5,14(r16)
   8b0f0:	8809883a 	mov	r4,r17
   8b0f4:	10bbffcc 	andi	r2,r2,61439
   8b0f8:	980d883a 	mov	r6,r19
   8b0fc:	900f883a 	mov	r7,r18
   8b100:	8080030d 	sth	r2,12(r16)
   8b104:	dfc00417 	ldw	ra,16(sp)
   8b108:	dcc00317 	ldw	r19,12(sp)
   8b10c:	dc800217 	ldw	r18,8(sp)
   8b110:	dc400117 	ldw	r17,4(sp)
   8b114:	dc000017 	ldw	r16,0(sp)
   8b118:	dec00504 	addi	sp,sp,20
   8b11c:	008b2b01 	jmpi	8b2b0 <_write_r>

0008b120 <__sread>:
   8b120:	defffe04 	addi	sp,sp,-8
   8b124:	dc000015 	stw	r16,0(sp)
   8b128:	2821883a 	mov	r16,r5
   8b12c:	2940038f 	ldh	r5,14(r5)
   8b130:	dfc00115 	stw	ra,4(sp)
   8b134:	008b6cc0 	call	8b6cc <_read_r>
   8b138:	1007883a 	mov	r3,r2
   8b13c:	10000816 	blt	r2,zero,8b160 <__sread+0x40>
   8b140:	80801417 	ldw	r2,80(r16)
   8b144:	10c5883a 	add	r2,r2,r3
   8b148:	80801415 	stw	r2,80(r16)
   8b14c:	1805883a 	mov	r2,r3
   8b150:	dfc00117 	ldw	ra,4(sp)
   8b154:	dc000017 	ldw	r16,0(sp)
   8b158:	dec00204 	addi	sp,sp,8
   8b15c:	f800283a 	ret
   8b160:	8080030b 	ldhu	r2,12(r16)
   8b164:	10bbffcc 	andi	r2,r2,61439
   8b168:	8080030d 	sth	r2,12(r16)
   8b16c:	1805883a 	mov	r2,r3
   8b170:	dfc00117 	ldw	ra,4(sp)
   8b174:	dc000017 	ldw	r16,0(sp)
   8b178:	dec00204 	addi	sp,sp,8
   8b17c:	f800283a 	ret

0008b180 <strcmp>:
   8b180:	2144b03a 	or	r2,r4,r5
   8b184:	108000cc 	andi	r2,r2,3
   8b188:	10001d1e 	bne	r2,zero,8b200 <strcmp+0x80>
   8b18c:	200f883a 	mov	r7,r4
   8b190:	28800017 	ldw	r2,0(r5)
   8b194:	21000017 	ldw	r4,0(r4)
   8b198:	280d883a 	mov	r6,r5
   8b19c:	2080161e 	bne	r4,r2,8b1f8 <strcmp+0x78>
   8b1a0:	023fbff4 	movhi	r8,65279
   8b1a4:	423fbfc4 	addi	r8,r8,-257
   8b1a8:	2207883a 	add	r3,r4,r8
   8b1ac:	01602074 	movhi	r5,32897
   8b1b0:	29602004 	addi	r5,r5,-32640
   8b1b4:	1946703a 	and	r3,r3,r5
   8b1b8:	0104303a 	nor	r2,zero,r4
   8b1bc:	10c4703a 	and	r2,r2,r3
   8b1c0:	10001c1e 	bne	r2,zero,8b234 <strcmp+0xb4>
   8b1c4:	4013883a 	mov	r9,r8
   8b1c8:	2811883a 	mov	r8,r5
   8b1cc:	00000106 	br	8b1d4 <strcmp+0x54>
   8b1d0:	1800181e 	bne	r3,zero,8b234 <strcmp+0xb4>
   8b1d4:	39c00104 	addi	r7,r7,4
   8b1d8:	39000017 	ldw	r4,0(r7)
   8b1dc:	31800104 	addi	r6,r6,4
   8b1e0:	31400017 	ldw	r5,0(r6)
   8b1e4:	2245883a 	add	r2,r4,r9
   8b1e8:	1204703a 	and	r2,r2,r8
   8b1ec:	0106303a 	nor	r3,zero,r4
   8b1f0:	1886703a 	and	r3,r3,r2
   8b1f4:	217ff626 	beq	r4,r5,8b1d0 <strcmp+0x50>
   8b1f8:	3809883a 	mov	r4,r7
   8b1fc:	300b883a 	mov	r5,r6
   8b200:	20c00007 	ldb	r3,0(r4)
   8b204:	1800051e 	bne	r3,zero,8b21c <strcmp+0x9c>
   8b208:	00000606 	br	8b224 <strcmp+0xa4>
   8b20c:	21000044 	addi	r4,r4,1
   8b210:	20c00007 	ldb	r3,0(r4)
   8b214:	29400044 	addi	r5,r5,1
   8b218:	18000226 	beq	r3,zero,8b224 <strcmp+0xa4>
   8b21c:	28800007 	ldb	r2,0(r5)
   8b220:	18bffa26 	beq	r3,r2,8b20c <strcmp+0x8c>
   8b224:	20c00003 	ldbu	r3,0(r4)
   8b228:	28800003 	ldbu	r2,0(r5)
   8b22c:	1885c83a 	sub	r2,r3,r2
   8b230:	f800283a 	ret
   8b234:	0005883a 	mov	r2,zero
   8b238:	f800283a 	ret

0008b23c <strlen>:
   8b23c:	208000cc 	andi	r2,r4,3
   8b240:	2011883a 	mov	r8,r4
   8b244:	1000161e 	bne	r2,zero,8b2a0 <strlen+0x64>
   8b248:	20c00017 	ldw	r3,0(r4)
   8b24c:	017fbff4 	movhi	r5,65279
   8b250:	297fbfc4 	addi	r5,r5,-257
   8b254:	01e02074 	movhi	r7,32897
   8b258:	39e02004 	addi	r7,r7,-32640
   8b25c:	1945883a 	add	r2,r3,r5
   8b260:	11c4703a 	and	r2,r2,r7
   8b264:	00c6303a 	nor	r3,zero,r3
   8b268:	1886703a 	and	r3,r3,r2
   8b26c:	18000c1e 	bne	r3,zero,8b2a0 <strlen+0x64>
   8b270:	280d883a 	mov	r6,r5
   8b274:	380b883a 	mov	r5,r7
   8b278:	21000104 	addi	r4,r4,4
   8b27c:	20800017 	ldw	r2,0(r4)
   8b280:	1187883a 	add	r3,r2,r6
   8b284:	1946703a 	and	r3,r3,r5
   8b288:	0084303a 	nor	r2,zero,r2
   8b28c:	10c4703a 	and	r2,r2,r3
   8b290:	103ff926 	beq	r2,zero,8b278 <strlen+0x3c>
   8b294:	20800007 	ldb	r2,0(r4)
   8b298:	10000326 	beq	r2,zero,8b2a8 <strlen+0x6c>
   8b29c:	21000044 	addi	r4,r4,1
   8b2a0:	20800007 	ldb	r2,0(r4)
   8b2a4:	103ffd1e 	bne	r2,zero,8b29c <strlen+0x60>
   8b2a8:	2205c83a 	sub	r2,r4,r8
   8b2ac:	f800283a 	ret

0008b2b0 <_write_r>:
   8b2b0:	defffd04 	addi	sp,sp,-12
   8b2b4:	dc000015 	stw	r16,0(sp)
   8b2b8:	04000274 	movhi	r16,9
   8b2bc:	840bec04 	addi	r16,r16,12208
   8b2c0:	dc400115 	stw	r17,4(sp)
   8b2c4:	80000015 	stw	zero,0(r16)
   8b2c8:	2023883a 	mov	r17,r4
   8b2cc:	2809883a 	mov	r4,r5
   8b2d0:	300b883a 	mov	r5,r6
   8b2d4:	380d883a 	mov	r6,r7
   8b2d8:	dfc00215 	stw	ra,8(sp)
   8b2dc:	008d12c0 	call	8d12c <write>
   8b2e0:	1007883a 	mov	r3,r2
   8b2e4:	00bfffc4 	movi	r2,-1
   8b2e8:	18800626 	beq	r3,r2,8b304 <_write_r+0x54>
   8b2ec:	1805883a 	mov	r2,r3
   8b2f0:	dfc00217 	ldw	ra,8(sp)
   8b2f4:	dc400117 	ldw	r17,4(sp)
   8b2f8:	dc000017 	ldw	r16,0(sp)
   8b2fc:	dec00304 	addi	sp,sp,12
   8b300:	f800283a 	ret
   8b304:	80800017 	ldw	r2,0(r16)
   8b308:	103ff826 	beq	r2,zero,8b2ec <_write_r+0x3c>
   8b30c:	88800015 	stw	r2,0(r17)
   8b310:	1805883a 	mov	r2,r3
   8b314:	dfc00217 	ldw	ra,8(sp)
   8b318:	dc400117 	ldw	r17,4(sp)
   8b31c:	dc000017 	ldw	r16,0(sp)
   8b320:	dec00304 	addi	sp,sp,12
   8b324:	f800283a 	ret

0008b328 <_calloc_r>:
   8b328:	298b383a 	mul	r5,r5,r6
   8b32c:	defffe04 	addi	sp,sp,-8
   8b330:	dc000015 	stw	r16,0(sp)
   8b334:	dfc00115 	stw	ra,4(sp)
   8b338:	0088f300 	call	88f30 <_malloc_r>
   8b33c:	1021883a 	mov	r16,r2
   8b340:	01c00904 	movi	r7,36
   8b344:	10000d26 	beq	r2,zero,8b37c <_calloc_r+0x54>
   8b348:	10ffff17 	ldw	r3,-4(r2)
   8b34c:	1009883a 	mov	r4,r2
   8b350:	00bfff04 	movi	r2,-4
   8b354:	1886703a 	and	r3,r3,r2
   8b358:	1887883a 	add	r3,r3,r2
   8b35c:	180d883a 	mov	r6,r3
   8b360:	000b883a 	mov	r5,zero
   8b364:	38c01736 	bltu	r7,r3,8b3c4 <_calloc_r+0x9c>
   8b368:	008004c4 	movi	r2,19
   8b36c:	10c00836 	bltu	r2,r3,8b390 <_calloc_r+0x68>
   8b370:	20000215 	stw	zero,8(r4)
   8b374:	20000015 	stw	zero,0(r4)
   8b378:	20000115 	stw	zero,4(r4)
   8b37c:	8005883a 	mov	r2,r16
   8b380:	dfc00117 	ldw	ra,4(sp)
   8b384:	dc000017 	ldw	r16,0(sp)
   8b388:	dec00204 	addi	sp,sp,8
   8b38c:	f800283a 	ret
   8b390:	008006c4 	movi	r2,27
   8b394:	80000015 	stw	zero,0(r16)
   8b398:	80000115 	stw	zero,4(r16)
   8b39c:	81000204 	addi	r4,r16,8
   8b3a0:	10fff32e 	bgeu	r2,r3,8b370 <_calloc_r+0x48>
   8b3a4:	80000215 	stw	zero,8(r16)
   8b3a8:	80000315 	stw	zero,12(r16)
   8b3ac:	81000404 	addi	r4,r16,16
   8b3b0:	19ffef1e 	bne	r3,r7,8b370 <_calloc_r+0x48>
   8b3b4:	81000604 	addi	r4,r16,24
   8b3b8:	80000415 	stw	zero,16(r16)
   8b3bc:	80000515 	stw	zero,20(r16)
   8b3c0:	003feb06 	br	8b370 <_calloc_r+0x48>
   8b3c4:	00898d40 	call	898d4 <memset>
   8b3c8:	8005883a 	mov	r2,r16
   8b3cc:	dfc00117 	ldw	ra,4(sp)
   8b3d0:	dc000017 	ldw	r16,0(sp)
   8b3d4:	dec00204 	addi	sp,sp,8
   8b3d8:	f800283a 	ret

0008b3dc <_close_r>:
   8b3dc:	defffd04 	addi	sp,sp,-12
   8b3e0:	dc000015 	stw	r16,0(sp)
   8b3e4:	04000274 	movhi	r16,9
   8b3e8:	840bec04 	addi	r16,r16,12208
   8b3ec:	dc400115 	stw	r17,4(sp)
   8b3f0:	80000015 	stw	zero,0(r16)
   8b3f4:	2023883a 	mov	r17,r4
   8b3f8:	2809883a 	mov	r4,r5
   8b3fc:	dfc00215 	stw	ra,8(sp)
   8b400:	008c7cc0 	call	8c7cc <close>
   8b404:	1007883a 	mov	r3,r2
   8b408:	00bfffc4 	movi	r2,-1
   8b40c:	18800626 	beq	r3,r2,8b428 <_close_r+0x4c>
   8b410:	1805883a 	mov	r2,r3
   8b414:	dfc00217 	ldw	ra,8(sp)
   8b418:	dc400117 	ldw	r17,4(sp)
   8b41c:	dc000017 	ldw	r16,0(sp)
   8b420:	dec00304 	addi	sp,sp,12
   8b424:	f800283a 	ret
   8b428:	80800017 	ldw	r2,0(r16)
   8b42c:	103ff826 	beq	r2,zero,8b410 <_close_r+0x34>
   8b430:	88800015 	stw	r2,0(r17)
   8b434:	1805883a 	mov	r2,r3
   8b438:	dfc00217 	ldw	ra,8(sp)
   8b43c:	dc400117 	ldw	r17,4(sp)
   8b440:	dc000017 	ldw	r16,0(sp)
   8b444:	dec00304 	addi	sp,sp,12
   8b448:	f800283a 	ret

0008b44c <_fclose_r>:
   8b44c:	defffc04 	addi	sp,sp,-16
   8b450:	dc400115 	stw	r17,4(sp)
   8b454:	dc000015 	stw	r16,0(sp)
   8b458:	dfc00315 	stw	ra,12(sp)
   8b45c:	dc800215 	stw	r18,8(sp)
   8b460:	2821883a 	mov	r16,r5
   8b464:	2023883a 	mov	r17,r4
   8b468:	28002926 	beq	r5,zero,8b510 <_fclose_r+0xc4>
   8b46c:	00880140 	call	88014 <__sfp_lock_acquire>
   8b470:	88000226 	beq	r17,zero,8b47c <_fclose_r+0x30>
   8b474:	88800e17 	ldw	r2,56(r17)
   8b478:	10002d26 	beq	r2,zero,8b530 <_fclose_r+0xe4>
   8b47c:	8080030f 	ldh	r2,12(r16)
   8b480:	10002226 	beq	r2,zero,8b50c <_fclose_r+0xc0>
   8b484:	8809883a 	mov	r4,r17
   8b488:	800b883a 	mov	r5,r16
   8b48c:	0087d8c0 	call	87d8c <_fflush_r>
   8b490:	1025883a 	mov	r18,r2
   8b494:	80800b17 	ldw	r2,44(r16)
   8b498:	10000426 	beq	r2,zero,8b4ac <_fclose_r+0x60>
   8b49c:	81400717 	ldw	r5,28(r16)
   8b4a0:	8809883a 	mov	r4,r17
   8b4a4:	103ee83a 	callr	r2
   8b4a8:	10002a16 	blt	r2,zero,8b554 <_fclose_r+0x108>
   8b4ac:	8080030b 	ldhu	r2,12(r16)
   8b4b0:	1080200c 	andi	r2,r2,128
   8b4b4:	1000231e 	bne	r2,zero,8b544 <_fclose_r+0xf8>
   8b4b8:	81400c17 	ldw	r5,48(r16)
   8b4bc:	28000526 	beq	r5,zero,8b4d4 <_fclose_r+0x88>
   8b4c0:	80801004 	addi	r2,r16,64
   8b4c4:	28800226 	beq	r5,r2,8b4d0 <_fclose_r+0x84>
   8b4c8:	8809883a 	mov	r4,r17
   8b4cc:	00883a80 	call	883a8 <_free_r>
   8b4d0:	80000c15 	stw	zero,48(r16)
   8b4d4:	81401117 	ldw	r5,68(r16)
   8b4d8:	28000326 	beq	r5,zero,8b4e8 <_fclose_r+0x9c>
   8b4dc:	8809883a 	mov	r4,r17
   8b4e0:	00883a80 	call	883a8 <_free_r>
   8b4e4:	80001115 	stw	zero,68(r16)
   8b4e8:	8000030d 	sth	zero,12(r16)
   8b4ec:	00880180 	call	88018 <__sfp_lock_release>
   8b4f0:	9005883a 	mov	r2,r18
   8b4f4:	dfc00317 	ldw	ra,12(sp)
   8b4f8:	dc800217 	ldw	r18,8(sp)
   8b4fc:	dc400117 	ldw	r17,4(sp)
   8b500:	dc000017 	ldw	r16,0(sp)
   8b504:	dec00404 	addi	sp,sp,16
   8b508:	f800283a 	ret
   8b50c:	00880180 	call	88018 <__sfp_lock_release>
   8b510:	0025883a 	mov	r18,zero
   8b514:	9005883a 	mov	r2,r18
   8b518:	dfc00317 	ldw	ra,12(sp)
   8b51c:	dc800217 	ldw	r18,8(sp)
   8b520:	dc400117 	ldw	r17,4(sp)
   8b524:	dc000017 	ldw	r16,0(sp)
   8b528:	dec00404 	addi	sp,sp,16
   8b52c:	f800283a 	ret
   8b530:	8809883a 	mov	r4,r17
   8b534:	00880240 	call	88024 <__sinit>
   8b538:	8080030f 	ldh	r2,12(r16)
   8b53c:	103fd11e 	bne	r2,zero,8b484 <_fclose_r+0x38>
   8b540:	003ff206 	br	8b50c <_fclose_r+0xc0>
   8b544:	81400417 	ldw	r5,16(r16)
   8b548:	8809883a 	mov	r4,r17
   8b54c:	00883a80 	call	883a8 <_free_r>
   8b550:	003fd906 	br	8b4b8 <_fclose_r+0x6c>
   8b554:	04bfffc4 	movi	r18,-1
   8b558:	003fd406 	br	8b4ac <_fclose_r+0x60>

0008b55c <fclose>:
   8b55c:	00800274 	movhi	r2,9
   8b560:	1084af04 	addi	r2,r2,4796
   8b564:	200b883a 	mov	r5,r4
   8b568:	11000017 	ldw	r4,0(r2)
   8b56c:	008b44c1 	jmpi	8b44c <_fclose_r>

0008b570 <_fstat_r>:
   8b570:	defffd04 	addi	sp,sp,-12
   8b574:	dc000015 	stw	r16,0(sp)
   8b578:	04000274 	movhi	r16,9
   8b57c:	840bec04 	addi	r16,r16,12208
   8b580:	dc400115 	stw	r17,4(sp)
   8b584:	80000015 	stw	zero,0(r16)
   8b588:	2023883a 	mov	r17,r4
   8b58c:	2809883a 	mov	r4,r5
   8b590:	300b883a 	mov	r5,r6
   8b594:	dfc00215 	stw	ra,8(sp)
   8b598:	008c9540 	call	8c954 <fstat>
   8b59c:	1007883a 	mov	r3,r2
   8b5a0:	00bfffc4 	movi	r2,-1
   8b5a4:	18800626 	beq	r3,r2,8b5c0 <_fstat_r+0x50>
   8b5a8:	1805883a 	mov	r2,r3
   8b5ac:	dfc00217 	ldw	ra,8(sp)
   8b5b0:	dc400117 	ldw	r17,4(sp)
   8b5b4:	dc000017 	ldw	r16,0(sp)
   8b5b8:	dec00304 	addi	sp,sp,12
   8b5bc:	f800283a 	ret
   8b5c0:	80800017 	ldw	r2,0(r16)
   8b5c4:	103ff826 	beq	r2,zero,8b5a8 <_fstat_r+0x38>
   8b5c8:	88800015 	stw	r2,0(r17)
   8b5cc:	1805883a 	mov	r2,r3
   8b5d0:	dfc00217 	ldw	ra,8(sp)
   8b5d4:	dc400117 	ldw	r17,4(sp)
   8b5d8:	dc000017 	ldw	r16,0(sp)
   8b5dc:	dec00304 	addi	sp,sp,12
   8b5e0:	f800283a 	ret

0008b5e4 <_isatty_r>:
   8b5e4:	defffd04 	addi	sp,sp,-12
   8b5e8:	dc000015 	stw	r16,0(sp)
   8b5ec:	04000274 	movhi	r16,9
   8b5f0:	840bec04 	addi	r16,r16,12208
   8b5f4:	dc400115 	stw	r17,4(sp)
   8b5f8:	80000015 	stw	zero,0(r16)
   8b5fc:	2023883a 	mov	r17,r4
   8b600:	2809883a 	mov	r4,r5
   8b604:	dfc00215 	stw	ra,8(sp)
   8b608:	008ca880 	call	8ca88 <isatty>
   8b60c:	1007883a 	mov	r3,r2
   8b610:	00bfffc4 	movi	r2,-1
   8b614:	18800626 	beq	r3,r2,8b630 <_isatty_r+0x4c>
   8b618:	1805883a 	mov	r2,r3
   8b61c:	dfc00217 	ldw	ra,8(sp)
   8b620:	dc400117 	ldw	r17,4(sp)
   8b624:	dc000017 	ldw	r16,0(sp)
   8b628:	dec00304 	addi	sp,sp,12
   8b62c:	f800283a 	ret
   8b630:	80800017 	ldw	r2,0(r16)
   8b634:	103ff826 	beq	r2,zero,8b618 <_isatty_r+0x34>
   8b638:	88800015 	stw	r2,0(r17)
   8b63c:	1805883a 	mov	r2,r3
   8b640:	dfc00217 	ldw	ra,8(sp)
   8b644:	dc400117 	ldw	r17,4(sp)
   8b648:	dc000017 	ldw	r16,0(sp)
   8b64c:	dec00304 	addi	sp,sp,12
   8b650:	f800283a 	ret

0008b654 <_lseek_r>:
   8b654:	defffd04 	addi	sp,sp,-12
   8b658:	dc000015 	stw	r16,0(sp)
   8b65c:	04000274 	movhi	r16,9
   8b660:	840bec04 	addi	r16,r16,12208
   8b664:	dc400115 	stw	r17,4(sp)
   8b668:	80000015 	stw	zero,0(r16)
   8b66c:	2023883a 	mov	r17,r4
   8b670:	2809883a 	mov	r4,r5
   8b674:	300b883a 	mov	r5,r6
   8b678:	380d883a 	mov	r6,r7
   8b67c:	dfc00215 	stw	ra,8(sp)
   8b680:	008cc940 	call	8cc94 <lseek>
   8b684:	1007883a 	mov	r3,r2
   8b688:	00bfffc4 	movi	r2,-1
   8b68c:	18800626 	beq	r3,r2,8b6a8 <_lseek_r+0x54>
   8b690:	1805883a 	mov	r2,r3
   8b694:	dfc00217 	ldw	ra,8(sp)
   8b698:	dc400117 	ldw	r17,4(sp)
   8b69c:	dc000017 	ldw	r16,0(sp)
   8b6a0:	dec00304 	addi	sp,sp,12
   8b6a4:	f800283a 	ret
   8b6a8:	80800017 	ldw	r2,0(r16)
   8b6ac:	103ff826 	beq	r2,zero,8b690 <_lseek_r+0x3c>
   8b6b0:	88800015 	stw	r2,0(r17)
   8b6b4:	1805883a 	mov	r2,r3
   8b6b8:	dfc00217 	ldw	ra,8(sp)
   8b6bc:	dc400117 	ldw	r17,4(sp)
   8b6c0:	dc000017 	ldw	r16,0(sp)
   8b6c4:	dec00304 	addi	sp,sp,12
   8b6c8:	f800283a 	ret

0008b6cc <_read_r>:
   8b6cc:	defffd04 	addi	sp,sp,-12
   8b6d0:	dc000015 	stw	r16,0(sp)
   8b6d4:	04000274 	movhi	r16,9
   8b6d8:	840bec04 	addi	r16,r16,12208
   8b6dc:	dc400115 	stw	r17,4(sp)
   8b6e0:	80000015 	stw	zero,0(r16)
   8b6e4:	2023883a 	mov	r17,r4
   8b6e8:	2809883a 	mov	r4,r5
   8b6ec:	300b883a 	mov	r5,r6
   8b6f0:	380d883a 	mov	r6,r7
   8b6f4:	dfc00215 	stw	ra,8(sp)
   8b6f8:	008ce900 	call	8ce90 <read>
   8b6fc:	1007883a 	mov	r3,r2
   8b700:	00bfffc4 	movi	r2,-1
   8b704:	18800626 	beq	r3,r2,8b720 <_read_r+0x54>
   8b708:	1805883a 	mov	r2,r3
   8b70c:	dfc00217 	ldw	ra,8(sp)
   8b710:	dc400117 	ldw	r17,4(sp)
   8b714:	dc000017 	ldw	r16,0(sp)
   8b718:	dec00304 	addi	sp,sp,12
   8b71c:	f800283a 	ret
   8b720:	80800017 	ldw	r2,0(r16)
   8b724:	103ff826 	beq	r2,zero,8b708 <_read_r+0x3c>
   8b728:	88800015 	stw	r2,0(r17)
   8b72c:	1805883a 	mov	r2,r3
   8b730:	dfc00217 	ldw	ra,8(sp)
   8b734:	dc400117 	ldw	r17,4(sp)
   8b738:	dc000017 	ldw	r16,0(sp)
   8b73c:	dec00304 	addi	sp,sp,12
   8b740:	f800283a 	ret

0008b744 <__udivdi3>:
   8b744:	defff004 	addi	sp,sp,-64
   8b748:	2005883a 	mov	r2,r4
   8b74c:	3011883a 	mov	r8,r6
   8b750:	df000e15 	stw	fp,56(sp)
   8b754:	dd000a15 	stw	r20,40(sp)
   8b758:	dc000615 	stw	r16,24(sp)
   8b75c:	dfc00f15 	stw	ra,60(sp)
   8b760:	ddc00d15 	stw	r23,52(sp)
   8b764:	dd800c15 	stw	r22,48(sp)
   8b768:	dd400b15 	stw	r21,44(sp)
   8b76c:	dcc00915 	stw	r19,36(sp)
   8b770:	dc800815 	stw	r18,32(sp)
   8b774:	dc400715 	stw	r17,28(sp)
   8b778:	4021883a 	mov	r16,r8
   8b77c:	1039883a 	mov	fp,r2
   8b780:	2829883a 	mov	r20,r5
   8b784:	38003b1e 	bne	r7,zero,8b874 <__udivdi3+0x130>
   8b788:	2a005c36 	bltu	r5,r8,8b8fc <__udivdi3+0x1b8>
   8b78c:	4000a626 	beq	r8,zero,8ba28 <__udivdi3+0x2e4>
   8b790:	00bfffd4 	movui	r2,65535
   8b794:	14009e36 	bltu	r2,r16,8ba10 <__udivdi3+0x2cc>
   8b798:	00803fc4 	movi	r2,255
   8b79c:	14013d36 	bltu	r2,r16,8bc94 <__udivdi3+0x550>
   8b7a0:	000b883a 	mov	r5,zero
   8b7a4:	0005883a 	mov	r2,zero
   8b7a8:	8084d83a 	srl	r2,r16,r2
   8b7ac:	01000274 	movhi	r4,9
   8b7b0:	213ccd04 	addi	r4,r4,-3276
   8b7b4:	01800804 	movi	r6,32
   8b7b8:	1105883a 	add	r2,r2,r4
   8b7bc:	10c00003 	ldbu	r3,0(r2)
   8b7c0:	28c7883a 	add	r3,r5,r3
   8b7c4:	30edc83a 	sub	r22,r6,r3
   8b7c8:	b000ee1e 	bne	r22,zero,8bb84 <__udivdi3+0x440>
   8b7cc:	802ad43a 	srli	r21,r16,16
   8b7d0:	00800044 	movi	r2,1
   8b7d4:	a423c83a 	sub	r17,r20,r16
   8b7d8:	85ffffcc 	andi	r23,r16,65535
   8b7dc:	d8800315 	stw	r2,12(sp)
   8b7e0:	8809883a 	mov	r4,r17
   8b7e4:	a80b883a 	mov	r5,r21
   8b7e8:	0083ea80 	call	83ea8 <__udivsi3>
   8b7ec:	8809883a 	mov	r4,r17
   8b7f0:	a80b883a 	mov	r5,r21
   8b7f4:	102d883a 	mov	r22,r2
   8b7f8:	0083eb00 	call	83eb0 <__umodsi3>
   8b7fc:	1004943a 	slli	r2,r2,16
   8b800:	e006d43a 	srli	r3,fp,16
   8b804:	bda3383a 	mul	r17,r23,r22
   8b808:	10c4b03a 	or	r2,r2,r3
   8b80c:	1440042e 	bgeu	r2,r17,8b820 <__udivdi3+0xdc>
   8b810:	1405883a 	add	r2,r2,r16
   8b814:	b5bfffc4 	addi	r22,r22,-1
   8b818:	14000136 	bltu	r2,r16,8b820 <__udivdi3+0xdc>
   8b81c:	14413d36 	bltu	r2,r17,8bd14 <__udivdi3+0x5d0>
   8b820:	1463c83a 	sub	r17,r2,r17
   8b824:	8809883a 	mov	r4,r17
   8b828:	a80b883a 	mov	r5,r21
   8b82c:	0083ea80 	call	83ea8 <__udivsi3>
   8b830:	8809883a 	mov	r4,r17
   8b834:	a80b883a 	mov	r5,r21
   8b838:	1029883a 	mov	r20,r2
   8b83c:	0083eb00 	call	83eb0 <__umodsi3>
   8b840:	1004943a 	slli	r2,r2,16
   8b844:	bd09383a 	mul	r4,r23,r20
   8b848:	e0ffffcc 	andi	r3,fp,65535
   8b84c:	10c4b03a 	or	r2,r2,r3
   8b850:	1100042e 	bgeu	r2,r4,8b864 <__udivdi3+0x120>
   8b854:	8085883a 	add	r2,r16,r2
   8b858:	a53fffc4 	addi	r20,r20,-1
   8b85c:	14000136 	bltu	r2,r16,8b864 <__udivdi3+0x120>
   8b860:	11012036 	bltu	r2,r4,8bce4 <__udivdi3+0x5a0>
   8b864:	b004943a 	slli	r2,r22,16
   8b868:	d9000317 	ldw	r4,12(sp)
   8b86c:	a084b03a 	or	r2,r20,r2
   8b870:	00001506 	br	8b8c8 <__udivdi3+0x184>
   8b874:	380d883a 	mov	r6,r7
   8b878:	29c06236 	bltu	r5,r7,8ba04 <__udivdi3+0x2c0>
   8b87c:	00bfffd4 	movui	r2,65535
   8b880:	11c05a36 	bltu	r2,r7,8b9ec <__udivdi3+0x2a8>
   8b884:	00803fc4 	movi	r2,255
   8b888:	11c0fc36 	bltu	r2,r7,8bc7c <__udivdi3+0x538>
   8b88c:	000b883a 	mov	r5,zero
   8b890:	0005883a 	mov	r2,zero
   8b894:	3084d83a 	srl	r2,r6,r2
   8b898:	01000274 	movhi	r4,9
   8b89c:	213ccd04 	addi	r4,r4,-3276
   8b8a0:	01c00804 	movi	r7,32
   8b8a4:	1105883a 	add	r2,r2,r4
   8b8a8:	10c00003 	ldbu	r3,0(r2)
   8b8ac:	28c7883a 	add	r3,r5,r3
   8b8b0:	38efc83a 	sub	r23,r7,r3
   8b8b4:	b800691e 	bne	r23,zero,8ba5c <__udivdi3+0x318>
   8b8b8:	35000136 	bltu	r6,r20,8b8c0 <__udivdi3+0x17c>
   8b8bc:	e4005136 	bltu	fp,r16,8ba04 <__udivdi3+0x2c0>
   8b8c0:	00800044 	movi	r2,1
   8b8c4:	0009883a 	mov	r4,zero
   8b8c8:	2007883a 	mov	r3,r4
   8b8cc:	dfc00f17 	ldw	ra,60(sp)
   8b8d0:	df000e17 	ldw	fp,56(sp)
   8b8d4:	ddc00d17 	ldw	r23,52(sp)
   8b8d8:	dd800c17 	ldw	r22,48(sp)
   8b8dc:	dd400b17 	ldw	r21,44(sp)
   8b8e0:	dd000a17 	ldw	r20,40(sp)
   8b8e4:	dcc00917 	ldw	r19,36(sp)
   8b8e8:	dc800817 	ldw	r18,32(sp)
   8b8ec:	dc400717 	ldw	r17,28(sp)
   8b8f0:	dc000617 	ldw	r16,24(sp)
   8b8f4:	dec01004 	addi	sp,sp,64
   8b8f8:	f800283a 	ret
   8b8fc:	00bfffd4 	movui	r2,65535
   8b900:	12005036 	bltu	r2,r8,8ba44 <__udivdi3+0x300>
   8b904:	00803fc4 	movi	r2,255
   8b908:	1200e836 	bltu	r2,r8,8bcac <__udivdi3+0x568>
   8b90c:	000b883a 	mov	r5,zero
   8b910:	0005883a 	mov	r2,zero
   8b914:	8084d83a 	srl	r2,r16,r2
   8b918:	01000274 	movhi	r4,9
   8b91c:	213ccd04 	addi	r4,r4,-3276
   8b920:	01800804 	movi	r6,32
   8b924:	1105883a 	add	r2,r2,r4
   8b928:	10c00003 	ldbu	r3,0(r2)
   8b92c:	28c7883a 	add	r3,r5,r3
   8b930:	30cbc83a 	sub	r5,r6,r3
   8b934:	28000626 	beq	r5,zero,8b950 <__udivdi3+0x20c>
   8b938:	3145c83a 	sub	r2,r6,r5
   8b93c:	e084d83a 	srl	r2,fp,r2
   8b940:	a146983a 	sll	r3,r20,r5
   8b944:	e178983a 	sll	fp,fp,r5
   8b948:	8160983a 	sll	r16,r16,r5
   8b94c:	18a8b03a 	or	r20,r3,r2
   8b950:	802ad43a 	srli	r21,r16,16
   8b954:	a009883a 	mov	r4,r20
   8b958:	85ffffcc 	andi	r23,r16,65535
   8b95c:	a80b883a 	mov	r5,r21
   8b960:	0083ea80 	call	83ea8 <__udivsi3>
   8b964:	a009883a 	mov	r4,r20
   8b968:	a80b883a 	mov	r5,r21
   8b96c:	102d883a 	mov	r22,r2
   8b970:	0083eb00 	call	83eb0 <__umodsi3>
   8b974:	1004943a 	slli	r2,r2,16
   8b978:	e006d43a 	srli	r3,fp,16
   8b97c:	bda3383a 	mul	r17,r23,r22
   8b980:	10c4b03a 	or	r2,r2,r3
   8b984:	1440042e 	bgeu	r2,r17,8b998 <__udivdi3+0x254>
   8b988:	1405883a 	add	r2,r2,r16
   8b98c:	b5bfffc4 	addi	r22,r22,-1
   8b990:	14000136 	bltu	r2,r16,8b998 <__udivdi3+0x254>
   8b994:	1440d536 	bltu	r2,r17,8bcec <__udivdi3+0x5a8>
   8b998:	1463c83a 	sub	r17,r2,r17
   8b99c:	8809883a 	mov	r4,r17
   8b9a0:	a80b883a 	mov	r5,r21
   8b9a4:	0083ea80 	call	83ea8 <__udivsi3>
   8b9a8:	8809883a 	mov	r4,r17
   8b9ac:	a80b883a 	mov	r5,r21
   8b9b0:	1029883a 	mov	r20,r2
   8b9b4:	0083eb00 	call	83eb0 <__umodsi3>
   8b9b8:	1004943a 	slli	r2,r2,16
   8b9bc:	bd09383a 	mul	r4,r23,r20
   8b9c0:	e0ffffcc 	andi	r3,fp,65535
   8b9c4:	10c4b03a 	or	r2,r2,r3
   8b9c8:	1100042e 	bgeu	r2,r4,8b9dc <__udivdi3+0x298>
   8b9cc:	8085883a 	add	r2,r16,r2
   8b9d0:	a53fffc4 	addi	r20,r20,-1
   8b9d4:	14000136 	bltu	r2,r16,8b9dc <__udivdi3+0x298>
   8b9d8:	1100c736 	bltu	r2,r4,8bcf8 <__udivdi3+0x5b4>
   8b9dc:	b004943a 	slli	r2,r22,16
   8b9e0:	0009883a 	mov	r4,zero
   8b9e4:	a084b03a 	or	r2,r20,r2
   8b9e8:	003fb706 	br	8b8c8 <__udivdi3+0x184>
   8b9ec:	00804034 	movhi	r2,256
   8b9f0:	10bfffc4 	addi	r2,r2,-1
   8b9f4:	11c0a436 	bltu	r2,r7,8bc88 <__udivdi3+0x544>
   8b9f8:	01400404 	movi	r5,16
   8b9fc:	2805883a 	mov	r2,r5
   8ba00:	003fa406 	br	8b894 <__udivdi3+0x150>
   8ba04:	0005883a 	mov	r2,zero
   8ba08:	0009883a 	mov	r4,zero
   8ba0c:	003fae06 	br	8b8c8 <__udivdi3+0x184>
   8ba10:	00804034 	movhi	r2,256
   8ba14:	10bfffc4 	addi	r2,r2,-1
   8ba18:	1400a136 	bltu	r2,r16,8bca0 <__udivdi3+0x55c>
   8ba1c:	01400404 	movi	r5,16
   8ba20:	2805883a 	mov	r2,r5
   8ba24:	003f6006 	br	8b7a8 <__udivdi3+0x64>
   8ba28:	01000044 	movi	r4,1
   8ba2c:	000b883a 	mov	r5,zero
   8ba30:	0083ea80 	call	83ea8 <__udivsi3>
   8ba34:	1021883a 	mov	r16,r2
   8ba38:	00bfffd4 	movui	r2,65535
   8ba3c:	143ff436 	bltu	r2,r16,8ba10 <__udivdi3+0x2cc>
   8ba40:	003f5506 	br	8b798 <__udivdi3+0x54>
   8ba44:	00804034 	movhi	r2,256
   8ba48:	10bfffc4 	addi	r2,r2,-1
   8ba4c:	12009a36 	bltu	r2,r8,8bcb8 <__udivdi3+0x574>
   8ba50:	01400404 	movi	r5,16
   8ba54:	2805883a 	mov	r2,r5
   8ba58:	003fae06 	br	8b914 <__udivdi3+0x1d0>
   8ba5c:	3dc5c83a 	sub	r2,r7,r23
   8ba60:	35c8983a 	sll	r4,r6,r23
   8ba64:	8086d83a 	srl	r3,r16,r2
   8ba68:	a0a2d83a 	srl	r17,r20,r2
   8ba6c:	e084d83a 	srl	r2,fp,r2
   8ba70:	20eab03a 	or	r21,r4,r3
   8ba74:	a82cd43a 	srli	r22,r21,16
   8ba78:	a5c6983a 	sll	r3,r20,r23
   8ba7c:	8809883a 	mov	r4,r17
   8ba80:	b00b883a 	mov	r5,r22
   8ba84:	1886b03a 	or	r3,r3,r2
   8ba88:	d8c00215 	stw	r3,8(sp)
   8ba8c:	0083ea80 	call	83ea8 <__udivsi3>
   8ba90:	8809883a 	mov	r4,r17
   8ba94:	b00b883a 	mov	r5,r22
   8ba98:	1029883a 	mov	r20,r2
   8ba9c:	0083eb00 	call	83eb0 <__umodsi3>
   8baa0:	a8ffffcc 	andi	r3,r21,65535
   8baa4:	d8c00515 	stw	r3,20(sp)
   8baa8:	d9000217 	ldw	r4,8(sp)
   8baac:	d9400517 	ldw	r5,20(sp)
   8bab0:	1004943a 	slli	r2,r2,16
   8bab4:	2006d43a 	srli	r3,r4,16
   8bab8:	85e0983a 	sll	r16,r16,r23
   8babc:	2d23383a 	mul	r17,r5,r20
   8bac0:	10c4b03a 	or	r2,r2,r3
   8bac4:	dc000015 	stw	r16,0(sp)
   8bac8:	1440032e 	bgeu	r2,r17,8bad8 <__udivdi3+0x394>
   8bacc:	1545883a 	add	r2,r2,r21
   8bad0:	a53fffc4 	addi	r20,r20,-1
   8bad4:	15407f2e 	bgeu	r2,r21,8bcd4 <__udivdi3+0x590>
   8bad8:	1463c83a 	sub	r17,r2,r17
   8badc:	8809883a 	mov	r4,r17
   8bae0:	b00b883a 	mov	r5,r22
   8bae4:	0083ea80 	call	83ea8 <__udivsi3>
   8bae8:	8809883a 	mov	r4,r17
   8baec:	b00b883a 	mov	r5,r22
   8baf0:	1021883a 	mov	r16,r2
   8baf4:	0083eb00 	call	83eb0 <__umodsi3>
   8baf8:	d8c00517 	ldw	r3,20(sp)
   8bafc:	d9000217 	ldw	r4,8(sp)
   8bb00:	1004943a 	slli	r2,r2,16
   8bb04:	1c0f383a 	mul	r7,r3,r16
   8bb08:	20ffffcc 	andi	r3,r4,65535
   8bb0c:	10e2b03a 	or	r17,r2,r3
   8bb10:	89c0032e 	bgeu	r17,r7,8bb20 <__udivdi3+0x3dc>
   8bb14:	8d63883a 	add	r17,r17,r21
   8bb18:	843fffc4 	addi	r16,r16,-1
   8bb1c:	8d40692e 	bgeu	r17,r21,8bcc4 <__udivdi3+0x580>
   8bb20:	a008943a 	slli	r4,r20,16
   8bb24:	d9400017 	ldw	r5,0(sp)
   8bb28:	89e3c83a 	sub	r17,r17,r7
   8bb2c:	8110b03a 	or	r8,r16,r4
   8bb30:	280cd43a 	srli	r6,r5,16
   8bb34:	28ffffcc 	andi	r3,r5,65535
   8bb38:	40bfffcc 	andi	r2,r8,65535
   8bb3c:	400ad43a 	srli	r5,r8,16
   8bb40:	10d3383a 	mul	r9,r2,r3
   8bb44:	1185383a 	mul	r2,r2,r6
   8bb48:	28c7383a 	mul	r3,r5,r3
   8bb4c:	4808d43a 	srli	r4,r9,16
   8bb50:	298b383a 	mul	r5,r5,r6
   8bb54:	10c5883a 	add	r2,r2,r3
   8bb58:	2089883a 	add	r4,r4,r2
   8bb5c:	20c0022e 	bgeu	r4,r3,8bb68 <__udivdi3+0x424>
   8bb60:	00800074 	movhi	r2,1
   8bb64:	288b883a 	add	r5,r5,r2
   8bb68:	2004d43a 	srli	r2,r4,16
   8bb6c:	288b883a 	add	r5,r5,r2
   8bb70:	89403f36 	bltu	r17,r5,8bc70 <__udivdi3+0x52c>
   8bb74:	89403926 	beq	r17,r5,8bc5c <__udivdi3+0x518>
   8bb78:	4005883a 	mov	r2,r8
   8bb7c:	0009883a 	mov	r4,zero
   8bb80:	003f5106 	br	8b8c8 <__udivdi3+0x184>
   8bb84:	85a0983a 	sll	r16,r16,r22
   8bb88:	3585c83a 	sub	r2,r6,r22
   8bb8c:	a0a2d83a 	srl	r17,r20,r2
   8bb90:	802ad43a 	srli	r21,r16,16
   8bb94:	e084d83a 	srl	r2,fp,r2
   8bb98:	a586983a 	sll	r3,r20,r22
   8bb9c:	8809883a 	mov	r4,r17
   8bba0:	a80b883a 	mov	r5,r21
   8bba4:	1886b03a 	or	r3,r3,r2
   8bba8:	d8c00115 	stw	r3,4(sp)
   8bbac:	0083ea80 	call	83ea8 <__udivsi3>
   8bbb0:	8809883a 	mov	r4,r17
   8bbb4:	a80b883a 	mov	r5,r21
   8bbb8:	d8800415 	stw	r2,16(sp)
   8bbbc:	0083eb00 	call	83eb0 <__umodsi3>
   8bbc0:	d9000117 	ldw	r4,4(sp)
   8bbc4:	d9400417 	ldw	r5,16(sp)
   8bbc8:	1004943a 	slli	r2,r2,16
   8bbcc:	85ffffcc 	andi	r23,r16,65535
   8bbd0:	2006d43a 	srli	r3,r4,16
   8bbd4:	b963383a 	mul	r17,r23,r5
   8bbd8:	10c4b03a 	or	r2,r2,r3
   8bbdc:	1440042e 	bgeu	r2,r17,8bbf0 <__udivdi3+0x4ac>
   8bbe0:	297fffc4 	addi	r5,r5,-1
   8bbe4:	1405883a 	add	r2,r2,r16
   8bbe8:	d9400415 	stw	r5,16(sp)
   8bbec:	1400442e 	bgeu	r2,r16,8bd00 <__udivdi3+0x5bc>
   8bbf0:	1463c83a 	sub	r17,r2,r17
   8bbf4:	8809883a 	mov	r4,r17
   8bbf8:	a80b883a 	mov	r5,r21
   8bbfc:	0083ea80 	call	83ea8 <__udivsi3>
   8bc00:	8809883a 	mov	r4,r17
   8bc04:	a80b883a 	mov	r5,r21
   8bc08:	1029883a 	mov	r20,r2
   8bc0c:	0083eb00 	call	83eb0 <__umodsi3>
   8bc10:	d9400117 	ldw	r5,4(sp)
   8bc14:	1004943a 	slli	r2,r2,16
   8bc18:	bd09383a 	mul	r4,r23,r20
   8bc1c:	28ffffcc 	andi	r3,r5,65535
   8bc20:	10c6b03a 	or	r3,r2,r3
   8bc24:	1900062e 	bgeu	r3,r4,8bc40 <__udivdi3+0x4fc>
   8bc28:	1c07883a 	add	r3,r3,r16
   8bc2c:	a53fffc4 	addi	r20,r20,-1
   8bc30:	1c000336 	bltu	r3,r16,8bc40 <__udivdi3+0x4fc>
   8bc34:	1900022e 	bgeu	r3,r4,8bc40 <__udivdi3+0x4fc>
   8bc38:	a53fffc4 	addi	r20,r20,-1
   8bc3c:	1c07883a 	add	r3,r3,r16
   8bc40:	d9400417 	ldw	r5,16(sp)
   8bc44:	e5b8983a 	sll	fp,fp,r22
   8bc48:	1923c83a 	sub	r17,r3,r4
   8bc4c:	2804943a 	slli	r2,r5,16
   8bc50:	a0a8b03a 	or	r20,r20,r2
   8bc54:	dd000315 	stw	r20,12(sp)
   8bc58:	003ee106 	br	8b7e0 <__udivdi3+0x9c>
   8bc5c:	2004943a 	slli	r2,r4,16
   8bc60:	e5c8983a 	sll	r4,fp,r23
   8bc64:	48ffffcc 	andi	r3,r9,65535
   8bc68:	10c5883a 	add	r2,r2,r3
   8bc6c:	20bfc22e 	bgeu	r4,r2,8bb78 <__udivdi3+0x434>
   8bc70:	40bfffc4 	addi	r2,r8,-1
   8bc74:	0009883a 	mov	r4,zero
   8bc78:	003f1306 	br	8b8c8 <__udivdi3+0x184>
   8bc7c:	01400204 	movi	r5,8
   8bc80:	2805883a 	mov	r2,r5
   8bc84:	003f0306 	br	8b894 <__udivdi3+0x150>
   8bc88:	01400604 	movi	r5,24
   8bc8c:	2805883a 	mov	r2,r5
   8bc90:	003f0006 	br	8b894 <__udivdi3+0x150>
   8bc94:	01400204 	movi	r5,8
   8bc98:	2805883a 	mov	r2,r5
   8bc9c:	003ec206 	br	8b7a8 <__udivdi3+0x64>
   8bca0:	01400604 	movi	r5,24
   8bca4:	2805883a 	mov	r2,r5
   8bca8:	003ebf06 	br	8b7a8 <__udivdi3+0x64>
   8bcac:	01400204 	movi	r5,8
   8bcb0:	2805883a 	mov	r2,r5
   8bcb4:	003f1706 	br	8b914 <__udivdi3+0x1d0>
   8bcb8:	01400604 	movi	r5,24
   8bcbc:	2805883a 	mov	r2,r5
   8bcc0:	003f1406 	br	8b914 <__udivdi3+0x1d0>
   8bcc4:	89ff962e 	bgeu	r17,r7,8bb20 <__udivdi3+0x3dc>
   8bcc8:	8d63883a 	add	r17,r17,r21
   8bccc:	843fffc4 	addi	r16,r16,-1
   8bcd0:	003f9306 	br	8bb20 <__udivdi3+0x3dc>
   8bcd4:	147f802e 	bgeu	r2,r17,8bad8 <__udivdi3+0x394>
   8bcd8:	a53fffc4 	addi	r20,r20,-1
   8bcdc:	1545883a 	add	r2,r2,r21
   8bce0:	003f7d06 	br	8bad8 <__udivdi3+0x394>
   8bce4:	a53fffc4 	addi	r20,r20,-1
   8bce8:	003ede06 	br	8b864 <__udivdi3+0x120>
   8bcec:	b5bfffc4 	addi	r22,r22,-1
   8bcf0:	1405883a 	add	r2,r2,r16
   8bcf4:	003f2806 	br	8b998 <__udivdi3+0x254>
   8bcf8:	a53fffc4 	addi	r20,r20,-1
   8bcfc:	003f3706 	br	8b9dc <__udivdi3+0x298>
   8bd00:	147fbb2e 	bgeu	r2,r17,8bbf0 <__udivdi3+0x4ac>
   8bd04:	297fffc4 	addi	r5,r5,-1
   8bd08:	1405883a 	add	r2,r2,r16
   8bd0c:	d9400415 	stw	r5,16(sp)
   8bd10:	003fb706 	br	8bbf0 <__udivdi3+0x4ac>
   8bd14:	b5bfffc4 	addi	r22,r22,-1
   8bd18:	1405883a 	add	r2,r2,r16
   8bd1c:	003ec006 	br	8b820 <__udivdi3+0xdc>

0008bd20 <__umoddi3>:
   8bd20:	defff104 	addi	sp,sp,-60
   8bd24:	dd800b15 	stw	r22,44(sp)
   8bd28:	dd000915 	stw	r20,36(sp)
   8bd2c:	dc000515 	stw	r16,20(sp)
   8bd30:	dfc00e15 	stw	ra,56(sp)
   8bd34:	df000d15 	stw	fp,52(sp)
   8bd38:	ddc00c15 	stw	r23,48(sp)
   8bd3c:	dd400a15 	stw	r21,40(sp)
   8bd40:	dcc00815 	stw	r19,32(sp)
   8bd44:	dc800715 	stw	r18,28(sp)
   8bd48:	dc400615 	stw	r17,24(sp)
   8bd4c:	3021883a 	mov	r16,r6
   8bd50:	202d883a 	mov	r22,r4
   8bd54:	2829883a 	mov	r20,r5
   8bd58:	38002b1e 	bne	r7,zero,8be08 <__umoddi3+0xe8>
   8bd5c:	29805036 	bltu	r5,r6,8bea0 <__umoddi3+0x180>
   8bd60:	30008a26 	beq	r6,zero,8bf8c <__umoddi3+0x26c>
   8bd64:	00bfffd4 	movui	r2,65535
   8bd68:	14008236 	bltu	r2,r16,8bf74 <__umoddi3+0x254>
   8bd6c:	00803fc4 	movi	r2,255
   8bd70:	14013636 	bltu	r2,r16,8c24c <__umoddi3+0x52c>
   8bd74:	000b883a 	mov	r5,zero
   8bd78:	0005883a 	mov	r2,zero
   8bd7c:	8084d83a 	srl	r2,r16,r2
   8bd80:	01000274 	movhi	r4,9
   8bd84:	213ccd04 	addi	r4,r4,-3276
   8bd88:	01800804 	movi	r6,32
   8bd8c:	1105883a 	add	r2,r2,r4
   8bd90:	10c00003 	ldbu	r3,0(r2)
   8bd94:	28c7883a 	add	r3,r5,r3
   8bd98:	30efc83a 	sub	r23,r6,r3
   8bd9c:	b800941e 	bne	r23,zero,8bff0 <__umoddi3+0x2d0>
   8bda0:	802ad43a 	srli	r21,r16,16
   8bda4:	a423c83a 	sub	r17,r20,r16
   8bda8:	0039883a 	mov	fp,zero
   8bdac:	853fffcc 	andi	r20,r16,65535
   8bdb0:	8809883a 	mov	r4,r17
   8bdb4:	a80b883a 	mov	r5,r21
   8bdb8:	0083ea80 	call	83ea8 <__udivsi3>
   8bdbc:	8809883a 	mov	r4,r17
   8bdc0:	a80b883a 	mov	r5,r21
   8bdc4:	a0a3383a 	mul	r17,r20,r2
   8bdc8:	0083eb00 	call	83eb0 <__umodsi3>
   8bdcc:	1004943a 	slli	r2,r2,16
   8bdd0:	b006d43a 	srli	r3,r22,16
   8bdd4:	10c4b03a 	or	r2,r2,r3
   8bdd8:	1440032e 	bgeu	r2,r17,8bde8 <__umoddi3+0xc8>
   8bddc:	1405883a 	add	r2,r2,r16
   8bde0:	14000136 	bltu	r2,r16,8bde8 <__umoddi3+0xc8>
   8bde4:	14413536 	bltu	r2,r17,8c2bc <__umoddi3+0x59c>
   8bde8:	1463c83a 	sub	r17,r2,r17
   8bdec:	8809883a 	mov	r4,r17
   8bdf0:	a80b883a 	mov	r5,r21
   8bdf4:	0083ea80 	call	83ea8 <__udivsi3>
   8bdf8:	8809883a 	mov	r4,r17
   8bdfc:	a0a3383a 	mul	r17,r20,r2
   8be00:	a80b883a 	mov	r5,r21
   8be04:	00004d06 	br	8bf3c <__umoddi3+0x21c>
   8be08:	380d883a 	mov	r6,r7
   8be0c:	29c0102e 	bgeu	r5,r7,8be50 <__umoddi3+0x130>
   8be10:	2011883a 	mov	r8,r4
   8be14:	2813883a 	mov	r9,r5
   8be18:	4005883a 	mov	r2,r8
   8be1c:	4807883a 	mov	r3,r9
   8be20:	dfc00e17 	ldw	ra,56(sp)
   8be24:	df000d17 	ldw	fp,52(sp)
   8be28:	ddc00c17 	ldw	r23,48(sp)
   8be2c:	dd800b17 	ldw	r22,44(sp)
   8be30:	dd400a17 	ldw	r21,40(sp)
   8be34:	dd000917 	ldw	r20,36(sp)
   8be38:	dcc00817 	ldw	r19,32(sp)
   8be3c:	dc800717 	ldw	r18,28(sp)
   8be40:	dc400617 	ldw	r17,24(sp)
   8be44:	dc000517 	ldw	r16,20(sp)
   8be48:	dec00f04 	addi	sp,sp,60
   8be4c:	f800283a 	ret
   8be50:	00bfffd4 	movui	r2,65535
   8be54:	11c05a36 	bltu	r2,r7,8bfc0 <__umoddi3+0x2a0>
   8be58:	00803fc4 	movi	r2,255
   8be5c:	11c0fe36 	bltu	r2,r7,8c258 <__umoddi3+0x538>
   8be60:	000b883a 	mov	r5,zero
   8be64:	0005883a 	mov	r2,zero
   8be68:	3084d83a 	srl	r2,r6,r2
   8be6c:	01000274 	movhi	r4,9
   8be70:	213ccd04 	addi	r4,r4,-3276
   8be74:	01c00804 	movi	r7,32
   8be78:	1105883a 	add	r2,r2,r4
   8be7c:	10c00003 	ldbu	r3,0(r2)
   8be80:	28c7883a 	add	r3,r5,r3
   8be84:	38ebc83a 	sub	r21,r7,r3
   8be88:	a800851e 	bne	r21,zero,8c0a0 <__umoddi3+0x380>
   8be8c:	35005236 	bltu	r6,r20,8bfd8 <__umoddi3+0x2b8>
   8be90:	b400512e 	bgeu	r22,r16,8bfd8 <__umoddi3+0x2b8>
   8be94:	b011883a 	mov	r8,r22
   8be98:	a013883a 	mov	r9,r20
   8be9c:	003fde06 	br	8be18 <__umoddi3+0xf8>
   8bea0:	00bfffd4 	movui	r2,65535
   8bea4:	11804036 	bltu	r2,r6,8bfa8 <__umoddi3+0x288>
   8bea8:	00803fc4 	movi	r2,255
   8beac:	1180ed36 	bltu	r2,r6,8c264 <__umoddi3+0x544>
   8beb0:	000b883a 	mov	r5,zero
   8beb4:	0005883a 	mov	r2,zero
   8beb8:	8084d83a 	srl	r2,r16,r2
   8bebc:	01000274 	movhi	r4,9
   8bec0:	213ccd04 	addi	r4,r4,-3276
   8bec4:	01800804 	movi	r6,32
   8bec8:	1105883a 	add	r2,r2,r4
   8becc:	10c00003 	ldbu	r3,0(r2)
   8bed0:	28c7883a 	add	r3,r5,r3
   8bed4:	30c7c83a 	sub	r3,r6,r3
   8bed8:	1800bf1e 	bne	r3,zero,8c1d8 <__umoddi3+0x4b8>
   8bedc:	0039883a 	mov	fp,zero
   8bee0:	802ad43a 	srli	r21,r16,16
   8bee4:	a009883a 	mov	r4,r20
   8bee8:	85ffffcc 	andi	r23,r16,65535
   8beec:	a80b883a 	mov	r5,r21
   8bef0:	0083ea80 	call	83ea8 <__udivsi3>
   8bef4:	a009883a 	mov	r4,r20
   8bef8:	a80b883a 	mov	r5,r21
   8befc:	b8a3383a 	mul	r17,r23,r2
   8bf00:	0083eb00 	call	83eb0 <__umodsi3>
   8bf04:	1004943a 	slli	r2,r2,16
   8bf08:	b006d43a 	srli	r3,r22,16
   8bf0c:	10c4b03a 	or	r2,r2,r3
   8bf10:	1440032e 	bgeu	r2,r17,8bf20 <__umoddi3+0x200>
   8bf14:	1405883a 	add	r2,r2,r16
   8bf18:	14000136 	bltu	r2,r16,8bf20 <__umoddi3+0x200>
   8bf1c:	1440e536 	bltu	r2,r17,8c2b4 <__umoddi3+0x594>
   8bf20:	1463c83a 	sub	r17,r2,r17
   8bf24:	8809883a 	mov	r4,r17
   8bf28:	a80b883a 	mov	r5,r21
   8bf2c:	0083ea80 	call	83ea8 <__udivsi3>
   8bf30:	8809883a 	mov	r4,r17
   8bf34:	b8a3383a 	mul	r17,r23,r2
   8bf38:	a80b883a 	mov	r5,r21
   8bf3c:	0083eb00 	call	83eb0 <__umodsi3>
   8bf40:	1004943a 	slli	r2,r2,16
   8bf44:	b0ffffcc 	andi	r3,r22,65535
   8bf48:	10c4b03a 	or	r2,r2,r3
   8bf4c:	1440042e 	bgeu	r2,r17,8bf60 <__umoddi3+0x240>
   8bf50:	1405883a 	add	r2,r2,r16
   8bf54:	14000236 	bltu	r2,r16,8bf60 <__umoddi3+0x240>
   8bf58:	1440012e 	bgeu	r2,r17,8bf60 <__umoddi3+0x240>
   8bf5c:	1405883a 	add	r2,r2,r16
   8bf60:	1445c83a 	sub	r2,r2,r17
   8bf64:	1724d83a 	srl	r18,r2,fp
   8bf68:	0013883a 	mov	r9,zero
   8bf6c:	9011883a 	mov	r8,r18
   8bf70:	003fa906 	br	8be18 <__umoddi3+0xf8>
   8bf74:	00804034 	movhi	r2,256
   8bf78:	10bfffc4 	addi	r2,r2,-1
   8bf7c:	1400b036 	bltu	r2,r16,8c240 <__umoddi3+0x520>
   8bf80:	01400404 	movi	r5,16
   8bf84:	2805883a 	mov	r2,r5
   8bf88:	003f7c06 	br	8bd7c <__umoddi3+0x5c>
   8bf8c:	01000044 	movi	r4,1
   8bf90:	000b883a 	mov	r5,zero
   8bf94:	0083ea80 	call	83ea8 <__udivsi3>
   8bf98:	1021883a 	mov	r16,r2
   8bf9c:	00bfffd4 	movui	r2,65535
   8bfa0:	143ff436 	bltu	r2,r16,8bf74 <__umoddi3+0x254>
   8bfa4:	003f7106 	br	8bd6c <__umoddi3+0x4c>
   8bfa8:	00804034 	movhi	r2,256
   8bfac:	10bfffc4 	addi	r2,r2,-1
   8bfb0:	1180af36 	bltu	r2,r6,8c270 <__umoddi3+0x550>
   8bfb4:	01400404 	movi	r5,16
   8bfb8:	2805883a 	mov	r2,r5
   8bfbc:	003fbe06 	br	8beb8 <__umoddi3+0x198>
   8bfc0:	00804034 	movhi	r2,256
   8bfc4:	10bfffc4 	addi	r2,r2,-1
   8bfc8:	11c0ac36 	bltu	r2,r7,8c27c <__umoddi3+0x55c>
   8bfcc:	01400404 	movi	r5,16
   8bfd0:	2805883a 	mov	r2,r5
   8bfd4:	003fa406 	br	8be68 <__umoddi3+0x148>
   8bfd8:	b409c83a 	sub	r4,r22,r16
   8bfdc:	b105803a 	cmpltu	r2,r22,r4
   8bfe0:	a187c83a 	sub	r3,r20,r6
   8bfe4:	18a9c83a 	sub	r20,r3,r2
   8bfe8:	202d883a 	mov	r22,r4
   8bfec:	003fa906 	br	8be94 <__umoddi3+0x174>
   8bff0:	85e0983a 	sll	r16,r16,r23
   8bff4:	35c5c83a 	sub	r2,r6,r23
   8bff8:	a0a2d83a 	srl	r17,r20,r2
   8bffc:	802ad43a 	srli	r21,r16,16
   8c000:	b084d83a 	srl	r2,r22,r2
   8c004:	a5c6983a 	sll	r3,r20,r23
   8c008:	8809883a 	mov	r4,r17
   8c00c:	a80b883a 	mov	r5,r21
   8c010:	1886b03a 	or	r3,r3,r2
   8c014:	d8c00115 	stw	r3,4(sp)
   8c018:	853fffcc 	andi	r20,r16,65535
   8c01c:	0083ea80 	call	83ea8 <__udivsi3>
   8c020:	8809883a 	mov	r4,r17
   8c024:	a80b883a 	mov	r5,r21
   8c028:	a0a3383a 	mul	r17,r20,r2
   8c02c:	0083eb00 	call	83eb0 <__umodsi3>
   8c030:	d9000117 	ldw	r4,4(sp)
   8c034:	1004943a 	slli	r2,r2,16
   8c038:	b839883a 	mov	fp,r23
   8c03c:	2006d43a 	srli	r3,r4,16
   8c040:	10c4b03a 	or	r2,r2,r3
   8c044:	1440022e 	bgeu	r2,r17,8c050 <__umoddi3+0x330>
   8c048:	1405883a 	add	r2,r2,r16
   8c04c:	1400962e 	bgeu	r2,r16,8c2a8 <__umoddi3+0x588>
   8c050:	1463c83a 	sub	r17,r2,r17
   8c054:	8809883a 	mov	r4,r17
   8c058:	a80b883a 	mov	r5,r21
   8c05c:	0083ea80 	call	83ea8 <__udivsi3>
   8c060:	8809883a 	mov	r4,r17
   8c064:	a80b883a 	mov	r5,r21
   8c068:	a0a3383a 	mul	r17,r20,r2
   8c06c:	0083eb00 	call	83eb0 <__umodsi3>
   8c070:	d9400117 	ldw	r5,4(sp)
   8c074:	1004943a 	slli	r2,r2,16
   8c078:	28ffffcc 	andi	r3,r5,65535
   8c07c:	10c4b03a 	or	r2,r2,r3
   8c080:	1440042e 	bgeu	r2,r17,8c094 <__umoddi3+0x374>
   8c084:	1405883a 	add	r2,r2,r16
   8c088:	14000236 	bltu	r2,r16,8c094 <__umoddi3+0x374>
   8c08c:	1440012e 	bgeu	r2,r17,8c094 <__umoddi3+0x374>
   8c090:	1405883a 	add	r2,r2,r16
   8c094:	b5ec983a 	sll	r22,r22,r23
   8c098:	1463c83a 	sub	r17,r2,r17
   8c09c:	003f4406 	br	8bdb0 <__umoddi3+0x90>
   8c0a0:	3d4fc83a 	sub	r7,r7,r21
   8c0a4:	3546983a 	sll	r3,r6,r21
   8c0a8:	81c4d83a 	srl	r2,r16,r7
   8c0ac:	a1e2d83a 	srl	r17,r20,r7
   8c0b0:	a54c983a 	sll	r6,r20,r21
   8c0b4:	18aeb03a 	or	r23,r3,r2
   8c0b8:	b828d43a 	srli	r20,r23,16
   8c0bc:	b1c4d83a 	srl	r2,r22,r7
   8c0c0:	8809883a 	mov	r4,r17
   8c0c4:	a00b883a 	mov	r5,r20
   8c0c8:	308cb03a 	or	r6,r6,r2
   8c0cc:	d9c00315 	stw	r7,12(sp)
   8c0d0:	d9800215 	stw	r6,8(sp)
   8c0d4:	0083ea80 	call	83ea8 <__udivsi3>
   8c0d8:	8809883a 	mov	r4,r17
   8c0dc:	a00b883a 	mov	r5,r20
   8c0e0:	1039883a 	mov	fp,r2
   8c0e4:	0083eb00 	call	83eb0 <__umodsi3>
   8c0e8:	b8ffffcc 	andi	r3,r23,65535
   8c0ec:	d8c00415 	stw	r3,16(sp)
   8c0f0:	d9000217 	ldw	r4,8(sp)
   8c0f4:	d9400417 	ldw	r5,16(sp)
   8c0f8:	1004943a 	slli	r2,r2,16
   8c0fc:	2006d43a 	srli	r3,r4,16
   8c100:	8560983a 	sll	r16,r16,r21
   8c104:	2f23383a 	mul	r17,r5,fp
   8c108:	10c4b03a 	or	r2,r2,r3
   8c10c:	dc000015 	stw	r16,0(sp)
   8c110:	b56c983a 	sll	r22,r22,r21
   8c114:	1440032e 	bgeu	r2,r17,8c124 <__umoddi3+0x404>
   8c118:	15c5883a 	add	r2,r2,r23
   8c11c:	e73fffc4 	addi	fp,fp,-1
   8c120:	15c05d2e 	bgeu	r2,r23,8c298 <__umoddi3+0x578>
   8c124:	1463c83a 	sub	r17,r2,r17
   8c128:	8809883a 	mov	r4,r17
   8c12c:	a00b883a 	mov	r5,r20
   8c130:	0083ea80 	call	83ea8 <__udivsi3>
   8c134:	8809883a 	mov	r4,r17
   8c138:	a00b883a 	mov	r5,r20
   8c13c:	1021883a 	mov	r16,r2
   8c140:	0083eb00 	call	83eb0 <__umodsi3>
   8c144:	d8c00417 	ldw	r3,16(sp)
   8c148:	d9000217 	ldw	r4,8(sp)
   8c14c:	1004943a 	slli	r2,r2,16
   8c150:	1c23383a 	mul	r17,r3,r16
   8c154:	20ffffcc 	andi	r3,r4,65535
   8c158:	10ceb03a 	or	r7,r2,r3
   8c15c:	3c40032e 	bgeu	r7,r17,8c16c <__umoddi3+0x44c>
   8c160:	3dcf883a 	add	r7,r7,r23
   8c164:	843fffc4 	addi	r16,r16,-1
   8c168:	3dc0472e 	bgeu	r7,r23,8c288 <__umoddi3+0x568>
   8c16c:	e004943a 	slli	r2,fp,16
   8c170:	d9400017 	ldw	r5,0(sp)
   8c174:	3c4fc83a 	sub	r7,r7,r17
   8c178:	8084b03a 	or	r2,r16,r2
   8c17c:	28ffffcc 	andi	r3,r5,65535
   8c180:	280cd43a 	srli	r6,r5,16
   8c184:	100ad43a 	srli	r5,r2,16
   8c188:	10bfffcc 	andi	r2,r2,65535
   8c18c:	10d1383a 	mul	r8,r2,r3
   8c190:	28c7383a 	mul	r3,r5,r3
   8c194:	1185383a 	mul	r2,r2,r6
   8c198:	4008d43a 	srli	r4,r8,16
   8c19c:	298b383a 	mul	r5,r5,r6
   8c1a0:	10c5883a 	add	r2,r2,r3
   8c1a4:	2089883a 	add	r4,r4,r2
   8c1a8:	20c0022e 	bgeu	r4,r3,8c1b4 <__umoddi3+0x494>
   8c1ac:	00800074 	movhi	r2,1
   8c1b0:	288b883a 	add	r5,r5,r2
   8c1b4:	2004d43a 	srli	r2,r4,16
   8c1b8:	2008943a 	slli	r4,r4,16
   8c1bc:	40ffffcc 	andi	r3,r8,65535
   8c1c0:	288b883a 	add	r5,r5,r2
   8c1c4:	20c9883a 	add	r4,r4,r3
   8c1c8:	39400b36 	bltu	r7,r5,8c1f8 <__umoddi3+0x4d8>
   8c1cc:	39403d26 	beq	r7,r5,8c2c4 <__umoddi3+0x5a4>
   8c1d0:	394bc83a 	sub	r5,r7,r5
   8c1d4:	00000f06 	br	8c214 <__umoddi3+0x4f4>
   8c1d8:	30c5c83a 	sub	r2,r6,r3
   8c1dc:	1839883a 	mov	fp,r3
   8c1e0:	b084d83a 	srl	r2,r22,r2
   8c1e4:	a0c6983a 	sll	r3,r20,r3
   8c1e8:	8720983a 	sll	r16,r16,fp
   8c1ec:	b72c983a 	sll	r22,r22,fp
   8c1f0:	18a8b03a 	or	r20,r3,r2
   8c1f4:	003f3a06 	br	8bee0 <__umoddi3+0x1c0>
   8c1f8:	d8c00017 	ldw	r3,0(sp)
   8c1fc:	20c5c83a 	sub	r2,r4,r3
   8c200:	2089803a 	cmpltu	r4,r4,r2
   8c204:	2dc7c83a 	sub	r3,r5,r23
   8c208:	1907c83a 	sub	r3,r3,r4
   8c20c:	38cbc83a 	sub	r5,r7,r3
   8c210:	1009883a 	mov	r4,r2
   8c214:	b105c83a 	sub	r2,r22,r4
   8c218:	b087803a 	cmpltu	r3,r22,r2
   8c21c:	28c7c83a 	sub	r3,r5,r3
   8c220:	d9400317 	ldw	r5,12(sp)
   8c224:	1544d83a 	srl	r2,r2,r21
   8c228:	1948983a 	sll	r4,r3,r5
   8c22c:	1d46d83a 	srl	r3,r3,r21
   8c230:	20a4b03a 	or	r18,r4,r2
   8c234:	9011883a 	mov	r8,r18
   8c238:	1813883a 	mov	r9,r3
   8c23c:	003ef606 	br	8be18 <__umoddi3+0xf8>
   8c240:	01400604 	movi	r5,24
   8c244:	2805883a 	mov	r2,r5
   8c248:	003ecc06 	br	8bd7c <__umoddi3+0x5c>
   8c24c:	01400204 	movi	r5,8
   8c250:	2805883a 	mov	r2,r5
   8c254:	003ec906 	br	8bd7c <__umoddi3+0x5c>
   8c258:	01400204 	movi	r5,8
   8c25c:	2805883a 	mov	r2,r5
   8c260:	003f0106 	br	8be68 <__umoddi3+0x148>
   8c264:	01400204 	movi	r5,8
   8c268:	2805883a 	mov	r2,r5
   8c26c:	003f1206 	br	8beb8 <__umoddi3+0x198>
   8c270:	01400604 	movi	r5,24
   8c274:	2805883a 	mov	r2,r5
   8c278:	003f0f06 	br	8beb8 <__umoddi3+0x198>
   8c27c:	01400604 	movi	r5,24
   8c280:	2805883a 	mov	r2,r5
   8c284:	003ef806 	br	8be68 <__umoddi3+0x148>
   8c288:	3c7fb82e 	bgeu	r7,r17,8c16c <__umoddi3+0x44c>
   8c28c:	843fffc4 	addi	r16,r16,-1
   8c290:	3dcf883a 	add	r7,r7,r23
   8c294:	003fb506 	br	8c16c <__umoddi3+0x44c>
   8c298:	147fa22e 	bgeu	r2,r17,8c124 <__umoddi3+0x404>
   8c29c:	e73fffc4 	addi	fp,fp,-1
   8c2a0:	15c5883a 	add	r2,r2,r23
   8c2a4:	003f9f06 	br	8c124 <__umoddi3+0x404>
   8c2a8:	147f692e 	bgeu	r2,r17,8c050 <__umoddi3+0x330>
   8c2ac:	1405883a 	add	r2,r2,r16
   8c2b0:	003f6706 	br	8c050 <__umoddi3+0x330>
   8c2b4:	1405883a 	add	r2,r2,r16
   8c2b8:	003f1906 	br	8bf20 <__umoddi3+0x200>
   8c2bc:	1405883a 	add	r2,r2,r16
   8c2c0:	003ec906 	br	8bde8 <__umoddi3+0xc8>
   8c2c4:	b13fcc36 	bltu	r22,r4,8c1f8 <__umoddi3+0x4d8>
   8c2c8:	000b883a 	mov	r5,zero
   8c2cc:	003fd106 	br	8c214 <__umoddi3+0x4f4>

0008c2d0 <__divdf3>:
   8c2d0:	deffed04 	addi	sp,sp,-76
   8c2d4:	dcc01115 	stw	r19,68(sp)
   8c2d8:	dcc00404 	addi	r19,sp,16
   8c2dc:	2011883a 	mov	r8,r4
   8c2e0:	2813883a 	mov	r9,r5
   8c2e4:	dc000e15 	stw	r16,56(sp)
   8c2e8:	d809883a 	mov	r4,sp
   8c2ec:	980b883a 	mov	r5,r19
   8c2f0:	dc000904 	addi	r16,sp,36
   8c2f4:	dfc01215 	stw	ra,72(sp)
   8c2f8:	da400115 	stw	r9,4(sp)
   8c2fc:	d9c00315 	stw	r7,12(sp)
   8c300:	da000015 	stw	r8,0(sp)
   8c304:	d9800215 	stw	r6,8(sp)
   8c308:	dc801015 	stw	r18,64(sp)
   8c30c:	dc400f15 	stw	r17,60(sp)
   8c310:	00842e40 	call	842e4 <__unpack_d>
   8c314:	d9000204 	addi	r4,sp,8
   8c318:	800b883a 	mov	r5,r16
   8c31c:	00842e40 	call	842e4 <__unpack_d>
   8c320:	d9000417 	ldw	r4,16(sp)
   8c324:	00800044 	movi	r2,1
   8c328:	11000b2e 	bgeu	r2,r4,8c358 <__divdf3+0x88>
   8c32c:	d9400917 	ldw	r5,36(sp)
   8c330:	1140762e 	bgeu	r2,r5,8c50c <__divdf3+0x23c>
   8c334:	d8800517 	ldw	r2,20(sp)
   8c338:	d8c00a17 	ldw	r3,40(sp)
   8c33c:	01800104 	movi	r6,4
   8c340:	10c4f03a 	xor	r2,r2,r3
   8c344:	d8800515 	stw	r2,20(sp)
   8c348:	21800226 	beq	r4,r6,8c354 <__divdf3+0x84>
   8c34c:	00800084 	movi	r2,2
   8c350:	2080141e 	bne	r4,r2,8c3a4 <__divdf3+0xd4>
   8c354:	29000926 	beq	r5,r4,8c37c <__divdf3+0xac>
   8c358:	9809883a 	mov	r4,r19
   8c35c:	0083fd00 	call	83fd0 <__pack_d>
   8c360:	dfc01217 	ldw	ra,72(sp)
   8c364:	dcc01117 	ldw	r19,68(sp)
   8c368:	dc801017 	ldw	r18,64(sp)
   8c36c:	dc400f17 	ldw	r17,60(sp)
   8c370:	dc000e17 	ldw	r16,56(sp)
   8c374:	dec01304 	addi	sp,sp,76
   8c378:	f800283a 	ret
   8c37c:	01000274 	movhi	r4,9
   8c380:	213cc804 	addi	r4,r4,-3296
   8c384:	0083fd00 	call	83fd0 <__pack_d>
   8c388:	dfc01217 	ldw	ra,72(sp)
   8c38c:	dcc01117 	ldw	r19,68(sp)
   8c390:	dc801017 	ldw	r18,64(sp)
   8c394:	dc400f17 	ldw	r17,60(sp)
   8c398:	dc000e17 	ldw	r16,56(sp)
   8c39c:	dec01304 	addi	sp,sp,76
   8c3a0:	f800283a 	ret
   8c3a4:	29805b26 	beq	r5,r6,8c514 <__divdf3+0x244>
   8c3a8:	28802d26 	beq	r5,r2,8c460 <__divdf3+0x190>
   8c3ac:	d8c00617 	ldw	r3,24(sp)
   8c3b0:	d8800b17 	ldw	r2,44(sp)
   8c3b4:	d9c00817 	ldw	r7,32(sp)
   8c3b8:	dc400d17 	ldw	r17,52(sp)
   8c3bc:	188bc83a 	sub	r5,r3,r2
   8c3c0:	d9800717 	ldw	r6,28(sp)
   8c3c4:	dc000c17 	ldw	r16,48(sp)
   8c3c8:	d9400615 	stw	r5,24(sp)
   8c3cc:	3c403836 	bltu	r7,r17,8c4b0 <__divdf3+0x1e0>
   8c3d0:	89c03626 	beq	r17,r7,8c4ac <__divdf3+0x1dc>
   8c3d4:	0015883a 	mov	r10,zero
   8c3d8:	001d883a 	mov	r14,zero
   8c3dc:	02c40034 	movhi	r11,4096
   8c3e0:	001f883a 	mov	r15,zero
   8c3e4:	003f883a 	mov	ra,zero
   8c3e8:	04800f44 	movi	r18,61
   8c3ec:	00000f06 	br	8c42c <__divdf3+0x15c>
   8c3f0:	601d883a 	mov	r14,r12
   8c3f4:	681f883a 	mov	r15,r13
   8c3f8:	400d883a 	mov	r6,r8
   8c3fc:	100f883a 	mov	r7,r2
   8c400:	3191883a 	add	r8,r6,r6
   8c404:	5808d07a 	srli	r4,r11,1
   8c408:	4185803a 	cmpltu	r2,r8,r6
   8c40c:	39d3883a 	add	r9,r7,r7
   8c410:	28c6b03a 	or	r3,r5,r3
   8c414:	1245883a 	add	r2,r2,r9
   8c418:	1815883a 	mov	r10,r3
   8c41c:	2017883a 	mov	r11,r4
   8c420:	400d883a 	mov	r6,r8
   8c424:	100f883a 	mov	r7,r2
   8c428:	fc801726 	beq	ra,r18,8c488 <__divdf3+0x1b8>
   8c42c:	580a97fa 	slli	r5,r11,31
   8c430:	5006d07a 	srli	r3,r10,1
   8c434:	ffc00044 	addi	ra,ra,1
   8c438:	3c7ff136 	bltu	r7,r17,8c400 <__divdf3+0x130>
   8c43c:	3411c83a 	sub	r8,r6,r16
   8c440:	3205803a 	cmpltu	r2,r6,r8
   8c444:	3c53c83a 	sub	r9,r7,r17
   8c448:	7298b03a 	or	r12,r14,r10
   8c44c:	7adab03a 	or	r13,r15,r11
   8c450:	4885c83a 	sub	r2,r9,r2
   8c454:	89ffe61e 	bne	r17,r7,8c3f0 <__divdf3+0x120>
   8c458:	343fe936 	bltu	r6,r16,8c400 <__divdf3+0x130>
   8c45c:	003fe406 	br	8c3f0 <__divdf3+0x120>
   8c460:	9809883a 	mov	r4,r19
   8c464:	d9800415 	stw	r6,16(sp)
   8c468:	0083fd00 	call	83fd0 <__pack_d>
   8c46c:	dfc01217 	ldw	ra,72(sp)
   8c470:	dcc01117 	ldw	r19,68(sp)
   8c474:	dc801017 	ldw	r18,64(sp)
   8c478:	dc400f17 	ldw	r17,60(sp)
   8c47c:	dc000e17 	ldw	r16,56(sp)
   8c480:	dec01304 	addi	sp,sp,76
   8c484:	f800283a 	ret
   8c488:	00803fc4 	movi	r2,255
   8c48c:	7090703a 	and	r8,r14,r2
   8c490:	00802004 	movi	r2,128
   8c494:	0007883a 	mov	r3,zero
   8c498:	0013883a 	mov	r9,zero
   8c49c:	40800d26 	beq	r8,r2,8c4d4 <__divdf3+0x204>
   8c4a0:	dbc00815 	stw	r15,32(sp)
   8c4a4:	db800715 	stw	r14,28(sp)
   8c4a8:	003fab06 	br	8c358 <__divdf3+0x88>
   8c4ac:	343fc92e 	bgeu	r6,r16,8c3d4 <__divdf3+0x104>
   8c4b0:	3185883a 	add	r2,r6,r6
   8c4b4:	1189803a 	cmpltu	r4,r2,r6
   8c4b8:	39c7883a 	add	r3,r7,r7
   8c4bc:	20c9883a 	add	r4,r4,r3
   8c4c0:	297fffc4 	addi	r5,r5,-1
   8c4c4:	100d883a 	mov	r6,r2
   8c4c8:	200f883a 	mov	r7,r4
   8c4cc:	d9400615 	stw	r5,24(sp)
   8c4d0:	003fc006 	br	8c3d4 <__divdf3+0x104>
   8c4d4:	483ff21e 	bne	r9,zero,8c4a0 <__divdf3+0x1d0>
   8c4d8:	01004004 	movi	r4,256
   8c4dc:	7104703a 	and	r2,r14,r4
   8c4e0:	10c4b03a 	or	r2,r2,r3
   8c4e4:	103fee1e 	bne	r2,zero,8c4a0 <__divdf3+0x1d0>
   8c4e8:	31c4b03a 	or	r2,r6,r7
   8c4ec:	103fec26 	beq	r2,zero,8c4a0 <__divdf3+0x1d0>
   8c4f0:	7205883a 	add	r2,r14,r8
   8c4f4:	1391803a 	cmpltu	r8,r2,r14
   8c4f8:	43d1883a 	add	r8,r8,r15
   8c4fc:	013fc004 	movi	r4,-256
   8c500:	111c703a 	and	r14,r2,r4
   8c504:	401f883a 	mov	r15,r8
   8c508:	003fe506 	br	8c4a0 <__divdf3+0x1d0>
   8c50c:	8009883a 	mov	r4,r16
   8c510:	003f9206 	br	8c35c <__divdf3+0x8c>
   8c514:	9809883a 	mov	r4,r19
   8c518:	d8000715 	stw	zero,28(sp)
   8c51c:	d8000815 	stw	zero,32(sp)
   8c520:	d8000615 	stw	zero,24(sp)
   8c524:	003f8d06 	br	8c35c <__divdf3+0x8c>

0008c528 <__nedf2>:
   8c528:	deffef04 	addi	sp,sp,-68
   8c52c:	dc400f15 	stw	r17,60(sp)
   8c530:	dc400404 	addi	r17,sp,16
   8c534:	2005883a 	mov	r2,r4
   8c538:	2807883a 	mov	r3,r5
   8c53c:	dc000e15 	stw	r16,56(sp)
   8c540:	d809883a 	mov	r4,sp
   8c544:	880b883a 	mov	r5,r17
   8c548:	dc000904 	addi	r16,sp,36
   8c54c:	d8c00115 	stw	r3,4(sp)
   8c550:	d8800015 	stw	r2,0(sp)
   8c554:	d9800215 	stw	r6,8(sp)
   8c558:	dfc01015 	stw	ra,64(sp)
   8c55c:	d9c00315 	stw	r7,12(sp)
   8c560:	00842e40 	call	842e4 <__unpack_d>
   8c564:	d9000204 	addi	r4,sp,8
   8c568:	800b883a 	mov	r5,r16
   8c56c:	00842e40 	call	842e4 <__unpack_d>
   8c570:	d8800417 	ldw	r2,16(sp)
   8c574:	00c00044 	movi	r3,1
   8c578:	180d883a 	mov	r6,r3
   8c57c:	1880062e 	bgeu	r3,r2,8c598 <__nedf2+0x70>
   8c580:	d8800917 	ldw	r2,36(sp)
   8c584:	8809883a 	mov	r4,r17
   8c588:	800b883a 	mov	r5,r16
   8c58c:	1880022e 	bgeu	r3,r2,8c598 <__nedf2+0x70>
   8c590:	008441c0 	call	8441c <__fpcmp_parts_d>
   8c594:	100d883a 	mov	r6,r2
   8c598:	3005883a 	mov	r2,r6
   8c59c:	dfc01017 	ldw	ra,64(sp)
   8c5a0:	dc400f17 	ldw	r17,60(sp)
   8c5a4:	dc000e17 	ldw	r16,56(sp)
   8c5a8:	dec01104 	addi	sp,sp,68
   8c5ac:	f800283a 	ret

0008c5b0 <__ltdf2>:
   8c5b0:	deffef04 	addi	sp,sp,-68
   8c5b4:	dc400f15 	stw	r17,60(sp)
   8c5b8:	dc400404 	addi	r17,sp,16
   8c5bc:	2005883a 	mov	r2,r4
   8c5c0:	2807883a 	mov	r3,r5
   8c5c4:	dc000e15 	stw	r16,56(sp)
   8c5c8:	d809883a 	mov	r4,sp
   8c5cc:	880b883a 	mov	r5,r17
   8c5d0:	dc000904 	addi	r16,sp,36
   8c5d4:	d8c00115 	stw	r3,4(sp)
   8c5d8:	d8800015 	stw	r2,0(sp)
   8c5dc:	d9800215 	stw	r6,8(sp)
   8c5e0:	dfc01015 	stw	ra,64(sp)
   8c5e4:	d9c00315 	stw	r7,12(sp)
   8c5e8:	00842e40 	call	842e4 <__unpack_d>
   8c5ec:	d9000204 	addi	r4,sp,8
   8c5f0:	800b883a 	mov	r5,r16
   8c5f4:	00842e40 	call	842e4 <__unpack_d>
   8c5f8:	d8800417 	ldw	r2,16(sp)
   8c5fc:	00c00044 	movi	r3,1
   8c600:	180d883a 	mov	r6,r3
   8c604:	1880062e 	bgeu	r3,r2,8c620 <__ltdf2+0x70>
   8c608:	d8800917 	ldw	r2,36(sp)
   8c60c:	8809883a 	mov	r4,r17
   8c610:	800b883a 	mov	r5,r16
   8c614:	1880022e 	bgeu	r3,r2,8c620 <__ltdf2+0x70>
   8c618:	008441c0 	call	8441c <__fpcmp_parts_d>
   8c61c:	100d883a 	mov	r6,r2
   8c620:	3005883a 	mov	r2,r6
   8c624:	dfc01017 	ldw	ra,64(sp)
   8c628:	dc400f17 	ldw	r17,60(sp)
   8c62c:	dc000e17 	ldw	r16,56(sp)
   8c630:	dec01104 	addi	sp,sp,68
   8c634:	f800283a 	ret

0008c638 <__floatunsidf>:
   8c638:	defff204 	addi	sp,sp,-56
   8c63c:	dfc00d15 	stw	ra,52(sp)
   8c640:	ddc00c15 	stw	r23,48(sp)
   8c644:	dd800b15 	stw	r22,44(sp)
   8c648:	dd400a15 	stw	r21,40(sp)
   8c64c:	dd000915 	stw	r20,36(sp)
   8c650:	dcc00815 	stw	r19,32(sp)
   8c654:	dc800715 	stw	r18,28(sp)
   8c658:	dc400615 	stw	r17,24(sp)
   8c65c:	dc000515 	stw	r16,20(sp)
   8c660:	d8000115 	stw	zero,4(sp)
   8c664:	20000f1e 	bne	r4,zero,8c6a4 <__floatunsidf+0x6c>
   8c668:	00800084 	movi	r2,2
   8c66c:	d8800015 	stw	r2,0(sp)
   8c670:	d809883a 	mov	r4,sp
   8c674:	0083fd00 	call	83fd0 <__pack_d>
   8c678:	dfc00d17 	ldw	ra,52(sp)
   8c67c:	ddc00c17 	ldw	r23,48(sp)
   8c680:	dd800b17 	ldw	r22,44(sp)
   8c684:	dd400a17 	ldw	r21,40(sp)
   8c688:	dd000917 	ldw	r20,36(sp)
   8c68c:	dcc00817 	ldw	r19,32(sp)
   8c690:	dc800717 	ldw	r18,28(sp)
   8c694:	dc400617 	ldw	r17,24(sp)
   8c698:	dc000517 	ldw	r16,20(sp)
   8c69c:	dec00e04 	addi	sp,sp,56
   8c6a0:	f800283a 	ret
   8c6a4:	008000c4 	movi	r2,3
   8c6a8:	00c00f04 	movi	r3,60
   8c6ac:	002f883a 	mov	r23,zero
   8c6b0:	202d883a 	mov	r22,r4
   8c6b4:	d8800015 	stw	r2,0(sp)
   8c6b8:	d8c00215 	stw	r3,8(sp)
   8c6bc:	d9000315 	stw	r4,12(sp)
   8c6c0:	ddc00415 	stw	r23,16(sp)
   8c6c4:	0083f500 	call	83f50 <__clzsi2>
   8c6c8:	12400744 	addi	r9,r2,29
   8c6cc:	48000b16 	blt	r9,zero,8c6fc <__floatunsidf+0xc4>
   8c6d0:	483fe726 	beq	r9,zero,8c670 <__floatunsidf+0x38>
   8c6d4:	10bfff44 	addi	r2,r2,-3
   8c6d8:	10002e16 	blt	r2,zero,8c794 <__floatunsidf+0x15c>
   8c6dc:	b0a2983a 	sll	r17,r22,r2
   8c6e0:	0021883a 	mov	r16,zero
   8c6e4:	d8800217 	ldw	r2,8(sp)
   8c6e8:	dc400415 	stw	r17,16(sp)
   8c6ec:	dc000315 	stw	r16,12(sp)
   8c6f0:	1245c83a 	sub	r2,r2,r9
   8c6f4:	d8800215 	stw	r2,8(sp)
   8c6f8:	003fdd06 	br	8c670 <__floatunsidf+0x38>
   8c6fc:	0255c83a 	sub	r10,zero,r9
   8c700:	51bff804 	addi	r6,r10,-32
   8c704:	30001b16 	blt	r6,zero,8c774 <__floatunsidf+0x13c>
   8c708:	b9a8d83a 	srl	r20,r23,r6
   8c70c:	002b883a 	mov	r21,zero
   8c710:	000f883a 	mov	r7,zero
   8c714:	01000044 	movi	r4,1
   8c718:	0011883a 	mov	r8,zero
   8c71c:	30002516 	blt	r6,zero,8c7b4 <__floatunsidf+0x17c>
   8c720:	21a6983a 	sll	r19,r4,r6
   8c724:	0025883a 	mov	r18,zero
   8c728:	00bfffc4 	movi	r2,-1
   8c72c:	9089883a 	add	r4,r18,r2
   8c730:	988b883a 	add	r5,r19,r2
   8c734:	248d803a 	cmpltu	r6,r4,r18
   8c738:	314b883a 	add	r5,r6,r5
   8c73c:	b104703a 	and	r2,r22,r4
   8c740:	b946703a 	and	r3,r23,r5
   8c744:	10c4b03a 	or	r2,r2,r3
   8c748:	10000226 	beq	r2,zero,8c754 <__floatunsidf+0x11c>
   8c74c:	01c00044 	movi	r7,1
   8c750:	0011883a 	mov	r8,zero
   8c754:	d9000217 	ldw	r4,8(sp)
   8c758:	a1c4b03a 	or	r2,r20,r7
   8c75c:	aa06b03a 	or	r3,r21,r8
   8c760:	2249c83a 	sub	r4,r4,r9
   8c764:	d8c00415 	stw	r3,16(sp)
   8c768:	d9000215 	stw	r4,8(sp)
   8c76c:	d8800315 	stw	r2,12(sp)
   8c770:	003fbf06 	br	8c670 <__floatunsidf+0x38>
   8c774:	bdc7883a 	add	r3,r23,r23
   8c778:	008007c4 	movi	r2,31
   8c77c:	1285c83a 	sub	r2,r2,r10
   8c780:	1886983a 	sll	r3,r3,r2
   8c784:	b2a8d83a 	srl	r20,r22,r10
   8c788:	baaad83a 	srl	r21,r23,r10
   8c78c:	1d28b03a 	or	r20,r3,r20
   8c790:	003fdf06 	br	8c710 <__floatunsidf+0xd8>
   8c794:	b006d07a 	srli	r3,r22,1
   8c798:	008007c4 	movi	r2,31
   8c79c:	1245c83a 	sub	r2,r2,r9
   8c7a0:	1886d83a 	srl	r3,r3,r2
   8c7a4:	ba62983a 	sll	r17,r23,r9
   8c7a8:	b260983a 	sll	r16,r22,r9
   8c7ac:	1c62b03a 	or	r17,r3,r17
   8c7b0:	003fcc06 	br	8c6e4 <__floatunsidf+0xac>
   8c7b4:	2006d07a 	srli	r3,r4,1
   8c7b8:	008007c4 	movi	r2,31
   8c7bc:	1285c83a 	sub	r2,r2,r10
   8c7c0:	18a6d83a 	srl	r19,r3,r2
   8c7c4:	22a4983a 	sll	r18,r4,r10
   8c7c8:	003fd706 	br	8c728 <__floatunsidf+0xf0>

0008c7cc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8c7cc:	defff804 	addi	sp,sp,-32
   8c7d0:	dfc00715 	stw	ra,28(sp)
   8c7d4:	df000615 	stw	fp,24(sp)
   8c7d8:	df000604 	addi	fp,sp,24
   8c7dc:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8c7e0:	e0bffc17 	ldw	r2,-16(fp)
   8c7e4:	1004803a 	cmplt	r2,r2,zero
   8c7e8:	1000081e 	bne	r2,zero,8c80c <close+0x40>
   8c7ec:	e0bffc17 	ldw	r2,-16(fp)
   8c7f0:	10800324 	muli	r2,r2,12
   8c7f4:	1007883a 	mov	r3,r2
   8c7f8:	00800274 	movhi	r2,9
   8c7fc:	10803704 	addi	r2,r2,220
   8c800:	1887883a 	add	r3,r3,r2
   8c804:	e0ffff15 	stw	r3,-4(fp)
   8c808:	00000106 	br	8c810 <close+0x44>
   8c80c:	e03fff15 	stw	zero,-4(fp)
   8c810:	e0bfff17 	ldw	r2,-4(fp)
   8c814:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
   8c818:	e0bffb17 	ldw	r2,-20(fp)
   8c81c:	1005003a 	cmpeq	r2,r2,zero
   8c820:	10001d1e 	bne	r2,zero,8c898 <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8c824:	e0bffb17 	ldw	r2,-20(fp)
   8c828:	10800017 	ldw	r2,0(r2)
   8c82c:	10800417 	ldw	r2,16(r2)
   8c830:	1005003a 	cmpeq	r2,r2,zero
   8c834:	1000071e 	bne	r2,zero,8c854 <close+0x88>
   8c838:	e0bffb17 	ldw	r2,-20(fp)
   8c83c:	10800017 	ldw	r2,0(r2)
   8c840:	10800417 	ldw	r2,16(r2)
   8c844:	e13ffb17 	ldw	r4,-20(fp)
   8c848:	103ee83a 	callr	r2
   8c84c:	e0bffe15 	stw	r2,-8(fp)
   8c850:	00000106 	br	8c858 <close+0x8c>
   8c854:	e03ffe15 	stw	zero,-8(fp)
   8c858:	e0bffe17 	ldw	r2,-8(fp)
   8c85c:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8c860:	e13ffc17 	ldw	r4,-16(fp)
   8c864:	008d0100 	call	8d010 <alt_release_fd>
    if (rval < 0)
   8c868:	e0bffa17 	ldw	r2,-24(fp)
   8c86c:	1004403a 	cmpge	r2,r2,zero
   8c870:	1000071e 	bne	r2,zero,8c890 <close+0xc4>
    {
      ALT_ERRNO = -rval;
   8c874:	008c8c80 	call	8c8c8 <alt_get_errno>
   8c878:	e0fffa17 	ldw	r3,-24(fp)
   8c87c:	00c7c83a 	sub	r3,zero,r3
   8c880:	10c00015 	stw	r3,0(r2)
      return -1;
   8c884:	00bfffc4 	movi	r2,-1
   8c888:	e0bffd15 	stw	r2,-12(fp)
   8c88c:	00000806 	br	8c8b0 <close+0xe4>
    }
    return 0;
   8c890:	e03ffd15 	stw	zero,-12(fp)
   8c894:	00000606 	br	8c8b0 <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8c898:	008c8c80 	call	8c8c8 <alt_get_errno>
   8c89c:	1007883a 	mov	r3,r2
   8c8a0:	00801444 	movi	r2,81
   8c8a4:	18800015 	stw	r2,0(r3)
    return -1;
   8c8a8:	00bfffc4 	movi	r2,-1
   8c8ac:	e0bffd15 	stw	r2,-12(fp)
   8c8b0:	e0bffd17 	ldw	r2,-12(fp)
  }
}
   8c8b4:	e037883a 	mov	sp,fp
   8c8b8:	dfc00117 	ldw	ra,4(sp)
   8c8bc:	df000017 	ldw	fp,0(sp)
   8c8c0:	dec00204 	addi	sp,sp,8
   8c8c4:	f800283a 	ret

0008c8c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8c8c8:	defffd04 	addi	sp,sp,-12
   8c8cc:	dfc00215 	stw	ra,8(sp)
   8c8d0:	df000115 	stw	fp,4(sp)
   8c8d4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8c8d8:	00800274 	movhi	r2,9
   8c8dc:	1084ba04 	addi	r2,r2,4840
   8c8e0:	10800017 	ldw	r2,0(r2)
   8c8e4:	1005003a 	cmpeq	r2,r2,zero
   8c8e8:	1000061e 	bne	r2,zero,8c904 <alt_get_errno+0x3c>
   8c8ec:	00800274 	movhi	r2,9
   8c8f0:	1084ba04 	addi	r2,r2,4840
   8c8f4:	10800017 	ldw	r2,0(r2)
   8c8f8:	103ee83a 	callr	r2
   8c8fc:	e0bfff15 	stw	r2,-4(fp)
   8c900:	00000306 	br	8c910 <alt_get_errno+0x48>
   8c904:	00800274 	movhi	r2,9
   8c908:	108bec04 	addi	r2,r2,12208
   8c90c:	e0bfff15 	stw	r2,-4(fp)
   8c910:	e0bfff17 	ldw	r2,-4(fp)
}
   8c914:	e037883a 	mov	sp,fp
   8c918:	dfc00117 	ldw	ra,4(sp)
   8c91c:	df000017 	ldw	fp,0(sp)
   8c920:	dec00204 	addi	sp,sp,8
   8c924:	f800283a 	ret

0008c928 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8c928:	defffc04 	addi	sp,sp,-16
   8c92c:	df000315 	stw	fp,12(sp)
   8c930:	df000304 	addi	fp,sp,12
   8c934:	e13ffd15 	stw	r4,-12(fp)
   8c938:	e17ffe15 	stw	r5,-8(fp)
   8c93c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8c940:	e0bfff17 	ldw	r2,-4(fp)
}
   8c944:	e037883a 	mov	sp,fp
   8c948:	df000017 	ldw	fp,0(sp)
   8c94c:	dec00104 	addi	sp,sp,4
   8c950:	f800283a 	ret

0008c954 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8c954:	defff904 	addi	sp,sp,-28
   8c958:	dfc00615 	stw	ra,24(sp)
   8c95c:	df000515 	stw	fp,20(sp)
   8c960:	df000504 	addi	fp,sp,20
   8c964:	e13ffc15 	stw	r4,-16(fp)
   8c968:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8c96c:	e0bffc17 	ldw	r2,-16(fp)
   8c970:	1004803a 	cmplt	r2,r2,zero
   8c974:	1000081e 	bne	r2,zero,8c998 <fstat+0x44>
   8c978:	e0bffc17 	ldw	r2,-16(fp)
   8c97c:	10800324 	muli	r2,r2,12
   8c980:	1007883a 	mov	r3,r2
   8c984:	00800274 	movhi	r2,9
   8c988:	10803704 	addi	r2,r2,220
   8c98c:	1887883a 	add	r3,r3,r2
   8c990:	e0ffff15 	stw	r3,-4(fp)
   8c994:	00000106 	br	8c99c <fstat+0x48>
   8c998:	e03fff15 	stw	zero,-4(fp)
   8c99c:	e0bfff17 	ldw	r2,-4(fp)
   8c9a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8c9a4:	e0bffb17 	ldw	r2,-20(fp)
   8c9a8:	1005003a 	cmpeq	r2,r2,zero
   8c9ac:	1000121e 	bne	r2,zero,8c9f8 <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8c9b0:	e0bffb17 	ldw	r2,-20(fp)
   8c9b4:	10800017 	ldw	r2,0(r2)
   8c9b8:	10800817 	ldw	r2,32(r2)
   8c9bc:	1005003a 	cmpeq	r2,r2,zero
   8c9c0:	1000081e 	bne	r2,zero,8c9e4 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
   8c9c4:	e0bffb17 	ldw	r2,-20(fp)
   8c9c8:	10800017 	ldw	r2,0(r2)
   8c9cc:	10800817 	ldw	r2,32(r2)
   8c9d0:	e13ffb17 	ldw	r4,-20(fp)
   8c9d4:	e17ffd17 	ldw	r5,-12(fp)
   8c9d8:	103ee83a 	callr	r2
   8c9dc:	e0bffe15 	stw	r2,-8(fp)
   8c9e0:	00000b06 	br	8ca10 <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8c9e4:	e0fffd17 	ldw	r3,-12(fp)
   8c9e8:	00880004 	movi	r2,8192
   8c9ec:	18800115 	stw	r2,4(r3)
      return 0;
   8c9f0:	e03ffe15 	stw	zero,-8(fp)
   8c9f4:	00000606 	br	8ca10 <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8c9f8:	008ca280 	call	8ca28 <alt_get_errno>
   8c9fc:	1007883a 	mov	r3,r2
   8ca00:	00801444 	movi	r2,81
   8ca04:	18800015 	stw	r2,0(r3)
    return -1;
   8ca08:	00bfffc4 	movi	r2,-1
   8ca0c:	e0bffe15 	stw	r2,-8(fp)
   8ca10:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8ca14:	e037883a 	mov	sp,fp
   8ca18:	dfc00117 	ldw	ra,4(sp)
   8ca1c:	df000017 	ldw	fp,0(sp)
   8ca20:	dec00204 	addi	sp,sp,8
   8ca24:	f800283a 	ret

0008ca28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ca28:	defffd04 	addi	sp,sp,-12
   8ca2c:	dfc00215 	stw	ra,8(sp)
   8ca30:	df000115 	stw	fp,4(sp)
   8ca34:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8ca38:	00800274 	movhi	r2,9
   8ca3c:	1084ba04 	addi	r2,r2,4840
   8ca40:	10800017 	ldw	r2,0(r2)
   8ca44:	1005003a 	cmpeq	r2,r2,zero
   8ca48:	1000061e 	bne	r2,zero,8ca64 <alt_get_errno+0x3c>
   8ca4c:	00800274 	movhi	r2,9
   8ca50:	1084ba04 	addi	r2,r2,4840
   8ca54:	10800017 	ldw	r2,0(r2)
   8ca58:	103ee83a 	callr	r2
   8ca5c:	e0bfff15 	stw	r2,-4(fp)
   8ca60:	00000306 	br	8ca70 <alt_get_errno+0x48>
   8ca64:	00800274 	movhi	r2,9
   8ca68:	108bec04 	addi	r2,r2,12208
   8ca6c:	e0bfff15 	stw	r2,-4(fp)
   8ca70:	e0bfff17 	ldw	r2,-4(fp)
}
   8ca74:	e037883a 	mov	sp,fp
   8ca78:	dfc00117 	ldw	ra,4(sp)
   8ca7c:	df000017 	ldw	fp,0(sp)
   8ca80:	dec00204 	addi	sp,sp,8
   8ca84:	f800283a 	ret

0008ca88 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8ca88:	deffeb04 	addi	sp,sp,-84
   8ca8c:	dfc01415 	stw	ra,80(sp)
   8ca90:	df001315 	stw	fp,76(sp)
   8ca94:	df001304 	addi	fp,sp,76
   8ca98:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8ca9c:	e0bffd17 	ldw	r2,-12(fp)
   8caa0:	1004803a 	cmplt	r2,r2,zero
   8caa4:	1000081e 	bne	r2,zero,8cac8 <isatty+0x40>
   8caa8:	e0bffd17 	ldw	r2,-12(fp)
   8caac:	10800324 	muli	r2,r2,12
   8cab0:	1007883a 	mov	r3,r2
   8cab4:	00800274 	movhi	r2,9
   8cab8:	10803704 	addi	r2,r2,220
   8cabc:	1887883a 	add	r3,r3,r2
   8cac0:	e0ffff15 	stw	r3,-4(fp)
   8cac4:	00000106 	br	8cacc <isatty+0x44>
   8cac8:	e03fff15 	stw	zero,-4(fp)
   8cacc:	e0bfff17 	ldw	r2,-4(fp)
   8cad0:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
   8cad4:	e0bfed17 	ldw	r2,-76(fp)
   8cad8:	1005003a 	cmpeq	r2,r2,zero
   8cadc:	10000f1e 	bne	r2,zero,8cb1c <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8cae0:	e0bfed17 	ldw	r2,-76(fp)
   8cae4:	10800017 	ldw	r2,0(r2)
   8cae8:	10800817 	ldw	r2,32(r2)
   8caec:	1004c03a 	cmpne	r2,r2,zero
   8caf0:	1000031e 	bne	r2,zero,8cb00 <isatty+0x78>
    {
      return 1;
   8caf4:	00800044 	movi	r2,1
   8caf8:	e0bffe15 	stw	r2,-8(fp)
   8cafc:	00000c06 	br	8cb30 <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8cb00:	e17fee04 	addi	r5,fp,-72
   8cb04:	e13ffd17 	ldw	r4,-12(fp)
   8cb08:	008c9540 	call	8c954 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8cb0c:	e0bfef17 	ldw	r2,-68(fp)
   8cb10:	10880020 	cmpeqi	r2,r2,8192
   8cb14:	e0bffe15 	stw	r2,-8(fp)
   8cb18:	00000506 	br	8cb30 <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8cb1c:	008cb480 	call	8cb48 <alt_get_errno>
   8cb20:	1007883a 	mov	r3,r2
   8cb24:	00801444 	movi	r2,81
   8cb28:	18800015 	stw	r2,0(r3)
    return 0;
   8cb2c:	e03ffe15 	stw	zero,-8(fp)
   8cb30:	e0bffe17 	ldw	r2,-8(fp)
  }
}
   8cb34:	e037883a 	mov	sp,fp
   8cb38:	dfc00117 	ldw	ra,4(sp)
   8cb3c:	df000017 	ldw	fp,0(sp)
   8cb40:	dec00204 	addi	sp,sp,8
   8cb44:	f800283a 	ret

0008cb48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cb48:	defffd04 	addi	sp,sp,-12
   8cb4c:	dfc00215 	stw	ra,8(sp)
   8cb50:	df000115 	stw	fp,4(sp)
   8cb54:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8cb58:	00800274 	movhi	r2,9
   8cb5c:	1084ba04 	addi	r2,r2,4840
   8cb60:	10800017 	ldw	r2,0(r2)
   8cb64:	1005003a 	cmpeq	r2,r2,zero
   8cb68:	1000061e 	bne	r2,zero,8cb84 <alt_get_errno+0x3c>
   8cb6c:	00800274 	movhi	r2,9
   8cb70:	1084ba04 	addi	r2,r2,4840
   8cb74:	10800017 	ldw	r2,0(r2)
   8cb78:	103ee83a 	callr	r2
   8cb7c:	e0bfff15 	stw	r2,-4(fp)
   8cb80:	00000306 	br	8cb90 <alt_get_errno+0x48>
   8cb84:	00800274 	movhi	r2,9
   8cb88:	108bec04 	addi	r2,r2,12208
   8cb8c:	e0bfff15 	stw	r2,-4(fp)
   8cb90:	e0bfff17 	ldw	r2,-4(fp)
}
   8cb94:	e037883a 	mov	sp,fp
   8cb98:	dfc00117 	ldw	ra,4(sp)
   8cb9c:	df000017 	ldw	fp,0(sp)
   8cba0:	dec00204 	addi	sp,sp,8
   8cba4:	f800283a 	ret

0008cba8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8cba8:	defffe04 	addi	sp,sp,-8
   8cbac:	dfc00115 	stw	ra,4(sp)
   8cbb0:	df000015 	stw	fp,0(sp)
   8cbb4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8cbb8:	01000274 	movhi	r4,9
   8cbbc:	2104bf04 	addi	r4,r4,4860
   8cbc0:	01400274 	movhi	r5,9
   8cbc4:	297d9804 	addi	r5,r5,-2464
   8cbc8:	01800274 	movhi	r6,9
   8cbcc:	3184bf04 	addi	r6,r6,4860
   8cbd0:	008cc280 	call	8cc28 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8cbd4:	01000234 	movhi	r4,8
   8cbd8:	21000804 	addi	r4,r4,32
   8cbdc:	01400234 	movhi	r5,8
   8cbe0:	29400804 	addi	r5,r5,32
   8cbe4:	01800234 	movhi	r6,8
   8cbe8:	31806d04 	addi	r6,r6,436
   8cbec:	008cc280 	call	8cc28 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8cbf0:	01000274 	movhi	r4,9
   8cbf4:	213c5104 	addi	r4,r4,-3772
   8cbf8:	01400274 	movhi	r5,9
   8cbfc:	297c5104 	addi	r5,r5,-3772
   8cc00:	01800274 	movhi	r6,9
   8cc04:	31bd9804 	addi	r6,r6,-2464
   8cc08:	008cc280 	call	8cc28 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8cc0c:	008df5c0 	call	8df5c <alt_dcache_flush_all>
  alt_icache_flush_all();
   8cc10:	008e17c0 	call	8e17c <alt_icache_flush_all>
}
   8cc14:	e037883a 	mov	sp,fp
   8cc18:	dfc00117 	ldw	ra,4(sp)
   8cc1c:	df000017 	ldw	fp,0(sp)
   8cc20:	dec00204 	addi	sp,sp,8
   8cc24:	f800283a 	ret

0008cc28 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8cc28:	defffc04 	addi	sp,sp,-16
   8cc2c:	df000315 	stw	fp,12(sp)
   8cc30:	df000304 	addi	fp,sp,12
   8cc34:	e13ffd15 	stw	r4,-12(fp)
   8cc38:	e17ffe15 	stw	r5,-8(fp)
   8cc3c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8cc40:	e0fffe17 	ldw	r3,-8(fp)
   8cc44:	e0bffd17 	ldw	r2,-12(fp)
   8cc48:	18800e26 	beq	r3,r2,8cc84 <alt_load_section+0x5c>
  {
    while( to != end )
   8cc4c:	00000a06 	br	8cc78 <alt_load_section+0x50>
    {
      *to++ = *from++;
   8cc50:	e0bffd17 	ldw	r2,-12(fp)
   8cc54:	10c00017 	ldw	r3,0(r2)
   8cc58:	e0bffe17 	ldw	r2,-8(fp)
   8cc5c:	10c00015 	stw	r3,0(r2)
   8cc60:	e0bffe17 	ldw	r2,-8(fp)
   8cc64:	10800104 	addi	r2,r2,4
   8cc68:	e0bffe15 	stw	r2,-8(fp)
   8cc6c:	e0bffd17 	ldw	r2,-12(fp)
   8cc70:	10800104 	addi	r2,r2,4
   8cc74:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8cc78:	e0fffe17 	ldw	r3,-8(fp)
   8cc7c:	e0bfff17 	ldw	r2,-4(fp)
   8cc80:	18bff31e 	bne	r3,r2,8cc50 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8cc84:	e037883a 	mov	sp,fp
   8cc88:	df000017 	ldw	fp,0(sp)
   8cc8c:	dec00104 	addi	sp,sp,4
   8cc90:	f800283a 	ret

0008cc94 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8cc94:	defff804 	addi	sp,sp,-32
   8cc98:	dfc00715 	stw	ra,28(sp)
   8cc9c:	df000615 	stw	fp,24(sp)
   8cca0:	df000604 	addi	fp,sp,24
   8cca4:	e13ffc15 	stw	r4,-16(fp)
   8cca8:	e17ffd15 	stw	r5,-12(fp)
   8ccac:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8ccb0:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8ccb4:	e0bffc17 	ldw	r2,-16(fp)
   8ccb8:	1004803a 	cmplt	r2,r2,zero
   8ccbc:	1000081e 	bne	r2,zero,8cce0 <lseek+0x4c>
   8ccc0:	e0bffc17 	ldw	r2,-16(fp)
   8ccc4:	10800324 	muli	r2,r2,12
   8ccc8:	1007883a 	mov	r3,r2
   8cccc:	00800274 	movhi	r2,9
   8ccd0:	10803704 	addi	r2,r2,220
   8ccd4:	1887883a 	add	r3,r3,r2
   8ccd8:	e0ffff15 	stw	r3,-4(fp)
   8ccdc:	00000106 	br	8cce4 <lseek+0x50>
   8cce0:	e03fff15 	stw	zero,-4(fp)
   8cce4:	e0bfff17 	ldw	r2,-4(fp)
   8cce8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
   8ccec:	e0bffb17 	ldw	r2,-20(fp)
   8ccf0:	1005003a 	cmpeq	r2,r2,zero
   8ccf4:	1000111e 	bne	r2,zero,8cd3c <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8ccf8:	e0bffb17 	ldw	r2,-20(fp)
   8ccfc:	10800017 	ldw	r2,0(r2)
   8cd00:	10800717 	ldw	r2,28(r2)
   8cd04:	1005003a 	cmpeq	r2,r2,zero
   8cd08:	1000091e 	bne	r2,zero,8cd30 <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8cd0c:	e0bffb17 	ldw	r2,-20(fp)
   8cd10:	10800017 	ldw	r2,0(r2)
   8cd14:	10800717 	ldw	r2,28(r2)
   8cd18:	e13ffb17 	ldw	r4,-20(fp)
   8cd1c:	e17ffd17 	ldw	r5,-12(fp)
   8cd20:	e1bffe17 	ldw	r6,-8(fp)
   8cd24:	103ee83a 	callr	r2
   8cd28:	e0bffa15 	stw	r2,-24(fp)
   8cd2c:	00000506 	br	8cd44 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8cd30:	00bfde84 	movi	r2,-134
   8cd34:	e0bffa15 	stw	r2,-24(fp)
   8cd38:	00000206 	br	8cd44 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
   8cd3c:	00bfebc4 	movi	r2,-81
   8cd40:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
   8cd44:	e0bffa17 	ldw	r2,-24(fp)
   8cd48:	1004403a 	cmpge	r2,r2,zero
   8cd4c:	1000071e 	bne	r2,zero,8cd6c <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
   8cd50:	008cd840 	call	8cd84 <alt_get_errno>
   8cd54:	1007883a 	mov	r3,r2
   8cd58:	e0bffa17 	ldw	r2,-24(fp)
   8cd5c:	0085c83a 	sub	r2,zero,r2
   8cd60:	18800015 	stw	r2,0(r3)
    rc = -1;
   8cd64:	00bfffc4 	movi	r2,-1
   8cd68:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
   8cd6c:	e0bffa17 	ldw	r2,-24(fp)
}
   8cd70:	e037883a 	mov	sp,fp
   8cd74:	dfc00117 	ldw	ra,4(sp)
   8cd78:	df000017 	ldw	fp,0(sp)
   8cd7c:	dec00204 	addi	sp,sp,8
   8cd80:	f800283a 	ret

0008cd84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cd84:	defffd04 	addi	sp,sp,-12
   8cd88:	dfc00215 	stw	ra,8(sp)
   8cd8c:	df000115 	stw	fp,4(sp)
   8cd90:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8cd94:	00800274 	movhi	r2,9
   8cd98:	1084ba04 	addi	r2,r2,4840
   8cd9c:	10800017 	ldw	r2,0(r2)
   8cda0:	1005003a 	cmpeq	r2,r2,zero
   8cda4:	1000061e 	bne	r2,zero,8cdc0 <alt_get_errno+0x3c>
   8cda8:	00800274 	movhi	r2,9
   8cdac:	1084ba04 	addi	r2,r2,4840
   8cdb0:	10800017 	ldw	r2,0(r2)
   8cdb4:	103ee83a 	callr	r2
   8cdb8:	e0bfff15 	stw	r2,-4(fp)
   8cdbc:	00000306 	br	8cdcc <alt_get_errno+0x48>
   8cdc0:	00800274 	movhi	r2,9
   8cdc4:	108bec04 	addi	r2,r2,12208
   8cdc8:	e0bfff15 	stw	r2,-4(fp)
   8cdcc:	e0bfff17 	ldw	r2,-4(fp)
}
   8cdd0:	e037883a 	mov	sp,fp
   8cdd4:	dfc00117 	ldw	ra,4(sp)
   8cdd8:	df000017 	ldw	fp,0(sp)
   8cddc:	dec00204 	addi	sp,sp,8
   8cde0:	f800283a 	ret

0008cde4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8cde4:	defffd04 	addi	sp,sp,-12
   8cde8:	dfc00215 	stw	ra,8(sp)
   8cdec:	df000115 	stw	fp,4(sp)
   8cdf0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8cdf4:	0009883a 	mov	r4,zero
   8cdf8:	008d2ac0 	call	8d2ac <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8cdfc:	008d2e00 	call	8d2e0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8ce00:	01000274 	movhi	r4,9
   8ce04:	213d8e04 	addi	r4,r4,-2504
   8ce08:	01400274 	movhi	r5,9
   8ce0c:	297d8e04 	addi	r5,r5,-2504
   8ce10:	01800274 	movhi	r6,9
   8ce14:	31bd8e04 	addi	r6,r6,-2504
   8ce18:	008e53c0 	call	8e53c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8ce1c:	008e0b40 	call	8e0b4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8ce20:	01000274 	movhi	r4,9
   8ce24:	21384604 	addi	r4,r4,-7912
   8ce28:	008ed380 	call	8ed38 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8ce2c:	d1273e17 	ldw	r4,-25352(gp)
   8ce30:	d1673f17 	ldw	r5,-25348(gp)
   8ce34:	d1a74017 	ldw	r6,-25344(gp)
   8ce38:	00802000 	call	80200 <main>
   8ce3c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8ce40:	01000044 	movi	r4,1
   8ce44:	008c7cc0 	call	8c7cc <close>
  exit (result);
   8ce48:	e13fff17 	ldw	r4,-4(fp)
   8ce4c:	008ed4c0 	call	8ed4c <exit>

0008ce50 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8ce50:	defffe04 	addi	sp,sp,-8
   8ce54:	df000115 	stw	fp,4(sp)
   8ce58:	df000104 	addi	fp,sp,4
   8ce5c:	e13fff15 	stw	r4,-4(fp)
}
   8ce60:	e037883a 	mov	sp,fp
   8ce64:	df000017 	ldw	fp,0(sp)
   8ce68:	dec00104 	addi	sp,sp,4
   8ce6c:	f800283a 	ret

0008ce70 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8ce70:	defffe04 	addi	sp,sp,-8
   8ce74:	df000115 	stw	fp,4(sp)
   8ce78:	df000104 	addi	fp,sp,4
   8ce7c:	e13fff15 	stw	r4,-4(fp)
}
   8ce80:	e037883a 	mov	sp,fp
   8ce84:	df000017 	ldw	fp,0(sp)
   8ce88:	dec00104 	addi	sp,sp,4
   8ce8c:	f800283a 	ret

0008ce90 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8ce90:	defff704 	addi	sp,sp,-36
   8ce94:	dfc00815 	stw	ra,32(sp)
   8ce98:	df000715 	stw	fp,28(sp)
   8ce9c:	df000704 	addi	fp,sp,28
   8cea0:	e13ffb15 	stw	r4,-20(fp)
   8cea4:	e17ffc15 	stw	r5,-16(fp)
   8cea8:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8ceac:	e0bffb17 	ldw	r2,-20(fp)
   8ceb0:	1004803a 	cmplt	r2,r2,zero
   8ceb4:	1000081e 	bne	r2,zero,8ced8 <read+0x48>
   8ceb8:	e0bffb17 	ldw	r2,-20(fp)
   8cebc:	10800324 	muli	r2,r2,12
   8cec0:	1007883a 	mov	r3,r2
   8cec4:	00800274 	movhi	r2,9
   8cec8:	10803704 	addi	r2,r2,220
   8cecc:	1887883a 	add	r3,r3,r2
   8ced0:	e0ffff15 	stw	r3,-4(fp)
   8ced4:	00000106 	br	8cedc <read+0x4c>
   8ced8:	e03fff15 	stw	zero,-4(fp)
   8cedc:	e0bfff17 	ldw	r2,-4(fp)
   8cee0:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   8cee4:	e0bffa17 	ldw	r2,-24(fp)
   8cee8:	1005003a 	cmpeq	r2,r2,zero
   8ceec:	1000241e 	bne	r2,zero,8cf80 <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8cef0:	e0bffa17 	ldw	r2,-24(fp)
   8cef4:	10800217 	ldw	r2,8(r2)
   8cef8:	108000cc 	andi	r2,r2,3
   8cefc:	10800060 	cmpeqi	r2,r2,1
   8cf00:	10001a1e 	bne	r2,zero,8cf6c <read+0xdc>
   8cf04:	e0bffa17 	ldw	r2,-24(fp)
   8cf08:	10800017 	ldw	r2,0(r2)
   8cf0c:	10800517 	ldw	r2,20(r2)
   8cf10:	1005003a 	cmpeq	r2,r2,zero
   8cf14:	1000151e 	bne	r2,zero,8cf6c <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8cf18:	e0bffa17 	ldw	r2,-24(fp)
   8cf1c:	10800017 	ldw	r2,0(r2)
   8cf20:	10800517 	ldw	r2,20(r2)
   8cf24:	e17ffc17 	ldw	r5,-16(fp)
   8cf28:	e1bffd17 	ldw	r6,-12(fp)
   8cf2c:	e13ffa17 	ldw	r4,-24(fp)
   8cf30:	103ee83a 	callr	r2
   8cf34:	e0bff915 	stw	r2,-28(fp)
   8cf38:	e0bff917 	ldw	r2,-28(fp)
   8cf3c:	1004403a 	cmpge	r2,r2,zero
   8cf40:	1000071e 	bne	r2,zero,8cf60 <read+0xd0>
        {
          ALT_ERRNO = -rval;
   8cf44:	008cfb00 	call	8cfb0 <alt_get_errno>
   8cf48:	e0fff917 	ldw	r3,-28(fp)
   8cf4c:	00c7c83a 	sub	r3,zero,r3
   8cf50:	10c00015 	stw	r3,0(r2)
          return -1;
   8cf54:	00bfffc4 	movi	r2,-1
   8cf58:	e0bffe15 	stw	r2,-8(fp)
   8cf5c:	00000e06 	br	8cf98 <read+0x108>
        }
        return rval;
   8cf60:	e0bff917 	ldw	r2,-28(fp)
   8cf64:	e0bffe15 	stw	r2,-8(fp)
   8cf68:	00000b06 	br	8cf98 <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8cf6c:	008cfb00 	call	8cfb0 <alt_get_errno>
   8cf70:	1007883a 	mov	r3,r2
   8cf74:	00800344 	movi	r2,13
   8cf78:	18800015 	stw	r2,0(r3)
   8cf7c:	00000406 	br	8cf90 <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8cf80:	008cfb00 	call	8cfb0 <alt_get_errno>
   8cf84:	1007883a 	mov	r3,r2
   8cf88:	00801444 	movi	r2,81
   8cf8c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8cf90:	00bfffc4 	movi	r2,-1
   8cf94:	e0bffe15 	stw	r2,-8(fp)
   8cf98:	e0bffe17 	ldw	r2,-8(fp)
}
   8cf9c:	e037883a 	mov	sp,fp
   8cfa0:	dfc00117 	ldw	ra,4(sp)
   8cfa4:	df000017 	ldw	fp,0(sp)
   8cfa8:	dec00204 	addi	sp,sp,8
   8cfac:	f800283a 	ret

0008cfb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cfb0:	defffd04 	addi	sp,sp,-12
   8cfb4:	dfc00215 	stw	ra,8(sp)
   8cfb8:	df000115 	stw	fp,4(sp)
   8cfbc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8cfc0:	00800274 	movhi	r2,9
   8cfc4:	1084ba04 	addi	r2,r2,4840
   8cfc8:	10800017 	ldw	r2,0(r2)
   8cfcc:	1005003a 	cmpeq	r2,r2,zero
   8cfd0:	1000061e 	bne	r2,zero,8cfec <alt_get_errno+0x3c>
   8cfd4:	00800274 	movhi	r2,9
   8cfd8:	1084ba04 	addi	r2,r2,4840
   8cfdc:	10800017 	ldw	r2,0(r2)
   8cfe0:	103ee83a 	callr	r2
   8cfe4:	e0bfff15 	stw	r2,-4(fp)
   8cfe8:	00000306 	br	8cff8 <alt_get_errno+0x48>
   8cfec:	00800274 	movhi	r2,9
   8cff0:	108bec04 	addi	r2,r2,12208
   8cff4:	e0bfff15 	stw	r2,-4(fp)
   8cff8:	e0bfff17 	ldw	r2,-4(fp)
}
   8cffc:	e037883a 	mov	sp,fp
   8d000:	dfc00117 	ldw	ra,4(sp)
   8d004:	df000017 	ldw	fp,0(sp)
   8d008:	dec00204 	addi	sp,sp,8
   8d00c:	f800283a 	ret

0008d010 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8d010:	defffe04 	addi	sp,sp,-8
   8d014:	df000115 	stw	fp,4(sp)
   8d018:	df000104 	addi	fp,sp,4
   8d01c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   8d020:	e0bfff17 	ldw	r2,-4(fp)
   8d024:	108000d0 	cmplti	r2,r2,3
   8d028:	10000d1e 	bne	r2,zero,8d060 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   8d02c:	e0bfff17 	ldw	r2,-4(fp)
   8d030:	00c00274 	movhi	r3,9
   8d034:	18c03704 	addi	r3,r3,220
   8d038:	10800324 	muli	r2,r2,12
   8d03c:	10c5883a 	add	r2,r2,r3
   8d040:	10800204 	addi	r2,r2,8
   8d044:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8d048:	e0bfff17 	ldw	r2,-4(fp)
   8d04c:	00c00274 	movhi	r3,9
   8d050:	18c03704 	addi	r3,r3,220
   8d054:	10800324 	muli	r2,r2,12
   8d058:	10c5883a 	add	r2,r2,r3
   8d05c:	10000015 	stw	zero,0(r2)
  }
}
   8d060:	e037883a 	mov	sp,fp
   8d064:	df000017 	ldw	fp,0(sp)
   8d068:	dec00104 	addi	sp,sp,4
   8d06c:	f800283a 	ret

0008d070 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8d070:	defff804 	addi	sp,sp,-32
   8d074:	df000715 	stw	fp,28(sp)
   8d078:	df000704 	addi	fp,sp,28
   8d07c:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d080:	0005303a 	rdctl	r2,status
   8d084:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d088:	e0fffb17 	ldw	r3,-20(fp)
   8d08c:	00bfff84 	movi	r2,-2
   8d090:	1884703a 	and	r2,r3,r2
   8d094:	1001703a 	wrctl	status,r2
  
  return context;
   8d098:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8d09c:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8d0a0:	d0a00c17 	ldw	r2,-32720(gp)
   8d0a4:	10c000c4 	addi	r3,r2,3
   8d0a8:	00bfff04 	movi	r2,-4
   8d0ac:	1884703a 	and	r2,r3,r2
   8d0b0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8d0b4:	d0e00c17 	ldw	r3,-32720(gp)
   8d0b8:	e0bffe17 	ldw	r2,-8(fp)
   8d0bc:	1887883a 	add	r3,r3,r2
   8d0c0:	00800434 	movhi	r2,16
   8d0c4:	10800004 	addi	r2,r2,0
   8d0c8:	10c0072e 	bgeu	r2,r3,8d0e8 <sbrk+0x78>
   8d0cc:	e0bffd17 	ldw	r2,-12(fp)
   8d0d0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d0d4:	e0bffa17 	ldw	r2,-24(fp)
   8d0d8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8d0dc:	00bfffc4 	movi	r2,-1
   8d0e0:	e0bfff15 	stw	r2,-4(fp)
   8d0e4:	00000c06 	br	8d118 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   8d0e8:	d0a00c17 	ldw	r2,-32720(gp)
   8d0ec:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   8d0f0:	d0e00c17 	ldw	r3,-32720(gp)
   8d0f4:	e0bffe17 	ldw	r2,-8(fp)
   8d0f8:	1885883a 	add	r2,r3,r2
   8d0fc:	d0a00c15 	stw	r2,-32720(gp)
   8d100:	e0bffd17 	ldw	r2,-12(fp)
   8d104:	e0bff915 	stw	r2,-28(fp)
   8d108:	e0bff917 	ldw	r2,-28(fp)
   8d10c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8d110:	e0bffc17 	ldw	r2,-16(fp)
   8d114:	e0bfff15 	stw	r2,-4(fp)
   8d118:	e0bfff17 	ldw	r2,-4(fp)
} 
   8d11c:	e037883a 	mov	sp,fp
   8d120:	df000017 	ldw	fp,0(sp)
   8d124:	dec00104 	addi	sp,sp,4
   8d128:	f800283a 	ret

0008d12c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8d12c:	defff704 	addi	sp,sp,-36
   8d130:	dfc00815 	stw	ra,32(sp)
   8d134:	df000715 	stw	fp,28(sp)
   8d138:	df000704 	addi	fp,sp,28
   8d13c:	e13ffb15 	stw	r4,-20(fp)
   8d140:	e17ffc15 	stw	r5,-16(fp)
   8d144:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d148:	e0bffb17 	ldw	r2,-20(fp)
   8d14c:	1004803a 	cmplt	r2,r2,zero
   8d150:	1000081e 	bne	r2,zero,8d174 <write+0x48>
   8d154:	e0bffb17 	ldw	r2,-20(fp)
   8d158:	10800324 	muli	r2,r2,12
   8d15c:	1007883a 	mov	r3,r2
   8d160:	00800274 	movhi	r2,9
   8d164:	10803704 	addi	r2,r2,220
   8d168:	1887883a 	add	r3,r3,r2
   8d16c:	e0ffff15 	stw	r3,-4(fp)
   8d170:	00000106 	br	8d178 <write+0x4c>
   8d174:	e03fff15 	stw	zero,-4(fp)
   8d178:	e0bfff17 	ldw	r2,-4(fp)
   8d17c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   8d180:	e0bffa17 	ldw	r2,-24(fp)
   8d184:	1005003a 	cmpeq	r2,r2,zero
   8d188:	1000241e 	bne	r2,zero,8d21c <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8d18c:	e0bffa17 	ldw	r2,-24(fp)
   8d190:	10800217 	ldw	r2,8(r2)
   8d194:	108000cc 	andi	r2,r2,3
   8d198:	1005003a 	cmpeq	r2,r2,zero
   8d19c:	10001a1e 	bne	r2,zero,8d208 <write+0xdc>
   8d1a0:	e0bffa17 	ldw	r2,-24(fp)
   8d1a4:	10800017 	ldw	r2,0(r2)
   8d1a8:	10800617 	ldw	r2,24(r2)
   8d1ac:	1005003a 	cmpeq	r2,r2,zero
   8d1b0:	1000151e 	bne	r2,zero,8d208 <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8d1b4:	e0bffa17 	ldw	r2,-24(fp)
   8d1b8:	10800017 	ldw	r2,0(r2)
   8d1bc:	10800617 	ldw	r2,24(r2)
   8d1c0:	e17ffc17 	ldw	r5,-16(fp)
   8d1c4:	e1bffd17 	ldw	r6,-12(fp)
   8d1c8:	e13ffa17 	ldw	r4,-24(fp)
   8d1cc:	103ee83a 	callr	r2
   8d1d0:	e0bff915 	stw	r2,-28(fp)
   8d1d4:	e0bff917 	ldw	r2,-28(fp)
   8d1d8:	1004403a 	cmpge	r2,r2,zero
   8d1dc:	1000071e 	bne	r2,zero,8d1fc <write+0xd0>
      {
        ALT_ERRNO = -rval;
   8d1e0:	008d24c0 	call	8d24c <alt_get_errno>
   8d1e4:	e0fff917 	ldw	r3,-28(fp)
   8d1e8:	00c7c83a 	sub	r3,zero,r3
   8d1ec:	10c00015 	stw	r3,0(r2)
        return -1;
   8d1f0:	00bfffc4 	movi	r2,-1
   8d1f4:	e0bffe15 	stw	r2,-8(fp)
   8d1f8:	00000e06 	br	8d234 <write+0x108>
      }
      return rval;
   8d1fc:	e0bff917 	ldw	r2,-28(fp)
   8d200:	e0bffe15 	stw	r2,-8(fp)
   8d204:	00000b06 	br	8d234 <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8d208:	008d24c0 	call	8d24c <alt_get_errno>
   8d20c:	1007883a 	mov	r3,r2
   8d210:	00800344 	movi	r2,13
   8d214:	18800015 	stw	r2,0(r3)
   8d218:	00000406 	br	8d22c <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8d21c:	008d24c0 	call	8d24c <alt_get_errno>
   8d220:	1007883a 	mov	r3,r2
   8d224:	00801444 	movi	r2,81
   8d228:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8d22c:	00bfffc4 	movi	r2,-1
   8d230:	e0bffe15 	stw	r2,-8(fp)
   8d234:	e0bffe17 	ldw	r2,-8(fp)
}
   8d238:	e037883a 	mov	sp,fp
   8d23c:	dfc00117 	ldw	ra,4(sp)
   8d240:	df000017 	ldw	fp,0(sp)
   8d244:	dec00204 	addi	sp,sp,8
   8d248:	f800283a 	ret

0008d24c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d24c:	defffd04 	addi	sp,sp,-12
   8d250:	dfc00215 	stw	ra,8(sp)
   8d254:	df000115 	stw	fp,4(sp)
   8d258:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8d25c:	00800274 	movhi	r2,9
   8d260:	1084ba04 	addi	r2,r2,4840
   8d264:	10800017 	ldw	r2,0(r2)
   8d268:	1005003a 	cmpeq	r2,r2,zero
   8d26c:	1000061e 	bne	r2,zero,8d288 <alt_get_errno+0x3c>
   8d270:	00800274 	movhi	r2,9
   8d274:	1084ba04 	addi	r2,r2,4840
   8d278:	10800017 	ldw	r2,0(r2)
   8d27c:	103ee83a 	callr	r2
   8d280:	e0bfff15 	stw	r2,-4(fp)
   8d284:	00000306 	br	8d294 <alt_get_errno+0x48>
   8d288:	00800274 	movhi	r2,9
   8d28c:	108bec04 	addi	r2,r2,12208
   8d290:	e0bfff15 	stw	r2,-4(fp)
   8d294:	e0bfff17 	ldw	r2,-4(fp)
}
   8d298:	e037883a 	mov	sp,fp
   8d29c:	dfc00117 	ldw	ra,4(sp)
   8d2a0:	df000017 	ldw	fp,0(sp)
   8d2a4:	dec00204 	addi	sp,sp,8
   8d2a8:	f800283a 	ret

0008d2ac <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8d2ac:	defffd04 	addi	sp,sp,-12
   8d2b0:	dfc00215 	stw	ra,8(sp)
   8d2b4:	df000115 	stw	fp,4(sp)
   8d2b8:	df000104 	addi	fp,sp,4
   8d2bc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_IRQ_INIT ( CPU_0, cpu_0);
   8d2c0:	008ea1c0 	call	8ea1c <altera_nios2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8d2c4:	00800044 	movi	r2,1
   8d2c8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8d2cc:	e037883a 	mov	sp,fp
   8d2d0:	dfc00117 	ldw	ra,4(sp)
   8d2d4:	df000017 	ldw	fp,0(sp)
   8d2d8:	dec00204 	addi	sp,sp,8
   8d2dc:	f800283a 	ret

0008d2e0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8d2e0:	defffe04 	addi	sp,sp,-8
   8d2e4:	dfc00115 	stw	ra,4(sp)
   8d2e8:	df000015 	stw	fp,0(sp)
   8d2ec:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   8d2f0:	01000274 	movhi	r4,9
   8d2f4:	2100a104 	addi	r4,r4,644
   8d2f8:	000b883a 	mov	r5,zero
   8d2fc:	000d883a 	mov	r6,zero
   8d300:	008d4a40 	call	8d4a4 <altera_avalon_jtag_uart_init>
   8d304:	01000274 	movhi	r4,9
   8d308:	21009704 	addi	r4,r4,604
   8d30c:	008d3240 	call	8d324 <alt_dev_reg>
}
   8d310:	e037883a 	mov	sp,fp
   8d314:	dfc00117 	ldw	ra,4(sp)
   8d318:	df000017 	ldw	fp,0(sp)
   8d31c:	dec00204 	addi	sp,sp,8
   8d320:	f800283a 	ret

0008d324 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8d324:	defffd04 	addi	sp,sp,-12
   8d328:	dfc00215 	stw	ra,8(sp)
   8d32c:	df000115 	stw	fp,4(sp)
   8d330:	df000104 	addi	fp,sp,4
   8d334:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8d338:	e13fff17 	ldw	r4,-4(fp)
   8d33c:	01400274 	movhi	r5,9
   8d340:	2944b704 	addi	r5,r5,4828
   8d344:	008dfa00 	call	8dfa0 <alt_dev_llist_insert>
}
   8d348:	e037883a 	mov	sp,fp
   8d34c:	dfc00117 	ldw	ra,4(sp)
   8d350:	df000017 	ldw	fp,0(sp)
   8d354:	dec00204 	addi	sp,sp,8
   8d358:	f800283a 	ret

0008d35c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8d35c:	defffa04 	addi	sp,sp,-24
   8d360:	dfc00515 	stw	ra,20(sp)
   8d364:	df000415 	stw	fp,16(sp)
   8d368:	df000404 	addi	fp,sp,16
   8d36c:	e13ffd15 	stw	r4,-12(fp)
   8d370:	e17ffe15 	stw	r5,-8(fp)
   8d374:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d378:	e0bffd17 	ldw	r2,-12(fp)
   8d37c:	10800017 	ldw	r2,0(r2)
   8d380:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8d384:	e0bffc17 	ldw	r2,-16(fp)
   8d388:	11000a04 	addi	r4,r2,40
   8d38c:	e0bffd17 	ldw	r2,-12(fp)
   8d390:	11c00217 	ldw	r7,8(r2)
   8d394:	e17ffe17 	ldw	r5,-8(fp)
   8d398:	e1bfff17 	ldw	r6,-4(fp)
   8d39c:	008d9a40 	call	8d9a4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8d3a0:	e037883a 	mov	sp,fp
   8d3a4:	dfc00117 	ldw	ra,4(sp)
   8d3a8:	df000017 	ldw	fp,0(sp)
   8d3ac:	dec00204 	addi	sp,sp,8
   8d3b0:	f800283a 	ret

0008d3b4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8d3b4:	defffa04 	addi	sp,sp,-24
   8d3b8:	dfc00515 	stw	ra,20(sp)
   8d3bc:	df000415 	stw	fp,16(sp)
   8d3c0:	df000404 	addi	fp,sp,16
   8d3c4:	e13ffd15 	stw	r4,-12(fp)
   8d3c8:	e17ffe15 	stw	r5,-8(fp)
   8d3cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d3d0:	e0bffd17 	ldw	r2,-12(fp)
   8d3d4:	10800017 	ldw	r2,0(r2)
   8d3d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8d3dc:	e0bffc17 	ldw	r2,-16(fp)
   8d3e0:	11000a04 	addi	r4,r2,40
   8d3e4:	e0bffd17 	ldw	r2,-12(fp)
   8d3e8:	11c00217 	ldw	r7,8(r2)
   8d3ec:	e17ffe17 	ldw	r5,-8(fp)
   8d3f0:	e1bfff17 	ldw	r6,-4(fp)
   8d3f4:	008dbc80 	call	8dbc8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8d3f8:	e037883a 	mov	sp,fp
   8d3fc:	dfc00117 	ldw	ra,4(sp)
   8d400:	df000017 	ldw	fp,0(sp)
   8d404:	dec00204 	addi	sp,sp,8
   8d408:	f800283a 	ret

0008d40c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8d40c:	defffc04 	addi	sp,sp,-16
   8d410:	dfc00315 	stw	ra,12(sp)
   8d414:	df000215 	stw	fp,8(sp)
   8d418:	df000204 	addi	fp,sp,8
   8d41c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d420:	e0bfff17 	ldw	r2,-4(fp)
   8d424:	10800017 	ldw	r2,0(r2)
   8d428:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8d42c:	e0bffe17 	ldw	r2,-8(fp)
   8d430:	11000a04 	addi	r4,r2,40
   8d434:	e0bfff17 	ldw	r2,-4(fp)
   8d438:	11400217 	ldw	r5,8(r2)
   8d43c:	008d83c0 	call	8d83c <altera_avalon_jtag_uart_close>
}
   8d440:	e037883a 	mov	sp,fp
   8d444:	dfc00117 	ldw	ra,4(sp)
   8d448:	df000017 	ldw	fp,0(sp)
   8d44c:	dec00204 	addi	sp,sp,8
   8d450:	f800283a 	ret

0008d454 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8d454:	defffa04 	addi	sp,sp,-24
   8d458:	dfc00515 	stw	ra,20(sp)
   8d45c:	df000415 	stw	fp,16(sp)
   8d460:	df000404 	addi	fp,sp,16
   8d464:	e13ffd15 	stw	r4,-12(fp)
   8d468:	e17ffe15 	stw	r5,-8(fp)
   8d46c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8d470:	e0bffd17 	ldw	r2,-12(fp)
   8d474:	10800017 	ldw	r2,0(r2)
   8d478:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8d47c:	e0bffc17 	ldw	r2,-16(fp)
   8d480:	11000a04 	addi	r4,r2,40
   8d484:	e17ffe17 	ldw	r5,-8(fp)
   8d488:	e1bfff17 	ldw	r6,-4(fp)
   8d48c:	008d8b00 	call	8d8b0 <altera_avalon_jtag_uart_ioctl>
}
   8d490:	e037883a 	mov	sp,fp
   8d494:	dfc00117 	ldw	ra,4(sp)
   8d498:	df000017 	ldw	fp,0(sp)
   8d49c:	dec00204 	addi	sp,sp,8
   8d4a0:	f800283a 	ret

0008d4a4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8d4a4:	defffa04 	addi	sp,sp,-24
   8d4a8:	dfc00515 	stw	ra,20(sp)
   8d4ac:	df000415 	stw	fp,16(sp)
   8d4b0:	df000404 	addi	fp,sp,16
   8d4b4:	e13ffd15 	stw	r4,-12(fp)
   8d4b8:	e17ffe15 	stw	r5,-8(fp)
   8d4bc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8d4c0:	e0fffd17 	ldw	r3,-12(fp)
   8d4c4:	00800044 	movi	r2,1
   8d4c8:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8d4cc:	e0bffd17 	ldw	r2,-12(fp)
   8d4d0:	10800017 	ldw	r2,0(r2)
   8d4d4:	11000104 	addi	r4,r2,4
   8d4d8:	e0bffd17 	ldw	r2,-12(fp)
   8d4dc:	10800817 	ldw	r2,32(r2)
   8d4e0:	1007883a 	mov	r3,r2
   8d4e4:	2005883a 	mov	r2,r4
   8d4e8:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8d4ec:	e13ffe17 	ldw	r4,-8(fp)
   8d4f0:	e17fff17 	ldw	r5,-4(fp)
   8d4f4:	d8000015 	stw	zero,0(sp)
   8d4f8:	01800274 	movhi	r6,9
   8d4fc:	31b55904 	addi	r6,r6,-10908
   8d500:	e1fffd17 	ldw	r7,-12(fp)
   8d504:	008e1ac0 	call	8e1ac <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8d508:	e0bffd17 	ldw	r2,-12(fp)
   8d50c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8d510:	e0bffd17 	ldw	r2,-12(fp)
   8d514:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8d518:	00800274 	movhi	r2,9
   8d51c:	108bf104 	addi	r2,r2,12228
   8d520:	10800017 	ldw	r2,0(r2)
   8d524:	100b883a 	mov	r5,r2
   8d528:	01800274 	movhi	r6,9
   8d52c:	31b5e304 	addi	r6,r6,-10356
   8d530:	e1fffd17 	ldw	r7,-12(fp)
   8d534:	008de080 	call	8de08 <alt_alarm_start>
   8d538:	1004403a 	cmpge	r2,r2,zero
   8d53c:	1000041e 	bne	r2,zero,8d550 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8d540:	e0fffd17 	ldw	r3,-12(fp)
   8d544:	00a00034 	movhi	r2,32768
   8d548:	10bfffc4 	addi	r2,r2,-1
   8d54c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8d550:	e037883a 	mov	sp,fp
   8d554:	dfc00117 	ldw	ra,4(sp)
   8d558:	df000017 	ldw	fp,0(sp)
   8d55c:	dec00204 	addi	sp,sp,8
   8d560:	f800283a 	ret

0008d564 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8d564:	defff804 	addi	sp,sp,-32
   8d568:	df000715 	stw	fp,28(sp)
   8d56c:	df000704 	addi	fp,sp,28
   8d570:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8d574:	e0bfff17 	ldw	r2,-4(fp)
   8d578:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   8d57c:	e0bffe17 	ldw	r2,-8(fp)
   8d580:	10800017 	ldw	r2,0(r2)
   8d584:	e0bffd15 	stw	r2,-12(fp)
   8d588:	00000006 	br	8d58c <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8d58c:	e0bffd17 	ldw	r2,-12(fp)
   8d590:	10800104 	addi	r2,r2,4
   8d594:	10800037 	ldwio	r2,0(r2)
   8d598:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8d59c:	e0bffc17 	ldw	r2,-16(fp)
   8d5a0:	1080c00c 	andi	r2,r2,768
   8d5a4:	1005003a 	cmpeq	r2,r2,zero
   8d5a8:	1000741e 	bne	r2,zero,8d77c <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8d5ac:	e0bffc17 	ldw	r2,-16(fp)
   8d5b0:	1080400c 	andi	r2,r2,256
   8d5b4:	1005003a 	cmpeq	r2,r2,zero
   8d5b8:	1000351e 	bne	r2,zero,8d690 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8d5bc:	00800074 	movhi	r2,1
   8d5c0:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8d5c4:	e0bffe17 	ldw	r2,-8(fp)
   8d5c8:	10800a17 	ldw	r2,40(r2)
   8d5cc:	10800044 	addi	r2,r2,1
   8d5d0:	1081ffcc 	andi	r2,r2,2047
   8d5d4:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   8d5d8:	e0bffe17 	ldw	r2,-8(fp)
   8d5dc:	10c00b17 	ldw	r3,44(r2)
   8d5e0:	e0bffa17 	ldw	r2,-24(fp)
   8d5e4:	18801626 	beq	r3,r2,8d640 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8d5e8:	e0bffd17 	ldw	r2,-12(fp)
   8d5ec:	10800037 	ldwio	r2,0(r2)
   8d5f0:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8d5f4:	e0bffb17 	ldw	r2,-20(fp)
   8d5f8:	10a0000c 	andi	r2,r2,32768
   8d5fc:	1005003a 	cmpeq	r2,r2,zero
   8d600:	10000f1e 	bne	r2,zero,8d640 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8d604:	e0bffe17 	ldw	r2,-8(fp)
   8d608:	10c00a17 	ldw	r3,40(r2)
   8d60c:	e0bffb17 	ldw	r2,-20(fp)
   8d610:	1009883a 	mov	r4,r2
   8d614:	e0bffe17 	ldw	r2,-8(fp)
   8d618:	1885883a 	add	r2,r3,r2
   8d61c:	10800e04 	addi	r2,r2,56
   8d620:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8d624:	e0bffe17 	ldw	r2,-8(fp)
   8d628:	10800a17 	ldw	r2,40(r2)
   8d62c:	10800044 	addi	r2,r2,1
   8d630:	10c1ffcc 	andi	r3,r2,2047
   8d634:	e0bffe17 	ldw	r2,-8(fp)
   8d638:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8d63c:	003fe106 	br	8d5c4 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8d640:	e0bffb17 	ldw	r2,-20(fp)
   8d644:	10bfffec 	andhi	r2,r2,65535
   8d648:	1005003a 	cmpeq	r2,r2,zero
   8d64c:	1000101e 	bne	r2,zero,8d690 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8d650:	e0bffe17 	ldw	r2,-8(fp)
   8d654:	10c00817 	ldw	r3,32(r2)
   8d658:	00bfff84 	movi	r2,-2
   8d65c:	1886703a 	and	r3,r3,r2
   8d660:	e0bffe17 	ldw	r2,-8(fp)
   8d664:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8d668:	e0bffd17 	ldw	r2,-12(fp)
   8d66c:	11000104 	addi	r4,r2,4
   8d670:	e0bffe17 	ldw	r2,-8(fp)
   8d674:	10800817 	ldw	r2,32(r2)
   8d678:	1007883a 	mov	r3,r2
   8d67c:	2005883a 	mov	r2,r4
   8d680:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8d684:	e0bffd17 	ldw	r2,-12(fp)
   8d688:	10800104 	addi	r2,r2,4
   8d68c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8d690:	e0bffc17 	ldw	r2,-16(fp)
   8d694:	1080800c 	andi	r2,r2,512
   8d698:	1005003a 	cmpeq	r2,r2,zero
   8d69c:	103fbb1e 	bne	r2,zero,8d58c <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8d6a0:	e0bffc17 	ldw	r2,-16(fp)
   8d6a4:	10bfffec 	andhi	r2,r2,65535
   8d6a8:	1004d43a 	srli	r2,r2,16
   8d6ac:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8d6b0:	00001506 	br	8d708 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8d6b4:	e13ffd17 	ldw	r4,-12(fp)
   8d6b8:	e0bffe17 	ldw	r2,-8(fp)
   8d6bc:	10c00d17 	ldw	r3,52(r2)
   8d6c0:	e0bffe17 	ldw	r2,-8(fp)
   8d6c4:	1885883a 	add	r2,r3,r2
   8d6c8:	10820e04 	addi	r2,r2,2104
   8d6cc:	10800003 	ldbu	r2,0(r2)
   8d6d0:	10c03fcc 	andi	r3,r2,255
   8d6d4:	18c0201c 	xori	r3,r3,128
   8d6d8:	18ffe004 	addi	r3,r3,-128
   8d6dc:	2005883a 	mov	r2,r4
   8d6e0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8d6e4:	e0bffe17 	ldw	r2,-8(fp)
   8d6e8:	10800d17 	ldw	r2,52(r2)
   8d6ec:	10800044 	addi	r2,r2,1
   8d6f0:	10c1ffcc 	andi	r3,r2,2047
   8d6f4:	e0bffe17 	ldw	r2,-8(fp)
   8d6f8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8d6fc:	e0bff917 	ldw	r2,-28(fp)
   8d700:	10bfffc4 	addi	r2,r2,-1
   8d704:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8d708:	e0bff917 	ldw	r2,-28(fp)
   8d70c:	1005003a 	cmpeq	r2,r2,zero
   8d710:	1000051e 	bne	r2,zero,8d728 <altera_avalon_jtag_uart_irq+0x1c4>
   8d714:	e0bffe17 	ldw	r2,-8(fp)
   8d718:	10c00d17 	ldw	r3,52(r2)
   8d71c:	e0bffe17 	ldw	r2,-8(fp)
   8d720:	10800c17 	ldw	r2,48(r2)
   8d724:	18bfe31e 	bne	r3,r2,8d6b4 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8d728:	e0bff917 	ldw	r2,-28(fp)
   8d72c:	1005003a 	cmpeq	r2,r2,zero
   8d730:	103f961e 	bne	r2,zero,8d58c <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8d734:	e0bffe17 	ldw	r2,-8(fp)
   8d738:	10c00817 	ldw	r3,32(r2)
   8d73c:	00bfff44 	movi	r2,-3
   8d740:	1886703a 	and	r3,r3,r2
   8d744:	e0bffe17 	ldw	r2,-8(fp)
   8d748:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8d74c:	e0bffe17 	ldw	r2,-8(fp)
   8d750:	10800017 	ldw	r2,0(r2)
   8d754:	11000104 	addi	r4,r2,4
   8d758:	e0bffe17 	ldw	r2,-8(fp)
   8d75c:	10800817 	ldw	r2,32(r2)
   8d760:	1007883a 	mov	r3,r2
   8d764:	2005883a 	mov	r2,r4
   8d768:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8d76c:	e0bffd17 	ldw	r2,-12(fp)
   8d770:	10800104 	addi	r2,r2,4
   8d774:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8d778:	003f8406 	br	8d58c <altera_avalon_jtag_uart_irq+0x28>
}
   8d77c:	e037883a 	mov	sp,fp
   8d780:	df000017 	ldw	fp,0(sp)
   8d784:	dec00104 	addi	sp,sp,4
   8d788:	f800283a 	ret

0008d78c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8d78c:	defffc04 	addi	sp,sp,-16
   8d790:	df000315 	stw	fp,12(sp)
   8d794:	df000304 	addi	fp,sp,12
   8d798:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8d79c:	e0bfff17 	ldw	r2,-4(fp)
   8d7a0:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8d7a4:	e0bffe17 	ldw	r2,-8(fp)
   8d7a8:	10800017 	ldw	r2,0(r2)
   8d7ac:	10800104 	addi	r2,r2,4
   8d7b0:	10800037 	ldwio	r2,0(r2)
   8d7b4:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8d7b8:	e0bffd17 	ldw	r2,-12(fp)
   8d7bc:	1081000c 	andi	r2,r2,1024
   8d7c0:	1005003a 	cmpeq	r2,r2,zero
   8d7c4:	10000c1e 	bne	r2,zero,8d7f8 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8d7c8:	e0bffe17 	ldw	r2,-8(fp)
   8d7cc:	10800017 	ldw	r2,0(r2)
   8d7d0:	11000104 	addi	r4,r2,4
   8d7d4:	e0bffe17 	ldw	r2,-8(fp)
   8d7d8:	10800817 	ldw	r2,32(r2)
   8d7dc:	10810014 	ori	r2,r2,1024
   8d7e0:	1007883a 	mov	r3,r2
   8d7e4:	2005883a 	mov	r2,r4
   8d7e8:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   8d7ec:	e0bffe17 	ldw	r2,-8(fp)
   8d7f0:	10000915 	stw	zero,36(r2)
   8d7f4:	00000a06 	br	8d820 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8d7f8:	e0bffe17 	ldw	r2,-8(fp)
   8d7fc:	10c00917 	ldw	r3,36(r2)
   8d800:	00a00034 	movhi	r2,32768
   8d804:	10bfff04 	addi	r2,r2,-4
   8d808:	10c00536 	bltu	r2,r3,8d820 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   8d80c:	e0bffe17 	ldw	r2,-8(fp)
   8d810:	10800917 	ldw	r2,36(r2)
   8d814:	10c00044 	addi	r3,r2,1
   8d818:	e0bffe17 	ldw	r2,-8(fp)
   8d81c:	10c00915 	stw	r3,36(r2)
   8d820:	00800274 	movhi	r2,9
   8d824:	108bf104 	addi	r2,r2,12228
   8d828:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8d82c:	e037883a 	mov	sp,fp
   8d830:	df000017 	ldw	fp,0(sp)
   8d834:	dec00104 	addi	sp,sp,4
   8d838:	f800283a 	ret

0008d83c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8d83c:	defffc04 	addi	sp,sp,-16
   8d840:	df000315 	stw	fp,12(sp)
   8d844:	df000304 	addi	fp,sp,12
   8d848:	e13ffd15 	stw	r4,-12(fp)
   8d84c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8d850:	00000706 	br	8d870 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   8d854:	e0bffe17 	ldw	r2,-8(fp)
   8d858:	1090000c 	andi	r2,r2,16384
   8d85c:	1005003a 	cmpeq	r2,r2,zero
   8d860:	1000031e 	bne	r2,zero,8d870 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   8d864:	00bffd44 	movi	r2,-11
   8d868:	e0bfff15 	stw	r2,-4(fp)
   8d86c:	00000b06 	br	8d89c <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8d870:	e0bffd17 	ldw	r2,-12(fp)
   8d874:	10c00d17 	ldw	r3,52(r2)
   8d878:	e0bffd17 	ldw	r2,-12(fp)
   8d87c:	10800c17 	ldw	r2,48(r2)
   8d880:	18800526 	beq	r3,r2,8d898 <altera_avalon_jtag_uart_close+0x5c>
   8d884:	e0bffd17 	ldw	r2,-12(fp)
   8d888:	10c00917 	ldw	r3,36(r2)
   8d88c:	e0bffd17 	ldw	r2,-12(fp)
   8d890:	10800117 	ldw	r2,4(r2)
   8d894:	18bfef36 	bltu	r3,r2,8d854 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8d898:	e03fff15 	stw	zero,-4(fp)
   8d89c:	e0bfff17 	ldw	r2,-4(fp)
}
   8d8a0:	e037883a 	mov	sp,fp
   8d8a4:	df000017 	ldw	fp,0(sp)
   8d8a8:	dec00104 	addi	sp,sp,4
   8d8ac:	f800283a 	ret

0008d8b0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8d8b0:	defff804 	addi	sp,sp,-32
   8d8b4:	df000715 	stw	fp,28(sp)
   8d8b8:	df000704 	addi	fp,sp,28
   8d8bc:	e13ffb15 	stw	r4,-20(fp)
   8d8c0:	e17ffc15 	stw	r5,-16(fp)
   8d8c4:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   8d8c8:	00bff9c4 	movi	r2,-25
   8d8cc:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   8d8d0:	e0bffc17 	ldw	r2,-16(fp)
   8d8d4:	e0bfff15 	stw	r2,-4(fp)
   8d8d8:	e0ffff17 	ldw	r3,-4(fp)
   8d8dc:	189a8060 	cmpeqi	r2,r3,27137
   8d8e0:	1000041e 	bne	r2,zero,8d8f4 <altera_avalon_jtag_uart_ioctl+0x44>
   8d8e4:	e0ffff17 	ldw	r3,-4(fp)
   8d8e8:	189a80a0 	cmpeqi	r2,r3,27138
   8d8ec:	10001b1e 	bne	r2,zero,8d95c <altera_avalon_jtag_uart_ioctl+0xac>
   8d8f0:	00002706 	br	8d990 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8d8f4:	e0bffb17 	ldw	r2,-20(fp)
   8d8f8:	10c00117 	ldw	r3,4(r2)
   8d8fc:	00a00034 	movhi	r2,32768
   8d900:	10bfffc4 	addi	r2,r2,-1
   8d904:	18802226 	beq	r3,r2,8d990 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   8d908:	e0bffd17 	ldw	r2,-12(fp)
   8d90c:	10800017 	ldw	r2,0(r2)
   8d910:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8d914:	e0bff917 	ldw	r2,-28(fp)
   8d918:	10800090 	cmplti	r2,r2,2
   8d91c:	1000071e 	bne	r2,zero,8d93c <altera_avalon_jtag_uart_ioctl+0x8c>
   8d920:	e0fff917 	ldw	r3,-28(fp)
   8d924:	00a00034 	movhi	r2,32768
   8d928:	10bfffc4 	addi	r2,r2,-1
   8d92c:	18800326 	beq	r3,r2,8d93c <altera_avalon_jtag_uart_ioctl+0x8c>
   8d930:	e0bff917 	ldw	r2,-28(fp)
   8d934:	e0bffe15 	stw	r2,-8(fp)
   8d938:	00000306 	br	8d948 <altera_avalon_jtag_uart_ioctl+0x98>
   8d93c:	00e00034 	movhi	r3,32768
   8d940:	18ffff84 	addi	r3,r3,-2
   8d944:	e0fffe15 	stw	r3,-8(fp)
   8d948:	e0bffb17 	ldw	r2,-20(fp)
   8d94c:	e0fffe17 	ldw	r3,-8(fp)
   8d950:	10c00115 	stw	r3,4(r2)
      rc = 0;
   8d954:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   8d958:	00000d06 	br	8d990 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8d95c:	e0bffb17 	ldw	r2,-20(fp)
   8d960:	10c00117 	ldw	r3,4(r2)
   8d964:	00a00034 	movhi	r2,32768
   8d968:	10bfffc4 	addi	r2,r2,-1
   8d96c:	18800826 	beq	r3,r2,8d990 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8d970:	e13ffd17 	ldw	r4,-12(fp)
   8d974:	e0bffb17 	ldw	r2,-20(fp)
   8d978:	10c00917 	ldw	r3,36(r2)
   8d97c:	e0bffb17 	ldw	r2,-20(fp)
   8d980:	10800117 	ldw	r2,4(r2)
   8d984:	1885803a 	cmpltu	r2,r3,r2
   8d988:	20800015 	stw	r2,0(r4)
      rc = 0;
   8d98c:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   8d990:	e0bffa17 	ldw	r2,-24(fp)
}
   8d994:	e037883a 	mov	sp,fp
   8d998:	df000017 	ldw	fp,0(sp)
   8d99c:	dec00104 	addi	sp,sp,4
   8d9a0:	f800283a 	ret

0008d9a4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8d9a4:	defff204 	addi	sp,sp,-56
   8d9a8:	dfc00d15 	stw	ra,52(sp)
   8d9ac:	df000c15 	stw	fp,48(sp)
   8d9b0:	df000c04 	addi	fp,sp,48
   8d9b4:	e13ffb15 	stw	r4,-20(fp)
   8d9b8:	e17ffc15 	stw	r5,-16(fp)
   8d9bc:	e1bffd15 	stw	r6,-12(fp)
   8d9c0:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   8d9c4:	e0bffc17 	ldw	r2,-16(fp)
   8d9c8:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8d9cc:	00004806 	br	8daf0 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8d9d0:	e0bffb17 	ldw	r2,-20(fp)
   8d9d4:	10800a17 	ldw	r2,40(r2)
   8d9d8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8d9dc:	e0bffb17 	ldw	r2,-20(fp)
   8d9e0:	10800b17 	ldw	r2,44(r2)
   8d9e4:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   8d9e8:	e0fff717 	ldw	r3,-36(fp)
   8d9ec:	e0bff617 	ldw	r2,-40(fp)
   8d9f0:	18800536 	bltu	r3,r2,8da08 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8d9f4:	e0bff717 	ldw	r2,-36(fp)
   8d9f8:	e0fff617 	ldw	r3,-40(fp)
   8d9fc:	10c5c83a 	sub	r2,r2,r3
   8da00:	e0bff815 	stw	r2,-32(fp)
   8da04:	00000406 	br	8da18 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8da08:	00820004 	movi	r2,2048
   8da0c:	e0fff617 	ldw	r3,-40(fp)
   8da10:	10c5c83a 	sub	r2,r2,r3
   8da14:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   8da18:	e0bff817 	ldw	r2,-32(fp)
   8da1c:	1005003a 	cmpeq	r2,r2,zero
   8da20:	10001f1e 	bne	r2,zero,8daa0 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   8da24:	e0fffd17 	ldw	r3,-12(fp)
   8da28:	e0bff817 	ldw	r2,-32(fp)
   8da2c:	1880022e 	bgeu	r3,r2,8da38 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   8da30:	e0bffd17 	ldw	r2,-12(fp)
   8da34:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8da38:	e0bffb17 	ldw	r2,-20(fp)
   8da3c:	10c00e04 	addi	r3,r2,56
   8da40:	e0bff617 	ldw	r2,-40(fp)
   8da44:	1887883a 	add	r3,r3,r2
   8da48:	e0bffa17 	ldw	r2,-24(fp)
   8da4c:	1009883a 	mov	r4,r2
   8da50:	180b883a 	mov	r5,r3
   8da54:	e1bff817 	ldw	r6,-32(fp)
   8da58:	00897540 	call	89754 <memcpy>
      ptr   += n;
   8da5c:	e0fff817 	ldw	r3,-32(fp)
   8da60:	e0bffa17 	ldw	r2,-24(fp)
   8da64:	10c5883a 	add	r2,r2,r3
   8da68:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   8da6c:	e0fffd17 	ldw	r3,-12(fp)
   8da70:	e0bff817 	ldw	r2,-32(fp)
   8da74:	1885c83a 	sub	r2,r3,r2
   8da78:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8da7c:	e0fff617 	ldw	r3,-40(fp)
   8da80:	e0bff817 	ldw	r2,-32(fp)
   8da84:	1885883a 	add	r2,r3,r2
   8da88:	10c1ffcc 	andi	r3,r2,2047
   8da8c:	e0bffb17 	ldw	r2,-20(fp)
   8da90:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8da94:	e0bffd17 	ldw	r2,-12(fp)
   8da98:	10800048 	cmpgei	r2,r2,1
   8da9c:	103fcc1e 	bne	r2,zero,8d9d0 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   8daa0:	e0fffa17 	ldw	r3,-24(fp)
   8daa4:	e0bffc17 	ldw	r2,-16(fp)
   8daa8:	1880141e 	bne	r3,r2,8dafc <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8daac:	e0bffe17 	ldw	r2,-8(fp)
   8dab0:	1090000c 	andi	r2,r2,16384
   8dab4:	1004c03a 	cmpne	r2,r2,zero
   8dab8:	1000101e 	bne	r2,zero,8dafc <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8dabc:	e0bffb17 	ldw	r2,-20(fp)
   8dac0:	10c00a17 	ldw	r3,40(r2)
   8dac4:	e0bff717 	ldw	r2,-36(fp)
   8dac8:	1880051e 	bne	r3,r2,8dae0 <altera_avalon_jtag_uart_read+0x13c>
   8dacc:	e0bffb17 	ldw	r2,-20(fp)
   8dad0:	10c00917 	ldw	r3,36(r2)
   8dad4:	e0bffb17 	ldw	r2,-20(fp)
   8dad8:	10800117 	ldw	r2,4(r2)
   8dadc:	18bff736 	bltu	r3,r2,8dabc <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8dae0:	e0bffb17 	ldw	r2,-20(fp)
   8dae4:	10c00a17 	ldw	r3,40(r2)
   8dae8:	e0bff717 	ldw	r2,-36(fp)
   8daec:	18800326 	beq	r3,r2,8dafc <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8daf0:	e0bffd17 	ldw	r2,-12(fp)
   8daf4:	10800048 	cmpgei	r2,r2,1
   8daf8:	103fb51e 	bne	r2,zero,8d9d0 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8dafc:	e0fffa17 	ldw	r3,-24(fp)
   8db00:	e0bffc17 	ldw	r2,-16(fp)
   8db04:	18801926 	beq	r3,r2,8db6c <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8db08:	0005303a 	rdctl	r2,status
   8db0c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8db10:	e0fff517 	ldw	r3,-44(fp)
   8db14:	00bfff84 	movi	r2,-2
   8db18:	1884703a 	and	r2,r3,r2
   8db1c:	1001703a 	wrctl	status,r2
  
  return context;
   8db20:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8db24:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8db28:	e0bffb17 	ldw	r2,-20(fp)
   8db2c:	10800817 	ldw	r2,32(r2)
   8db30:	10c00054 	ori	r3,r2,1
   8db34:	e0bffb17 	ldw	r2,-20(fp)
   8db38:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8db3c:	e0bffb17 	ldw	r2,-20(fp)
   8db40:	10800017 	ldw	r2,0(r2)
   8db44:	11000104 	addi	r4,r2,4
   8db48:	e0bffb17 	ldw	r2,-20(fp)
   8db4c:	10800817 	ldw	r2,32(r2)
   8db50:	1007883a 	mov	r3,r2
   8db54:	2005883a 	mov	r2,r4
   8db58:	10c00035 	stwio	r3,0(r2)
   8db5c:	e0bff917 	ldw	r2,-28(fp)
   8db60:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8db64:	e0bff417 	ldw	r2,-48(fp)
   8db68:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8db6c:	e0fffa17 	ldw	r3,-24(fp)
   8db70:	e0bffc17 	ldw	r2,-16(fp)
   8db74:	18800526 	beq	r3,r2,8db8c <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   8db78:	e0fffa17 	ldw	r3,-24(fp)
   8db7c:	e0bffc17 	ldw	r2,-16(fp)
   8db80:	1887c83a 	sub	r3,r3,r2
   8db84:	e0ffff15 	stw	r3,-4(fp)
   8db88:	00000906 	br	8dbb0 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   8db8c:	e0bffe17 	ldw	r2,-8(fp)
   8db90:	1090000c 	andi	r2,r2,16384
   8db94:	1005003a 	cmpeq	r2,r2,zero
   8db98:	1000031e 	bne	r2,zero,8dba8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   8db9c:	00bffd44 	movi	r2,-11
   8dba0:	e0bfff15 	stw	r2,-4(fp)
   8dba4:	00000206 	br	8dbb0 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   8dba8:	00bffec4 	movi	r2,-5
   8dbac:	e0bfff15 	stw	r2,-4(fp)
   8dbb0:	e0bfff17 	ldw	r2,-4(fp)
}
   8dbb4:	e037883a 	mov	sp,fp
   8dbb8:	dfc00117 	ldw	ra,4(sp)
   8dbbc:	df000017 	ldw	fp,0(sp)
   8dbc0:	dec00204 	addi	sp,sp,8
   8dbc4:	f800283a 	ret

0008dbc8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8dbc8:	defff204 	addi	sp,sp,-56
   8dbcc:	dfc00d15 	stw	ra,52(sp)
   8dbd0:	df000c15 	stw	fp,48(sp)
   8dbd4:	df000c04 	addi	fp,sp,48
   8dbd8:	e13ffb15 	stw	r4,-20(fp)
   8dbdc:	e17ffc15 	stw	r5,-16(fp)
   8dbe0:	e1bffd15 	stw	r6,-12(fp)
   8dbe4:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8dbe8:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8dbec:	e0bffc17 	ldw	r2,-16(fp)
   8dbf0:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8dbf4:	00003a06 	br	8dce0 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8dbf8:	e0bffb17 	ldw	r2,-20(fp)
   8dbfc:	10800c17 	ldw	r2,48(r2)
   8dc00:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   8dc04:	e0bffb17 	ldw	r2,-20(fp)
   8dc08:	10800d17 	ldw	r2,52(r2)
   8dc0c:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   8dc10:	e0fffa17 	ldw	r3,-24(fp)
   8dc14:	e0bff917 	ldw	r2,-28(fp)
   8dc18:	1880062e 	bgeu	r3,r2,8dc34 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   8dc1c:	e0fff917 	ldw	r3,-28(fp)
   8dc20:	e0bffa17 	ldw	r2,-24(fp)
   8dc24:	1885c83a 	sub	r2,r3,r2
   8dc28:	10bfffc4 	addi	r2,r2,-1
   8dc2c:	e0bff815 	stw	r2,-32(fp)
   8dc30:	00000c06 	br	8dc64 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   8dc34:	e0bff917 	ldw	r2,-28(fp)
   8dc38:	1005003a 	cmpeq	r2,r2,zero
   8dc3c:	1000051e 	bne	r2,zero,8dc54 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8dc40:	00820004 	movi	r2,2048
   8dc44:	e0fffa17 	ldw	r3,-24(fp)
   8dc48:	10c5c83a 	sub	r2,r2,r3
   8dc4c:	e0bff815 	stw	r2,-32(fp)
   8dc50:	00000406 	br	8dc64 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8dc54:	0081ffc4 	movi	r2,2047
   8dc58:	e0fffa17 	ldw	r3,-24(fp)
   8dc5c:	10c5c83a 	sub	r2,r2,r3
   8dc60:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   8dc64:	e0bff817 	ldw	r2,-32(fp)
   8dc68:	1005003a 	cmpeq	r2,r2,zero
   8dc6c:	10001f1e 	bne	r2,zero,8dcec <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   8dc70:	e0fffd17 	ldw	r3,-12(fp)
   8dc74:	e0bff817 	ldw	r2,-32(fp)
   8dc78:	1880022e 	bgeu	r3,r2,8dc84 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   8dc7c:	e0bffd17 	ldw	r2,-12(fp)
   8dc80:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8dc84:	e0bffb17 	ldw	r2,-20(fp)
   8dc88:	10c20e04 	addi	r3,r2,2104
   8dc8c:	e0bffa17 	ldw	r2,-24(fp)
   8dc90:	1885883a 	add	r2,r3,r2
   8dc94:	e0fffc17 	ldw	r3,-16(fp)
   8dc98:	1009883a 	mov	r4,r2
   8dc9c:	180b883a 	mov	r5,r3
   8dca0:	e1bff817 	ldw	r6,-32(fp)
   8dca4:	00897540 	call	89754 <memcpy>
      ptr   += n;
   8dca8:	e0fff817 	ldw	r3,-32(fp)
   8dcac:	e0bffc17 	ldw	r2,-16(fp)
   8dcb0:	10c5883a 	add	r2,r2,r3
   8dcb4:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   8dcb8:	e0fffd17 	ldw	r3,-12(fp)
   8dcbc:	e0bff817 	ldw	r2,-32(fp)
   8dcc0:	1885c83a 	sub	r2,r3,r2
   8dcc4:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8dcc8:	e0fffa17 	ldw	r3,-24(fp)
   8dccc:	e0bff817 	ldw	r2,-32(fp)
   8dcd0:	1885883a 	add	r2,r3,r2
   8dcd4:	10c1ffcc 	andi	r3,r2,2047
   8dcd8:	e0bffb17 	ldw	r2,-20(fp)
   8dcdc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8dce0:	e0bffd17 	ldw	r2,-12(fp)
   8dce4:	10800048 	cmpgei	r2,r2,1
   8dce8:	103fc31e 	bne	r2,zero,8dbf8 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8dcec:	0005303a 	rdctl	r2,status
   8dcf0:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8dcf4:	e0fff517 	ldw	r3,-44(fp)
   8dcf8:	00bfff84 	movi	r2,-2
   8dcfc:	1884703a 	and	r2,r3,r2
   8dd00:	1001703a 	wrctl	status,r2
  
  return context;
   8dd04:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8dd08:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8dd0c:	e0bffb17 	ldw	r2,-20(fp)
   8dd10:	10800817 	ldw	r2,32(r2)
   8dd14:	10c00094 	ori	r3,r2,2
   8dd18:	e0bffb17 	ldw	r2,-20(fp)
   8dd1c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8dd20:	e0bffb17 	ldw	r2,-20(fp)
   8dd24:	10800017 	ldw	r2,0(r2)
   8dd28:	11000104 	addi	r4,r2,4
   8dd2c:	e0bffb17 	ldw	r2,-20(fp)
   8dd30:	10800817 	ldw	r2,32(r2)
   8dd34:	1007883a 	mov	r3,r2
   8dd38:	2005883a 	mov	r2,r4
   8dd3c:	10c00035 	stwio	r3,0(r2)
   8dd40:	e0bff717 	ldw	r2,-36(fp)
   8dd44:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8dd48:	e0bff417 	ldw	r2,-48(fp)
   8dd4c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8dd50:	e0bffd17 	ldw	r2,-12(fp)
   8dd54:	10800050 	cmplti	r2,r2,1
   8dd58:	1000111e 	bne	r2,zero,8dda0 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   8dd5c:	e0bffe17 	ldw	r2,-8(fp)
   8dd60:	1090000c 	andi	r2,r2,16384
   8dd64:	1004c03a 	cmpne	r2,r2,zero
   8dd68:	1000101e 	bne	r2,zero,8ddac <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8dd6c:	e0bffb17 	ldw	r2,-20(fp)
   8dd70:	10c00d17 	ldw	r3,52(r2)
   8dd74:	e0bff917 	ldw	r2,-28(fp)
   8dd78:	1880051e 	bne	r3,r2,8dd90 <altera_avalon_jtag_uart_write+0x1c8>
   8dd7c:	e0bffb17 	ldw	r2,-20(fp)
   8dd80:	10c00917 	ldw	r3,36(r2)
   8dd84:	e0bffb17 	ldw	r2,-20(fp)
   8dd88:	10800117 	ldw	r2,4(r2)
   8dd8c:	18bff736 	bltu	r3,r2,8dd6c <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   8dd90:	e0bffb17 	ldw	r2,-20(fp)
   8dd94:	10c00d17 	ldw	r3,52(r2)
   8dd98:	e0bff917 	ldw	r2,-28(fp)
   8dd9c:	18800326 	beq	r3,r2,8ddac <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
   8dda0:	e0bffd17 	ldw	r2,-12(fp)
   8dda4:	10800048 	cmpgei	r2,r2,1
   8dda8:	103fcd1e 	bne	r2,zero,8dce0 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8ddac:	e0fffc17 	ldw	r3,-16(fp)
   8ddb0:	e0bff617 	ldw	r2,-40(fp)
   8ddb4:	18800526 	beq	r3,r2,8ddcc <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   8ddb8:	e0fffc17 	ldw	r3,-16(fp)
   8ddbc:	e0bff617 	ldw	r2,-40(fp)
   8ddc0:	1887c83a 	sub	r3,r3,r2
   8ddc4:	e0ffff15 	stw	r3,-4(fp)
   8ddc8:	00000906 	br	8ddf0 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   8ddcc:	e0bffe17 	ldw	r2,-8(fp)
   8ddd0:	1090000c 	andi	r2,r2,16384
   8ddd4:	1005003a 	cmpeq	r2,r2,zero
   8ddd8:	1000031e 	bne	r2,zero,8dde8 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   8dddc:	00bffd44 	movi	r2,-11
   8dde0:	e0bfff15 	stw	r2,-4(fp)
   8dde4:	00000206 	br	8ddf0 <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
   8dde8:	00bffec4 	movi	r2,-5
   8ddec:	e0bfff15 	stw	r2,-4(fp)
   8ddf0:	e0bfff17 	ldw	r2,-4(fp)
}
   8ddf4:	e037883a 	mov	sp,fp
   8ddf8:	dfc00117 	ldw	ra,4(sp)
   8ddfc:	df000017 	ldw	fp,0(sp)
   8de00:	dec00204 	addi	sp,sp,8
   8de04:	f800283a 	ret

0008de08 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8de08:	defff404 	addi	sp,sp,-48
   8de0c:	df000b15 	stw	fp,44(sp)
   8de10:	df000b04 	addi	fp,sp,44
   8de14:	e13ffb15 	stw	r4,-20(fp)
   8de18:	e17ffc15 	stw	r5,-16(fp)
   8de1c:	e1bffd15 	stw	r6,-12(fp)
   8de20:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8de24:	e03ff915 	stw	zero,-28(fp)
   8de28:	00800274 	movhi	r2,9
   8de2c:	108bf104 	addi	r2,r2,12228
   8de30:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   8de34:	1005003a 	cmpeq	r2,r2,zero
   8de38:	1000411e 	bne	r2,zero,8df40 <alt_alarm_start+0x138>
  {
    if (alarm)
   8de3c:	e0bffb17 	ldw	r2,-20(fp)
   8de40:	1005003a 	cmpeq	r2,r2,zero
   8de44:	10003b1e 	bne	r2,zero,8df34 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   8de48:	e0fffb17 	ldw	r3,-20(fp)
   8de4c:	e0bffd17 	ldw	r2,-12(fp)
   8de50:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   8de54:	e0fffb17 	ldw	r3,-20(fp)
   8de58:	e0bffe17 	ldw	r2,-8(fp)
   8de5c:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8de60:	0005303a 	rdctl	r2,status
   8de64:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8de68:	e0fff817 	ldw	r3,-32(fp)
   8de6c:	00bfff84 	movi	r2,-2
   8de70:	1884703a 	and	r2,r3,r2
   8de74:	1001703a 	wrctl	status,r2
  
  return context;
   8de78:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   8de7c:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8de80:	00800274 	movhi	r2,9
   8de84:	108bf204 	addi	r2,r2,12232
   8de88:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   8de8c:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8de90:	e0fffc17 	ldw	r3,-16(fp)
   8de94:	e0bff917 	ldw	r2,-28(fp)
   8de98:	1885883a 	add	r2,r3,r2
   8de9c:	10c00044 	addi	r3,r2,1
   8dea0:	e0bffb17 	ldw	r2,-20(fp)
   8dea4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8dea8:	e0bffb17 	ldw	r2,-20(fp)
   8deac:	10c00217 	ldw	r3,8(r2)
   8deb0:	e0bff917 	ldw	r2,-28(fp)
   8deb4:	1880042e 	bgeu	r3,r2,8dec8 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   8deb8:	e0fffb17 	ldw	r3,-20(fp)
   8debc:	00800044 	movi	r2,1
   8dec0:	18800405 	stb	r2,16(r3)
   8dec4:	00000206 	br	8ded0 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   8dec8:	e0bffb17 	ldw	r2,-20(fp)
   8decc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8ded0:	e0fffb17 	ldw	r3,-20(fp)
   8ded4:	00800274 	movhi	r2,9
   8ded8:	1084bd04 	addi	r2,r2,4852
   8dedc:	e0bff615 	stw	r2,-40(fp)
   8dee0:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8dee4:	e0fff717 	ldw	r3,-36(fp)
   8dee8:	e0bff617 	ldw	r2,-40(fp)
   8deec:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   8def0:	e0bff617 	ldw	r2,-40(fp)
   8def4:	10c00017 	ldw	r3,0(r2)
   8def8:	e0bff717 	ldw	r2,-36(fp)
   8defc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8df00:	e0bff617 	ldw	r2,-40(fp)
   8df04:	10c00017 	ldw	r3,0(r2)
   8df08:	e0bff717 	ldw	r2,-36(fp)
   8df0c:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   8df10:	e0fff617 	ldw	r3,-40(fp)
   8df14:	e0bff717 	ldw	r2,-36(fp)
   8df18:	18800015 	stw	r2,0(r3)
   8df1c:	e0bffa17 	ldw	r2,-24(fp)
   8df20:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8df24:	e0bff517 	ldw	r2,-44(fp)
   8df28:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8df2c:	e03fff15 	stw	zero,-4(fp)
   8df30:	00000506 	br	8df48 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   8df34:	00bffa84 	movi	r2,-22
   8df38:	e0bfff15 	stw	r2,-4(fp)
   8df3c:	00000206 	br	8df48 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   8df40:	00bfde84 	movi	r2,-134
   8df44:	e0bfff15 	stw	r2,-4(fp)
   8df48:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   8df4c:	e037883a 	mov	sp,fp
   8df50:	df000017 	ldw	fp,0(sp)
   8df54:	dec00104 	addi	sp,sp,4
   8df58:	f800283a 	ret

0008df5c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8df5c:	defffe04 	addi	sp,sp,-8
   8df60:	df000115 	stw	fp,4(sp)
   8df64:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   8df68:	e03fff15 	stw	zero,-4(fp)
   8df6c:	00000506 	br	8df84 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   8df70:	e0bfff17 	ldw	r2,-4(fp)
   8df74:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   8df78:	e0bfff17 	ldw	r2,-4(fp)
   8df7c:	10800804 	addi	r2,r2,32
   8df80:	e0bfff15 	stw	r2,-4(fp)
   8df84:	e0bfff17 	ldw	r2,-4(fp)
   8df88:	10820030 	cmpltui	r2,r2,2048
   8df8c:	103ff81e 	bne	r2,zero,8df70 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8df90:	e037883a 	mov	sp,fp
   8df94:	df000017 	ldw	fp,0(sp)
   8df98:	dec00104 	addi	sp,sp,4
   8df9c:	f800283a 	ret

0008dfa0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8dfa0:	defff904 	addi	sp,sp,-28
   8dfa4:	dfc00615 	stw	ra,24(sp)
   8dfa8:	df000515 	stw	fp,20(sp)
   8dfac:	df000504 	addi	fp,sp,20
   8dfb0:	e13ffd15 	stw	r4,-12(fp)
   8dfb4:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8dfb8:	e0bffd17 	ldw	r2,-12(fp)
   8dfbc:	1005003a 	cmpeq	r2,r2,zero
   8dfc0:	1000041e 	bne	r2,zero,8dfd4 <alt_dev_llist_insert+0x34>
   8dfc4:	e0bffd17 	ldw	r2,-12(fp)
   8dfc8:	10800217 	ldw	r2,8(r2)
   8dfcc:	1004c03a 	cmpne	r2,r2,zero
   8dfd0:	1000071e 	bne	r2,zero,8dff0 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   8dfd4:	008e0540 	call	8e054 <alt_get_errno>
   8dfd8:	1007883a 	mov	r3,r2
   8dfdc:	00800584 	movi	r2,22
   8dfe0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   8dfe4:	00bffa84 	movi	r2,-22
   8dfe8:	e0bfff15 	stw	r2,-4(fp)
   8dfec:	00001306 	br	8e03c <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8dff0:	e0fffd17 	ldw	r3,-12(fp)
   8dff4:	e0bffe17 	ldw	r2,-8(fp)
   8dff8:	e0bffb15 	stw	r2,-20(fp)
   8dffc:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e000:	e0fffc17 	ldw	r3,-16(fp)
   8e004:	e0bffb17 	ldw	r2,-20(fp)
   8e008:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   8e00c:	e0bffb17 	ldw	r2,-20(fp)
   8e010:	10c00017 	ldw	r3,0(r2)
   8e014:	e0bffc17 	ldw	r2,-16(fp)
   8e018:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8e01c:	e0bffb17 	ldw	r2,-20(fp)
   8e020:	10c00017 	ldw	r3,0(r2)
   8e024:	e0bffc17 	ldw	r2,-16(fp)
   8e028:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   8e02c:	e0fffb17 	ldw	r3,-20(fp)
   8e030:	e0bffc17 	ldw	r2,-16(fp)
   8e034:	18800015 	stw	r2,0(r3)

  return 0;  
   8e038:	e03fff15 	stw	zero,-4(fp)
   8e03c:	e0bfff17 	ldw	r2,-4(fp)
}
   8e040:	e037883a 	mov	sp,fp
   8e044:	dfc00117 	ldw	ra,4(sp)
   8e048:	df000017 	ldw	fp,0(sp)
   8e04c:	dec00204 	addi	sp,sp,8
   8e050:	f800283a 	ret

0008e054 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8e054:	defffd04 	addi	sp,sp,-12
   8e058:	dfc00215 	stw	ra,8(sp)
   8e05c:	df000115 	stw	fp,4(sp)
   8e060:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8e064:	00800274 	movhi	r2,9
   8e068:	1084ba04 	addi	r2,r2,4840
   8e06c:	10800017 	ldw	r2,0(r2)
   8e070:	1005003a 	cmpeq	r2,r2,zero
   8e074:	1000061e 	bne	r2,zero,8e090 <alt_get_errno+0x3c>
   8e078:	00800274 	movhi	r2,9
   8e07c:	1084ba04 	addi	r2,r2,4840
   8e080:	10800017 	ldw	r2,0(r2)
   8e084:	103ee83a 	callr	r2
   8e088:	e0bfff15 	stw	r2,-4(fp)
   8e08c:	00000306 	br	8e09c <alt_get_errno+0x48>
   8e090:	00800274 	movhi	r2,9
   8e094:	108bec04 	addi	r2,r2,12208
   8e098:	e0bfff15 	stw	r2,-4(fp)
   8e09c:	e0bfff17 	ldw	r2,-4(fp)
}
   8e0a0:	e037883a 	mov	sp,fp
   8e0a4:	dfc00117 	ldw	ra,4(sp)
   8e0a8:	df000017 	ldw	fp,0(sp)
   8e0ac:	dec00204 	addi	sp,sp,8
   8e0b0:	f800283a 	ret

0008e0b4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8e0b4:	defffd04 	addi	sp,sp,-12
   8e0b8:	dfc00215 	stw	ra,8(sp)
   8e0bc:	df000115 	stw	fp,4(sp)
   8e0c0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8e0c4:	00bfff04 	movi	r2,-4
   8e0c8:	00c00274 	movhi	r3,9
   8e0cc:	18fc5104 	addi	r3,r3,-3772
   8e0d0:	1885883a 	add	r2,r3,r2
   8e0d4:	e0bfff15 	stw	r2,-4(fp)
   8e0d8:	00000606 	br	8e0f4 <_do_ctors+0x40>
        (*ctor) (); 
   8e0dc:	e0bfff17 	ldw	r2,-4(fp)
   8e0e0:	10800017 	ldw	r2,0(r2)
   8e0e4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8e0e8:	e0bfff17 	ldw	r2,-4(fp)
   8e0ec:	10bfff04 	addi	r2,r2,-4
   8e0f0:	e0bfff15 	stw	r2,-4(fp)
   8e0f4:	e0ffff17 	ldw	r3,-4(fp)
   8e0f8:	00800274 	movhi	r2,9
   8e0fc:	10bc5004 	addi	r2,r2,-3776
   8e100:	18bff62e 	bgeu	r3,r2,8e0dc <_do_ctors+0x28>
        (*ctor) (); 
}
   8e104:	e037883a 	mov	sp,fp
   8e108:	dfc00117 	ldw	ra,4(sp)
   8e10c:	df000017 	ldw	fp,0(sp)
   8e110:	dec00204 	addi	sp,sp,8
   8e114:	f800283a 	ret

0008e118 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8e118:	defffd04 	addi	sp,sp,-12
   8e11c:	dfc00215 	stw	ra,8(sp)
   8e120:	df000115 	stw	fp,4(sp)
   8e124:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8e128:	00bfff04 	movi	r2,-4
   8e12c:	00c00274 	movhi	r3,9
   8e130:	18fc5104 	addi	r3,r3,-3772
   8e134:	1885883a 	add	r2,r3,r2
   8e138:	e0bfff15 	stw	r2,-4(fp)
   8e13c:	00000606 	br	8e158 <_do_dtors+0x40>
        (*dtor) (); 
   8e140:	e0bfff17 	ldw	r2,-4(fp)
   8e144:	10800017 	ldw	r2,0(r2)
   8e148:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8e14c:	e0bfff17 	ldw	r2,-4(fp)
   8e150:	10bfff04 	addi	r2,r2,-4
   8e154:	e0bfff15 	stw	r2,-4(fp)
   8e158:	e0ffff17 	ldw	r3,-4(fp)
   8e15c:	00800274 	movhi	r2,9
   8e160:	10bc5104 	addi	r2,r2,-3772
   8e164:	18bff62e 	bgeu	r3,r2,8e140 <_do_dtors+0x28>
        (*dtor) (); 
}
   8e168:	e037883a 	mov	sp,fp
   8e16c:	dfc00117 	ldw	ra,4(sp)
   8e170:	df000017 	ldw	fp,0(sp)
   8e174:	dec00204 	addi	sp,sp,8
   8e178:	f800283a 	ret

0008e17c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8e17c:	defffe04 	addi	sp,sp,-8
   8e180:	dfc00115 	stw	ra,4(sp)
   8e184:	df000015 	stw	fp,0(sp)
   8e188:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   8e18c:	0009883a 	mov	r4,zero
   8e190:	01440004 	movi	r5,4096
   8e194:	008eca80 	call	8eca8 <alt_icache_flush>
#endif
}
   8e198:	e037883a 	mov	sp,fp
   8e19c:	dfc00117 	ldw	ra,4(sp)
   8e1a0:	df000017 	ldw	fp,0(sp)
   8e1a4:	dec00204 	addi	sp,sp,8
   8e1a8:	f800283a 	ret

0008e1ac <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8e1ac:	defff904 	addi	sp,sp,-28
   8e1b0:	dfc00615 	stw	ra,24(sp)
   8e1b4:	df000515 	stw	fp,20(sp)
   8e1b8:	df000504 	addi	fp,sp,20
   8e1bc:	e13ffc15 	stw	r4,-16(fp)
   8e1c0:	e17ffd15 	stw	r5,-12(fp)
   8e1c4:	e1bffe15 	stw	r6,-8(fp)
   8e1c8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8e1cc:	e0800217 	ldw	r2,8(fp)
   8e1d0:	d8800015 	stw	r2,0(sp)
   8e1d4:	e13ffc17 	ldw	r4,-16(fp)
   8e1d8:	e17ffd17 	ldw	r5,-12(fp)
   8e1dc:	e1bffe17 	ldw	r6,-8(fp)
   8e1e0:	e1ffff17 	ldw	r7,-4(fp)
   8e1e4:	008e3800 	call	8e380 <alt_iic_isr_register>
}  
   8e1e8:	e037883a 	mov	sp,fp
   8e1ec:	dfc00117 	ldw	ra,4(sp)
   8e1f0:	df000017 	ldw	fp,0(sp)
   8e1f4:	dec00204 	addi	sp,sp,8
   8e1f8:	f800283a 	ret

0008e1fc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8e1fc:	defff904 	addi	sp,sp,-28
   8e200:	df000615 	stw	fp,24(sp)
   8e204:	df000604 	addi	fp,sp,24
   8e208:	e13ffe15 	stw	r4,-8(fp)
   8e20c:	e17fff15 	stw	r5,-4(fp)
   8e210:	e0bfff17 	ldw	r2,-4(fp)
   8e214:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e218:	0005303a 	rdctl	r2,status
   8e21c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e220:	e0fffb17 	ldw	r3,-20(fp)
   8e224:	00bfff84 	movi	r2,-2
   8e228:	1884703a 	and	r2,r3,r2
   8e22c:	1001703a 	wrctl	status,r2
  
  return context;
   8e230:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8e234:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   8e238:	e0fffc17 	ldw	r3,-16(fp)
   8e23c:	00800044 	movi	r2,1
   8e240:	10c4983a 	sll	r2,r2,r3
   8e244:	1007883a 	mov	r3,r2
   8e248:	00800274 	movhi	r2,9
   8e24c:	108bf004 	addi	r2,r2,12224
   8e250:	10800017 	ldw	r2,0(r2)
   8e254:	1886b03a 	or	r3,r3,r2
   8e258:	00800274 	movhi	r2,9
   8e25c:	108bf004 	addi	r2,r2,12224
   8e260:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8e264:	00800274 	movhi	r2,9
   8e268:	108bf004 	addi	r2,r2,12224
   8e26c:	10800017 	ldw	r2,0(r2)
   8e270:	100170fa 	wrctl	ienable,r2
   8e274:	e0bffd17 	ldw	r2,-12(fp)
   8e278:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e27c:	e0bffa17 	ldw	r2,-24(fp)
   8e280:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8e284:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   8e288:	e037883a 	mov	sp,fp
   8e28c:	df000017 	ldw	fp,0(sp)
   8e290:	dec00104 	addi	sp,sp,4
   8e294:	f800283a 	ret

0008e298 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8e298:	defff904 	addi	sp,sp,-28
   8e29c:	df000615 	stw	fp,24(sp)
   8e2a0:	df000604 	addi	fp,sp,24
   8e2a4:	e13ffe15 	stw	r4,-8(fp)
   8e2a8:	e17fff15 	stw	r5,-4(fp)
   8e2ac:	e0bfff17 	ldw	r2,-4(fp)
   8e2b0:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e2b4:	0005303a 	rdctl	r2,status
   8e2b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e2bc:	e0fffb17 	ldw	r3,-20(fp)
   8e2c0:	00bfff84 	movi	r2,-2
   8e2c4:	1884703a 	and	r2,r3,r2
   8e2c8:	1001703a 	wrctl	status,r2
  
  return context;
   8e2cc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8e2d0:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   8e2d4:	e0fffc17 	ldw	r3,-16(fp)
   8e2d8:	00800044 	movi	r2,1
   8e2dc:	10c4983a 	sll	r2,r2,r3
   8e2e0:	0084303a 	nor	r2,zero,r2
   8e2e4:	1007883a 	mov	r3,r2
   8e2e8:	00800274 	movhi	r2,9
   8e2ec:	108bf004 	addi	r2,r2,12224
   8e2f0:	10800017 	ldw	r2,0(r2)
   8e2f4:	1886703a 	and	r3,r3,r2
   8e2f8:	00800274 	movhi	r2,9
   8e2fc:	108bf004 	addi	r2,r2,12224
   8e300:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8e304:	00800274 	movhi	r2,9
   8e308:	108bf004 	addi	r2,r2,12224
   8e30c:	10800017 	ldw	r2,0(r2)
   8e310:	100170fa 	wrctl	ienable,r2
   8e314:	e0bffd17 	ldw	r2,-12(fp)
   8e318:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e31c:	e0bffa17 	ldw	r2,-24(fp)
   8e320:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8e324:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   8e328:	e037883a 	mov	sp,fp
   8e32c:	df000017 	ldw	fp,0(sp)
   8e330:	dec00104 	addi	sp,sp,4
   8e334:	f800283a 	ret

0008e338 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8e338:	defffc04 	addi	sp,sp,-16
   8e33c:	df000315 	stw	fp,12(sp)
   8e340:	df000304 	addi	fp,sp,12
   8e344:	e13ffe15 	stw	r4,-8(fp)
   8e348:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8e34c:	000530fa 	rdctl	r2,ienable
   8e350:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8e354:	e0ffff17 	ldw	r3,-4(fp)
   8e358:	00800044 	movi	r2,1
   8e35c:	10c4983a 	sll	r2,r2,r3
   8e360:	1007883a 	mov	r3,r2
   8e364:	e0bffd17 	ldw	r2,-12(fp)
   8e368:	1884703a 	and	r2,r3,r2
   8e36c:	1004c03a 	cmpne	r2,r2,zero
}
   8e370:	e037883a 	mov	sp,fp
   8e374:	df000017 	ldw	fp,0(sp)
   8e378:	dec00104 	addi	sp,sp,4
   8e37c:	f800283a 	ret

0008e380 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8e380:	defff404 	addi	sp,sp,-48
   8e384:	dfc00b15 	stw	ra,44(sp)
   8e388:	df000a15 	stw	fp,40(sp)
   8e38c:	df000a04 	addi	fp,sp,40
   8e390:	e13ffb15 	stw	r4,-20(fp)
   8e394:	e17ffc15 	stw	r5,-16(fp)
   8e398:	e1bffd15 	stw	r6,-12(fp)
   8e39c:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   8e3a0:	00bffa84 	movi	r2,-22
   8e3a4:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8e3a8:	e0bffc17 	ldw	r2,-16(fp)
   8e3ac:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8e3b0:	e0bff917 	ldw	r2,-28(fp)
   8e3b4:	10800808 	cmpgei	r2,r2,32
   8e3b8:	1000291e 	bne	r2,zero,8e460 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e3bc:	0005303a 	rdctl	r2,status
   8e3c0:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e3c4:	e0fff717 	ldw	r3,-36(fp)
   8e3c8:	00bfff84 	movi	r2,-2
   8e3cc:	1884703a 	and	r2,r3,r2
   8e3d0:	1001703a 	wrctl	status,r2
  
  return context;
   8e3d4:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8e3d8:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   8e3dc:	e0bff917 	ldw	r2,-28(fp)
   8e3e0:	00c002b4 	movhi	r3,10
   8e3e4:	18c75d04 	addi	r3,r3,7540
   8e3e8:	100490fa 	slli	r2,r2,3
   8e3ec:	10c7883a 	add	r3,r2,r3
   8e3f0:	e0bffd17 	ldw	r2,-12(fp)
   8e3f4:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   8e3f8:	e0bff917 	ldw	r2,-28(fp)
   8e3fc:	00c002b4 	movhi	r3,10
   8e400:	18c75d04 	addi	r3,r3,7540
   8e404:	100490fa 	slli	r2,r2,3
   8e408:	10c5883a 	add	r2,r2,r3
   8e40c:	10c00104 	addi	r3,r2,4
   8e410:	e0bffe17 	ldw	r2,-8(fp)
   8e414:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8e418:	e0bffd17 	ldw	r2,-12(fp)
   8e41c:	1005003a 	cmpeq	r2,r2,zero
   8e420:	1000051e 	bne	r2,zero,8e438 <alt_iic_isr_register+0xb8>
   8e424:	e17ff917 	ldw	r5,-28(fp)
   8e428:	e13ffb17 	ldw	r4,-20(fp)
   8e42c:	008e1fc0 	call	8e1fc <alt_ic_irq_enable>
   8e430:	e0bfff15 	stw	r2,-4(fp)
   8e434:	00000406 	br	8e448 <alt_iic_isr_register+0xc8>
   8e438:	e17ff917 	ldw	r5,-28(fp)
   8e43c:	e13ffb17 	ldw	r4,-20(fp)
   8e440:	008e2980 	call	8e298 <alt_ic_irq_disable>
   8e444:	e0bfff15 	stw	r2,-4(fp)
   8e448:	e0bfff17 	ldw	r2,-4(fp)
   8e44c:	e0bffa15 	stw	r2,-24(fp)
   8e450:	e0bff817 	ldw	r2,-32(fp)
   8e454:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e458:	e0bff617 	ldw	r2,-40(fp)
   8e45c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8e460:	e0bffa17 	ldw	r2,-24(fp)
}
   8e464:	e037883a 	mov	sp,fp
   8e468:	dfc00117 	ldw	ra,4(sp)
   8e46c:	df000017 	ldw	fp,0(sp)
   8e470:	dec00204 	addi	sp,sp,8
   8e474:	f800283a 	ret

0008e478 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8e478:	defff904 	addi	sp,sp,-28
   8e47c:	dfc00615 	stw	ra,24(sp)
   8e480:	df000515 	stw	fp,20(sp)
   8e484:	df000504 	addi	fp,sp,20
   8e488:	e13ffc15 	stw	r4,-16(fp)
   8e48c:	e17ffd15 	stw	r5,-12(fp)
   8e490:	e1bffe15 	stw	r6,-8(fp)
   8e494:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   8e498:	e13ffd17 	ldw	r4,-12(fp)
   8e49c:	e17ffe17 	ldw	r5,-8(fp)
   8e4a0:	e1bfff17 	ldw	r6,-4(fp)
   8e4a4:	008e6900 	call	8e690 <open>
   8e4a8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   8e4ac:	e0bffb17 	ldw	r2,-20(fp)
   8e4b0:	1004803a 	cmplt	r2,r2,zero
   8e4b4:	10001c1e 	bne	r2,zero,8e528 <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
   8e4b8:	e0bffb17 	ldw	r2,-20(fp)
   8e4bc:	00c00274 	movhi	r3,9
   8e4c0:	18c03704 	addi	r3,r3,220
   8e4c4:	10800324 	muli	r2,r2,12
   8e4c8:	10c5883a 	add	r2,r2,r3
   8e4cc:	10c00017 	ldw	r3,0(r2)
   8e4d0:	e0bffc17 	ldw	r2,-16(fp)
   8e4d4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8e4d8:	e0bffb17 	ldw	r2,-20(fp)
   8e4dc:	00c00274 	movhi	r3,9
   8e4e0:	18c03704 	addi	r3,r3,220
   8e4e4:	10800324 	muli	r2,r2,12
   8e4e8:	10c5883a 	add	r2,r2,r3
   8e4ec:	10800104 	addi	r2,r2,4
   8e4f0:	10c00017 	ldw	r3,0(r2)
   8e4f4:	e0bffc17 	ldw	r2,-16(fp)
   8e4f8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8e4fc:	e0bffb17 	ldw	r2,-20(fp)
   8e500:	00c00274 	movhi	r3,9
   8e504:	18c03704 	addi	r3,r3,220
   8e508:	10800324 	muli	r2,r2,12
   8e50c:	10c5883a 	add	r2,r2,r3
   8e510:	10800204 	addi	r2,r2,8
   8e514:	10c00017 	ldw	r3,0(r2)
   8e518:	e0bffc17 	ldw	r2,-16(fp)
   8e51c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8e520:	e13ffb17 	ldw	r4,-20(fp)
   8e524:	008d0100 	call	8d010 <alt_release_fd>
  }
} 
   8e528:	e037883a 	mov	sp,fp
   8e52c:	dfc00117 	ldw	ra,4(sp)
   8e530:	df000017 	ldw	fp,0(sp)
   8e534:	dec00204 	addi	sp,sp,8
   8e538:	f800283a 	ret

0008e53c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8e53c:	defffb04 	addi	sp,sp,-20
   8e540:	dfc00415 	stw	ra,16(sp)
   8e544:	df000315 	stw	fp,12(sp)
   8e548:	df000304 	addi	fp,sp,12
   8e54c:	e13ffd15 	stw	r4,-12(fp)
   8e550:	e17ffe15 	stw	r5,-8(fp)
   8e554:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8e558:	01000274 	movhi	r4,9
   8e55c:	21003a04 	addi	r4,r4,232
   8e560:	e17ffd17 	ldw	r5,-12(fp)
   8e564:	01800044 	movi	r6,1
   8e568:	01c07fc4 	movi	r7,511
   8e56c:	008e4780 	call	8e478 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8e570:	01000274 	movhi	r4,9
   8e574:	21003704 	addi	r4,r4,220
   8e578:	e17ffe17 	ldw	r5,-8(fp)
   8e57c:	000d883a 	mov	r6,zero
   8e580:	01c07fc4 	movi	r7,511
   8e584:	008e4780 	call	8e478 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8e588:	01000274 	movhi	r4,9
   8e58c:	21003d04 	addi	r4,r4,244
   8e590:	e17fff17 	ldw	r5,-4(fp)
   8e594:	01800044 	movi	r6,1
   8e598:	01c07fc4 	movi	r7,511
   8e59c:	008e4780 	call	8e478 <alt_open_fd>
}  
   8e5a0:	e037883a 	mov	sp,fp
   8e5a4:	dfc00117 	ldw	ra,4(sp)
   8e5a8:	df000017 	ldw	fp,0(sp)
   8e5ac:	dec00204 	addi	sp,sp,8
   8e5b0:	f800283a 	ret

0008e5b4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8e5b4:	defffc04 	addi	sp,sp,-16
   8e5b8:	df000315 	stw	fp,12(sp)
   8e5bc:	df000304 	addi	fp,sp,12
   8e5c0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8e5c4:	e0bffe17 	ldw	r2,-8(fp)
   8e5c8:	10800217 	ldw	r2,8(r2)
   8e5cc:	10d00034 	orhi	r3,r2,16384
   8e5d0:	e0bffe17 	ldw	r2,-8(fp)
   8e5d4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8e5d8:	e03ffd15 	stw	zero,-12(fp)
   8e5dc:	00002006 	br	8e660 <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8e5e0:	e0bffd17 	ldw	r2,-12(fp)
   8e5e4:	00c00274 	movhi	r3,9
   8e5e8:	18c03704 	addi	r3,r3,220
   8e5ec:	10800324 	muli	r2,r2,12
   8e5f0:	10c5883a 	add	r2,r2,r3
   8e5f4:	10c00017 	ldw	r3,0(r2)
   8e5f8:	e0bffe17 	ldw	r2,-8(fp)
   8e5fc:	10800017 	ldw	r2,0(r2)
   8e600:	1880141e 	bne	r3,r2,8e654 <alt_file_locked+0xa0>
   8e604:	e0bffd17 	ldw	r2,-12(fp)
   8e608:	00c00274 	movhi	r3,9
   8e60c:	18c03704 	addi	r3,r3,220
   8e610:	10800324 	muli	r2,r2,12
   8e614:	10c5883a 	add	r2,r2,r3
   8e618:	10800204 	addi	r2,r2,8
   8e61c:	10800017 	ldw	r2,0(r2)
   8e620:	1004403a 	cmpge	r2,r2,zero
   8e624:	10000b1e 	bne	r2,zero,8e654 <alt_file_locked+0xa0>
   8e628:	e0bffd17 	ldw	r2,-12(fp)
   8e62c:	10800324 	muli	r2,r2,12
   8e630:	1007883a 	mov	r3,r2
   8e634:	00800274 	movhi	r2,9
   8e638:	10803704 	addi	r2,r2,220
   8e63c:	1887883a 	add	r3,r3,r2
   8e640:	e0bffe17 	ldw	r2,-8(fp)
   8e644:	18800326 	beq	r3,r2,8e654 <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8e648:	00bffcc4 	movi	r2,-13
   8e64c:	e0bfff15 	stw	r2,-4(fp)
   8e650:	00000a06 	br	8e67c <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8e654:	e0bffd17 	ldw	r2,-12(fp)
   8e658:	10800044 	addi	r2,r2,1
   8e65c:	e0bffd15 	stw	r2,-12(fp)
   8e660:	00800274 	movhi	r2,9
   8e664:	1084b904 	addi	r2,r2,4836
   8e668:	10800017 	ldw	r2,0(r2)
   8e66c:	1007883a 	mov	r3,r2
   8e670:	e0bffd17 	ldw	r2,-12(fp)
   8e674:	18bfda2e 	bgeu	r3,r2,8e5e0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8e678:	e03fff15 	stw	zero,-4(fp)
   8e67c:	e0bfff17 	ldw	r2,-4(fp)
}
   8e680:	e037883a 	mov	sp,fp
   8e684:	df000017 	ldw	fp,0(sp)
   8e688:	dec00104 	addi	sp,sp,4
   8e68c:	f800283a 	ret

0008e690 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8e690:	defff404 	addi	sp,sp,-48
   8e694:	dfc00b15 	stw	ra,44(sp)
   8e698:	df000a15 	stw	fp,40(sp)
   8e69c:	df000a04 	addi	fp,sp,40
   8e6a0:	e13ffb15 	stw	r4,-20(fp)
   8e6a4:	e17ffc15 	stw	r5,-16(fp)
   8e6a8:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8e6ac:	00bfffc4 	movi	r2,-1
   8e6b0:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   8e6b4:	00bffb44 	movi	r2,-19
   8e6b8:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   8e6bc:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8e6c0:	e13ffb17 	ldw	r4,-20(fp)
   8e6c4:	01400274 	movhi	r5,9
   8e6c8:	2944b704 	addi	r5,r5,4828
   8e6cc:	008ea3c0 	call	8ea3c <alt_find_dev>
   8e6d0:	e0bffa15 	stw	r2,-24(fp)
   8e6d4:	e0bffa17 	ldw	r2,-24(fp)
   8e6d8:	1004c03a 	cmpne	r2,r2,zero
   8e6dc:	1000051e 	bne	r2,zero,8e6f4 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8e6e0:	e13ffb17 	ldw	r4,-20(fp)
   8e6e4:	008ead00 	call	8ead0 <alt_find_file>
   8e6e8:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   8e6ec:	00800044 	movi	r2,1
   8e6f0:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8e6f4:	e0bffa17 	ldw	r2,-24(fp)
   8e6f8:	1005003a 	cmpeq	r2,r2,zero
   8e6fc:	1000301e 	bne	r2,zero,8e7c0 <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8e700:	e13ffa17 	ldw	r4,-24(fp)
   8e704:	008ebf00 	call	8ebf0 <alt_get_fd>
   8e708:	e0bff815 	stw	r2,-32(fp)
   8e70c:	e0bff817 	ldw	r2,-32(fp)
   8e710:	1004403a 	cmpge	r2,r2,zero
   8e714:	1000031e 	bne	r2,zero,8e724 <open+0x94>
    {
      status = index;
   8e718:	e0bff817 	ldw	r2,-32(fp)
   8e71c:	e0bff715 	stw	r2,-36(fp)
   8e720:	00002906 	br	8e7c8 <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
   8e724:	e0bff817 	ldw	r2,-32(fp)
   8e728:	10800324 	muli	r2,r2,12
   8e72c:	1007883a 	mov	r3,r2
   8e730:	00800274 	movhi	r2,9
   8e734:	10803704 	addi	r2,r2,220
   8e738:	1885883a 	add	r2,r3,r2
   8e73c:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8e740:	e0fffc17 	ldw	r3,-16(fp)
   8e744:	00900034 	movhi	r2,16384
   8e748:	10bfffc4 	addi	r2,r2,-1
   8e74c:	1886703a 	and	r3,r3,r2
   8e750:	e0bff917 	ldw	r2,-28(fp)
   8e754:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8e758:	e0bff617 	ldw	r2,-40(fp)
   8e75c:	1004c03a 	cmpne	r2,r2,zero
   8e760:	1000061e 	bne	r2,zero,8e77c <open+0xec>
   8e764:	e13ff917 	ldw	r4,-28(fp)
   8e768:	008e5b40 	call	8e5b4 <alt_file_locked>
   8e76c:	e0bff715 	stw	r2,-36(fp)
   8e770:	e0bff717 	ldw	r2,-36(fp)
   8e774:	1004803a 	cmplt	r2,r2,zero
   8e778:	1000131e 	bne	r2,zero,8e7c8 <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8e77c:	e0bffa17 	ldw	r2,-24(fp)
   8e780:	10800317 	ldw	r2,12(r2)
   8e784:	1005003a 	cmpeq	r2,r2,zero
   8e788:	1000091e 	bne	r2,zero,8e7b0 <open+0x120>
   8e78c:	e0bffa17 	ldw	r2,-24(fp)
   8e790:	10800317 	ldw	r2,12(r2)
   8e794:	e13ff917 	ldw	r4,-28(fp)
   8e798:	e17ffb17 	ldw	r5,-20(fp)
   8e79c:	e1bffc17 	ldw	r6,-16(fp)
   8e7a0:	e1fffd17 	ldw	r7,-12(fp)
   8e7a4:	103ee83a 	callr	r2
   8e7a8:	e0bfff15 	stw	r2,-4(fp)
   8e7ac:	00000106 	br	8e7b4 <open+0x124>
   8e7b0:	e03fff15 	stw	zero,-4(fp)
   8e7b4:	e0bfff17 	ldw	r2,-4(fp)
   8e7b8:	e0bff715 	stw	r2,-36(fp)
   8e7bc:	00000206 	br	8e7c8 <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8e7c0:	00bffb44 	movi	r2,-19
   8e7c4:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8e7c8:	e0bff717 	ldw	r2,-36(fp)
   8e7cc:	1004403a 	cmpge	r2,r2,zero
   8e7d0:	1000091e 	bne	r2,zero,8e7f8 <open+0x168>
  {
    alt_release_fd (index);  
   8e7d4:	e13ff817 	ldw	r4,-32(fp)
   8e7d8:	008d0100 	call	8d010 <alt_release_fd>
    ALT_ERRNO = -status;
   8e7dc:	008e8180 	call	8e818 <alt_get_errno>
   8e7e0:	e0fff717 	ldw	r3,-36(fp)
   8e7e4:	00c7c83a 	sub	r3,zero,r3
   8e7e8:	10c00015 	stw	r3,0(r2)
    return -1;
   8e7ec:	00bfffc4 	movi	r2,-1
   8e7f0:	e0bffe15 	stw	r2,-8(fp)
   8e7f4:	00000206 	br	8e800 <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
   8e7f8:	e0bff817 	ldw	r2,-32(fp)
   8e7fc:	e0bffe15 	stw	r2,-8(fp)
   8e800:	e0bffe17 	ldw	r2,-8(fp)
}
   8e804:	e037883a 	mov	sp,fp
   8e808:	dfc00117 	ldw	ra,4(sp)
   8e80c:	df000017 	ldw	fp,0(sp)
   8e810:	dec00204 	addi	sp,sp,8
   8e814:	f800283a 	ret

0008e818 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8e818:	defffd04 	addi	sp,sp,-12
   8e81c:	dfc00215 	stw	ra,8(sp)
   8e820:	df000115 	stw	fp,4(sp)
   8e824:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   8e828:	00800274 	movhi	r2,9
   8e82c:	1084ba04 	addi	r2,r2,4840
   8e830:	10800017 	ldw	r2,0(r2)
   8e834:	1005003a 	cmpeq	r2,r2,zero
   8e838:	1000061e 	bne	r2,zero,8e854 <alt_get_errno+0x3c>
   8e83c:	00800274 	movhi	r2,9
   8e840:	1084ba04 	addi	r2,r2,4840
   8e844:	10800017 	ldw	r2,0(r2)
   8e848:	103ee83a 	callr	r2
   8e84c:	e0bfff15 	stw	r2,-4(fp)
   8e850:	00000306 	br	8e860 <alt_get_errno+0x48>
   8e854:	00800274 	movhi	r2,9
   8e858:	108bec04 	addi	r2,r2,12208
   8e85c:	e0bfff15 	stw	r2,-4(fp)
   8e860:	e0bfff17 	ldw	r2,-4(fp)
}
   8e864:	e037883a 	mov	sp,fp
   8e868:	dfc00117 	ldw	ra,4(sp)
   8e86c:	df000017 	ldw	fp,0(sp)
   8e870:	dec00204 	addi	sp,sp,8
   8e874:	f800283a 	ret

0008e878 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8e878:	defffa04 	addi	sp,sp,-24
   8e87c:	df000515 	stw	fp,20(sp)
   8e880:	df000504 	addi	fp,sp,20
   8e884:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e888:	0005303a 	rdctl	r2,status
   8e88c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e890:	e0fffd17 	ldw	r3,-12(fp)
   8e894:	00bfff84 	movi	r2,-2
   8e898:	1884703a 	and	r2,r3,r2
   8e89c:	1001703a 	wrctl	status,r2
  
  return context;
   8e8a0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8e8a4:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   8e8a8:	e0bfff17 	ldw	r2,-4(fp)
   8e8ac:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8e8b0:	e0bffc17 	ldw	r2,-16(fp)
   8e8b4:	10c00017 	ldw	r3,0(r2)
   8e8b8:	e0bffc17 	ldw	r2,-16(fp)
   8e8bc:	10800117 	ldw	r2,4(r2)
   8e8c0:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   8e8c4:	e0bffc17 	ldw	r2,-16(fp)
   8e8c8:	10c00117 	ldw	r3,4(r2)
   8e8cc:	e0bffc17 	ldw	r2,-16(fp)
   8e8d0:	10800017 	ldw	r2,0(r2)
   8e8d4:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8e8d8:	e0fffc17 	ldw	r3,-16(fp)
   8e8dc:	e0bffc17 	ldw	r2,-16(fp)
   8e8e0:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   8e8e4:	e0fffc17 	ldw	r3,-16(fp)
   8e8e8:	e0bffc17 	ldw	r2,-16(fp)
   8e8ec:	18800015 	stw	r2,0(r3)
   8e8f0:	e0bffe17 	ldw	r2,-8(fp)
   8e8f4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e8f8:	e0bffb17 	ldw	r2,-20(fp)
   8e8fc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8e900:	e037883a 	mov	sp,fp
   8e904:	df000017 	ldw	fp,0(sp)
   8e908:	dec00104 	addi	sp,sp,4
   8e90c:	f800283a 	ret

0008e910 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8e910:	defffb04 	addi	sp,sp,-20
   8e914:	dfc00415 	stw	ra,16(sp)
   8e918:	df000315 	stw	fp,12(sp)
   8e91c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8e920:	d0a00e17 	ldw	r2,-32712(gp)
   8e924:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8e928:	d0a74317 	ldw	r2,-25332(gp)
   8e92c:	10800044 	addi	r2,r2,1
   8e930:	d0a74315 	stw	r2,-25332(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8e934:	00003106 	br	8e9fc <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   8e938:	e0bffe17 	ldw	r2,-8(fp)
   8e93c:	10800017 	ldw	r2,0(r2)
   8e940:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8e944:	e0bffe17 	ldw	r2,-8(fp)
   8e948:	10800403 	ldbu	r2,16(r2)
   8e94c:	10803fcc 	andi	r2,r2,255
   8e950:	1005003a 	cmpeq	r2,r2,zero
   8e954:	1000051e 	bne	r2,zero,8e96c <alt_tick+0x5c>
   8e958:	d0a74317 	ldw	r2,-25332(gp)
   8e95c:	1004c03a 	cmpne	r2,r2,zero
   8e960:	1000021e 	bne	r2,zero,8e96c <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   8e964:	e0bffe17 	ldw	r2,-8(fp)
   8e968:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8e96c:	e0bffe17 	ldw	r2,-8(fp)
   8e970:	10c00217 	ldw	r3,8(r2)
   8e974:	d0a74317 	ldw	r2,-25332(gp)
   8e978:	10c01e36 	bltu	r2,r3,8e9f4 <alt_tick+0xe4>
   8e97c:	e0bffe17 	ldw	r2,-8(fp)
   8e980:	10800403 	ldbu	r2,16(r2)
   8e984:	10803fcc 	andi	r2,r2,255
   8e988:	1004c03a 	cmpne	r2,r2,zero
   8e98c:	1000191e 	bne	r2,zero,8e9f4 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   8e990:	e0bffe17 	ldw	r2,-8(fp)
   8e994:	10c00317 	ldw	r3,12(r2)
   8e998:	e0bffe17 	ldw	r2,-8(fp)
   8e99c:	11000517 	ldw	r4,20(r2)
   8e9a0:	183ee83a 	callr	r3
   8e9a4:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8e9a8:	e0bffd17 	ldw	r2,-12(fp)
   8e9ac:	1004c03a 	cmpne	r2,r2,zero
   8e9b0:	1000031e 	bne	r2,zero,8e9c0 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   8e9b4:	e13ffe17 	ldw	r4,-8(fp)
   8e9b8:	008e8780 	call	8e878 <alt_alarm_stop>
   8e9bc:	00000d06 	br	8e9f4 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   8e9c0:	e0bffe17 	ldw	r2,-8(fp)
   8e9c4:	10c00217 	ldw	r3,8(r2)
   8e9c8:	e0bffd17 	ldw	r2,-12(fp)
   8e9cc:	1887883a 	add	r3,r3,r2
   8e9d0:	e0bffe17 	ldw	r2,-8(fp)
   8e9d4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8e9d8:	e0bffe17 	ldw	r2,-8(fp)
   8e9dc:	10c00217 	ldw	r3,8(r2)
   8e9e0:	d0a74317 	ldw	r2,-25332(gp)
   8e9e4:	1880032e 	bgeu	r3,r2,8e9f4 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   8e9e8:	e0fffe17 	ldw	r3,-8(fp)
   8e9ec:	00800044 	movi	r2,1
   8e9f0:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   8e9f4:	e0bfff17 	ldw	r2,-4(fp)
   8e9f8:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8e9fc:	d0e00e04 	addi	r3,gp,-32712
   8ea00:	e0bffe17 	ldw	r2,-8(fp)
   8ea04:	10ffcc1e 	bne	r2,r3,8e938 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   8ea08:	e037883a 	mov	sp,fp
   8ea0c:	dfc00117 	ldw	ra,4(sp)
   8ea10:	df000017 	ldw	fp,0(sp)
   8ea14:	dec00204 	addi	sp,sp,8
   8ea18:	f800283a 	ret

0008ea1c <altera_nios2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_irq_init(void) 
{
   8ea1c:	deffff04 	addi	sp,sp,-4
   8ea20:	df000015 	stw	fp,0(sp)
   8ea24:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8ea28:	000170fa 	wrctl	ienable,zero
}
   8ea2c:	e037883a 	mov	sp,fp
   8ea30:	df000017 	ldw	fp,0(sp)
   8ea34:	dec00104 	addi	sp,sp,4
   8ea38:	f800283a 	ret

0008ea3c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8ea3c:	defff904 	addi	sp,sp,-28
   8ea40:	dfc00615 	stw	ra,24(sp)
   8ea44:	df000515 	stw	fp,20(sp)
   8ea48:	df000504 	addi	fp,sp,20
   8ea4c:	e13ffd15 	stw	r4,-12(fp)
   8ea50:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8ea54:	e0bffe17 	ldw	r2,-8(fp)
   8ea58:	10800017 	ldw	r2,0(r2)
   8ea5c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8ea60:	e13ffd17 	ldw	r4,-12(fp)
   8ea64:	008b23c0 	call	8b23c <strlen>
   8ea68:	10800044 	addi	r2,r2,1
   8ea6c:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8ea70:	00000d06 	br	8eaa8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8ea74:	e0bffc17 	ldw	r2,-16(fp)
   8ea78:	11000217 	ldw	r4,8(r2)
   8ea7c:	e1bffb17 	ldw	r6,-20(fp)
   8ea80:	e17ffd17 	ldw	r5,-12(fp)
   8ea84:	008ed840 	call	8ed84 <memcmp>
   8ea88:	1004c03a 	cmpne	r2,r2,zero
   8ea8c:	1000031e 	bne	r2,zero,8ea9c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8ea90:	e0bffc17 	ldw	r2,-16(fp)
   8ea94:	e0bfff15 	stw	r2,-4(fp)
   8ea98:	00000706 	br	8eab8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8ea9c:	e0bffc17 	ldw	r2,-16(fp)
   8eaa0:	10800017 	ldw	r2,0(r2)
   8eaa4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8eaa8:	e0fffe17 	ldw	r3,-8(fp)
   8eaac:	e0bffc17 	ldw	r2,-16(fp)
   8eab0:	10fff01e 	bne	r2,r3,8ea74 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8eab4:	e03fff15 	stw	zero,-4(fp)
   8eab8:	e0bfff17 	ldw	r2,-4(fp)
}
   8eabc:	e037883a 	mov	sp,fp
   8eac0:	dfc00117 	ldw	ra,4(sp)
   8eac4:	df000017 	ldw	fp,0(sp)
   8eac8:	dec00204 	addi	sp,sp,8
   8eacc:	f800283a 	ret

0008ead0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8ead0:	defffa04 	addi	sp,sp,-24
   8ead4:	dfc00515 	stw	ra,20(sp)
   8ead8:	df000415 	stw	fp,16(sp)
   8eadc:	df000404 	addi	fp,sp,16
   8eae0:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8eae4:	00800274 	movhi	r2,9
   8eae8:	1084b504 	addi	r2,r2,4820
   8eaec:	10800017 	ldw	r2,0(r2)
   8eaf0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8eaf4:	00003306 	br	8ebc4 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   8eaf8:	e0bffd17 	ldw	r2,-12(fp)
   8eafc:	11000217 	ldw	r4,8(r2)
   8eb00:	008b23c0 	call	8b23c <strlen>
   8eb04:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   8eb08:	e0bffd17 	ldw	r2,-12(fp)
   8eb0c:	10c00217 	ldw	r3,8(r2)
   8eb10:	e0bffc17 	ldw	r2,-16(fp)
   8eb14:	1885883a 	add	r2,r3,r2
   8eb18:	10bfffc4 	addi	r2,r2,-1
   8eb1c:	10800003 	ldbu	r2,0(r2)
   8eb20:	10803fcc 	andi	r2,r2,255
   8eb24:	1080201c 	xori	r2,r2,128
   8eb28:	10bfe004 	addi	r2,r2,-128
   8eb2c:	10800bd8 	cmpnei	r2,r2,47
   8eb30:	1000031e 	bne	r2,zero,8eb40 <alt_find_file+0x70>
    {
      len -= 1;
   8eb34:	e0bffc17 	ldw	r2,-16(fp)
   8eb38:	10bfffc4 	addi	r2,r2,-1
   8eb3c:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8eb40:	e0bffc17 	ldw	r2,-16(fp)
   8eb44:	1007883a 	mov	r3,r2
   8eb48:	e0bffe17 	ldw	r2,-8(fp)
   8eb4c:	1885883a 	add	r2,r3,r2
   8eb50:	10800003 	ldbu	r2,0(r2)
   8eb54:	10803fcc 	andi	r2,r2,255
   8eb58:	1080201c 	xori	r2,r2,128
   8eb5c:	10bfe004 	addi	r2,r2,-128
   8eb60:	10800be0 	cmpeqi	r2,r2,47
   8eb64:	10000a1e 	bne	r2,zero,8eb90 <alt_find_file+0xc0>
   8eb68:	e0bffc17 	ldw	r2,-16(fp)
   8eb6c:	1007883a 	mov	r3,r2
   8eb70:	e0bffe17 	ldw	r2,-8(fp)
   8eb74:	1885883a 	add	r2,r3,r2
   8eb78:	10800003 	ldbu	r2,0(r2)
   8eb7c:	10803fcc 	andi	r2,r2,255
   8eb80:	1080201c 	xori	r2,r2,128
   8eb84:	10bfe004 	addi	r2,r2,-128
   8eb88:	1004c03a 	cmpne	r2,r2,zero
   8eb8c:	10000a1e 	bne	r2,zero,8ebb8 <alt_find_file+0xe8>
   8eb90:	e0bffd17 	ldw	r2,-12(fp)
   8eb94:	11000217 	ldw	r4,8(r2)
   8eb98:	e1bffc17 	ldw	r6,-16(fp)
   8eb9c:	e17ffe17 	ldw	r5,-8(fp)
   8eba0:	008ed840 	call	8ed84 <memcmp>
   8eba4:	1004c03a 	cmpne	r2,r2,zero
   8eba8:	1000031e 	bne	r2,zero,8ebb8 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8ebac:	e0bffd17 	ldw	r2,-12(fp)
   8ebb0:	e0bfff15 	stw	r2,-4(fp)
   8ebb4:	00000806 	br	8ebd8 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   8ebb8:	e0bffd17 	ldw	r2,-12(fp)
   8ebbc:	10800017 	ldw	r2,0(r2)
   8ebc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8ebc4:	00c00274 	movhi	r3,9
   8ebc8:	18c4b504 	addi	r3,r3,4820
   8ebcc:	e0bffd17 	ldw	r2,-12(fp)
   8ebd0:	10ffc91e 	bne	r2,r3,8eaf8 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8ebd4:	e03fff15 	stw	zero,-4(fp)
   8ebd8:	e0bfff17 	ldw	r2,-4(fp)
}
   8ebdc:	e037883a 	mov	sp,fp
   8ebe0:	dfc00117 	ldw	ra,4(sp)
   8ebe4:	df000017 	ldw	fp,0(sp)
   8ebe8:	dec00204 	addi	sp,sp,8
   8ebec:	f800283a 	ret

0008ebf0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8ebf0:	defffc04 	addi	sp,sp,-16
   8ebf4:	df000315 	stw	fp,12(sp)
   8ebf8:	df000304 	addi	fp,sp,12
   8ebfc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   8ec00:	00bffa04 	movi	r2,-24
   8ec04:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8ec08:	e03ffe15 	stw	zero,-8(fp)
   8ec0c:	00001e06 	br	8ec88 <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
   8ec10:	e0bffe17 	ldw	r2,-8(fp)
   8ec14:	00c00274 	movhi	r3,9
   8ec18:	18c03704 	addi	r3,r3,220
   8ec1c:	10800324 	muli	r2,r2,12
   8ec20:	10c5883a 	add	r2,r2,r3
   8ec24:	10800017 	ldw	r2,0(r2)
   8ec28:	1004c03a 	cmpne	r2,r2,zero
   8ec2c:	1000131e 	bne	r2,zero,8ec7c <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
   8ec30:	e0bffe17 	ldw	r2,-8(fp)
   8ec34:	00c00274 	movhi	r3,9
   8ec38:	18c03704 	addi	r3,r3,220
   8ec3c:	10800324 	muli	r2,r2,12
   8ec40:	10c7883a 	add	r3,r2,r3
   8ec44:	e0bfff17 	ldw	r2,-4(fp)
   8ec48:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   8ec4c:	00800274 	movhi	r2,9
   8ec50:	1084b904 	addi	r2,r2,4836
   8ec54:	10c00017 	ldw	r3,0(r2)
   8ec58:	e0bffe17 	ldw	r2,-8(fp)
   8ec5c:	1880040e 	bge	r3,r2,8ec70 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
   8ec60:	00c00274 	movhi	r3,9
   8ec64:	18c4b904 	addi	r3,r3,4836
   8ec68:	e0bffe17 	ldw	r2,-8(fp)
   8ec6c:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   8ec70:	e0bffe17 	ldw	r2,-8(fp)
   8ec74:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   8ec78:	00000606 	br	8ec94 <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8ec7c:	e0bffe17 	ldw	r2,-8(fp)
   8ec80:	10800044 	addi	r2,r2,1
   8ec84:	e0bffe15 	stw	r2,-8(fp)
   8ec88:	e0bffe17 	ldw	r2,-8(fp)
   8ec8c:	10800810 	cmplti	r2,r2,32
   8ec90:	103fdf1e 	bne	r2,zero,8ec10 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8ec94:	e0bffd17 	ldw	r2,-12(fp)
}
   8ec98:	e037883a 	mov	sp,fp
   8ec9c:	df000017 	ldw	fp,0(sp)
   8eca0:	dec00104 	addi	sp,sp,4
   8eca4:	f800283a 	ret

0008eca8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   8eca8:	defffb04 	addi	sp,sp,-20
   8ecac:	df000415 	stw	fp,16(sp)
   8ecb0:	df000404 	addi	fp,sp,16
   8ecb4:	e13ffe15 	stw	r4,-8(fp)
   8ecb8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   8ecbc:	e0bfff17 	ldw	r2,-4(fp)
   8ecc0:	10840070 	cmpltui	r2,r2,4097
   8ecc4:	1000021e 	bne	r2,zero,8ecd0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   8ecc8:	00840004 	movi	r2,4096
   8eccc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   8ecd0:	e0fffe17 	ldw	r3,-8(fp)
   8ecd4:	e0bfff17 	ldw	r2,-4(fp)
   8ecd8:	1885883a 	add	r2,r3,r2
   8ecdc:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8ece0:	e0bffe17 	ldw	r2,-8(fp)
   8ece4:	e0bffd15 	stw	r2,-12(fp)
   8ece8:	00000506 	br	8ed00 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   8ecec:	e0bffd17 	ldw	r2,-12(fp)
   8ecf0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8ecf4:	e0bffd17 	ldw	r2,-12(fp)
   8ecf8:	10800804 	addi	r2,r2,32
   8ecfc:	e0bffd15 	stw	r2,-12(fp)
   8ed00:	e0fffd17 	ldw	r3,-12(fp)
   8ed04:	e0bffc17 	ldw	r2,-16(fp)
   8ed08:	18bff836 	bltu	r3,r2,8ecec <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   8ed0c:	e0bffe17 	ldw	r2,-8(fp)
   8ed10:	108007cc 	andi	r2,r2,31
   8ed14:	1005003a 	cmpeq	r2,r2,zero
   8ed18:	1000021e 	bne	r2,zero,8ed24 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   8ed1c:	e0bffd17 	ldw	r2,-12(fp)
   8ed20:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   8ed24:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   8ed28:	e037883a 	mov	sp,fp
   8ed2c:	df000017 	ldw	fp,0(sp)
   8ed30:	dec00104 	addi	sp,sp,4
   8ed34:	f800283a 	ret

0008ed38 <atexit>:
   8ed38:	200b883a 	mov	r5,r4
   8ed3c:	000d883a 	mov	r6,zero
   8ed40:	0009883a 	mov	r4,zero
   8ed44:	000f883a 	mov	r7,zero
   8ed48:	008edf81 	jmpi	8edf8 <__register_exitproc>

0008ed4c <exit>:
   8ed4c:	defffe04 	addi	sp,sp,-8
   8ed50:	000b883a 	mov	r5,zero
   8ed54:	dc000015 	stw	r16,0(sp)
   8ed58:	dfc00115 	stw	ra,4(sp)
   8ed5c:	2021883a 	mov	r16,r4
   8ed60:	008ef300 	call	8ef30 <__call_exitprocs>
   8ed64:	00800274 	movhi	r2,9
   8ed68:	1084b004 	addi	r2,r2,4800
   8ed6c:	11000017 	ldw	r4,0(r2)
   8ed70:	20800f17 	ldw	r2,60(r4)
   8ed74:	10000126 	beq	r2,zero,8ed7c <exit+0x30>
   8ed78:	103ee83a 	callr	r2
   8ed7c:	8009883a 	mov	r4,r16
   8ed80:	008f1200 	call	8f120 <_exit>

0008ed84 <memcmp>:
   8ed84:	00c000c4 	movi	r3,3
   8ed88:	1980032e 	bgeu	r3,r6,8ed98 <memcmp+0x14>
   8ed8c:	2144b03a 	or	r2,r4,r5
   8ed90:	10c4703a 	and	r2,r2,r3
   8ed94:	10000f26 	beq	r2,zero,8edd4 <memcmp+0x50>
   8ed98:	31ffffc4 	addi	r7,r6,-1
   8ed9c:	3000061e 	bne	r6,zero,8edb8 <memcmp+0x34>
   8eda0:	00000a06 	br	8edcc <memcmp+0x48>
   8eda4:	39ffffc4 	addi	r7,r7,-1
   8eda8:	00bfffc4 	movi	r2,-1
   8edac:	21000044 	addi	r4,r4,1
   8edb0:	29400044 	addi	r5,r5,1
   8edb4:	38800526 	beq	r7,r2,8edcc <memcmp+0x48>
   8edb8:	20c00003 	ldbu	r3,0(r4)
   8edbc:	28800003 	ldbu	r2,0(r5)
   8edc0:	18bff826 	beq	r3,r2,8eda4 <memcmp+0x20>
   8edc4:	1885c83a 	sub	r2,r3,r2
   8edc8:	f800283a 	ret
   8edcc:	0005883a 	mov	r2,zero
   8edd0:	f800283a 	ret
   8edd4:	180f883a 	mov	r7,r3
   8edd8:	20c00017 	ldw	r3,0(r4)
   8eddc:	28800017 	ldw	r2,0(r5)
   8ede0:	18bfed1e 	bne	r3,r2,8ed98 <memcmp+0x14>
   8ede4:	31bfff04 	addi	r6,r6,-4
   8ede8:	21000104 	addi	r4,r4,4
   8edec:	29400104 	addi	r5,r5,4
   8edf0:	39bff936 	bltu	r7,r6,8edd8 <memcmp+0x54>
   8edf4:	003fe806 	br	8ed98 <memcmp+0x14>

0008edf8 <__register_exitproc>:
   8edf8:	defffa04 	addi	sp,sp,-24
   8edfc:	00800274 	movhi	r2,9
   8ee00:	1084b004 	addi	r2,r2,4800
   8ee04:	dc000015 	stw	r16,0(sp)
   8ee08:	14000017 	ldw	r16,0(r2)
   8ee0c:	dd000415 	stw	r20,16(sp)
   8ee10:	2829883a 	mov	r20,r5
   8ee14:	81405217 	ldw	r5,328(r16)
   8ee18:	dcc00315 	stw	r19,12(sp)
   8ee1c:	dc800215 	stw	r18,8(sp)
   8ee20:	dc400115 	stw	r17,4(sp)
   8ee24:	dfc00515 	stw	ra,20(sp)
   8ee28:	2023883a 	mov	r17,r4
   8ee2c:	3027883a 	mov	r19,r6
   8ee30:	3825883a 	mov	r18,r7
   8ee34:	28002526 	beq	r5,zero,8eecc <__register_exitproc+0xd4>
   8ee38:	29000117 	ldw	r4,4(r5)
   8ee3c:	008007c4 	movi	r2,31
   8ee40:	11002716 	blt	r2,r4,8eee0 <__register_exitproc+0xe8>
   8ee44:	8800101e 	bne	r17,zero,8ee88 <__register_exitproc+0x90>
   8ee48:	2105883a 	add	r2,r4,r4
   8ee4c:	1085883a 	add	r2,r2,r2
   8ee50:	20c00044 	addi	r3,r4,1
   8ee54:	1145883a 	add	r2,r2,r5
   8ee58:	0009883a 	mov	r4,zero
   8ee5c:	15000215 	stw	r20,8(r2)
   8ee60:	28c00115 	stw	r3,4(r5)
   8ee64:	2005883a 	mov	r2,r4
   8ee68:	dfc00517 	ldw	ra,20(sp)
   8ee6c:	dd000417 	ldw	r20,16(sp)
   8ee70:	dcc00317 	ldw	r19,12(sp)
   8ee74:	dc800217 	ldw	r18,8(sp)
   8ee78:	dc400117 	ldw	r17,4(sp)
   8ee7c:	dc000017 	ldw	r16,0(sp)
   8ee80:	dec00604 	addi	sp,sp,24
   8ee84:	f800283a 	ret
   8ee88:	29802204 	addi	r6,r5,136
   8ee8c:	00800044 	movi	r2,1
   8ee90:	110e983a 	sll	r7,r2,r4
   8ee94:	30c04017 	ldw	r3,256(r6)
   8ee98:	2105883a 	add	r2,r4,r4
   8ee9c:	1085883a 	add	r2,r2,r2
   8eea0:	1185883a 	add	r2,r2,r6
   8eea4:	19c6b03a 	or	r3,r3,r7
   8eea8:	14802015 	stw	r18,128(r2)
   8eeac:	14c00015 	stw	r19,0(r2)
   8eeb0:	00800084 	movi	r2,2
   8eeb4:	30c04015 	stw	r3,256(r6)
   8eeb8:	88bfe31e 	bne	r17,r2,8ee48 <__register_exitproc+0x50>
   8eebc:	30804117 	ldw	r2,260(r6)
   8eec0:	11c4b03a 	or	r2,r2,r7
   8eec4:	30804115 	stw	r2,260(r6)
   8eec8:	003fdf06 	br	8ee48 <__register_exitproc+0x50>
   8eecc:	008002b4 	movhi	r2,10
   8eed0:	10879d04 	addi	r2,r2,7796
   8eed4:	100b883a 	mov	r5,r2
   8eed8:	80805215 	stw	r2,328(r16)
   8eedc:	003fd606 	br	8ee38 <__register_exitproc+0x40>
   8eee0:	00800034 	movhi	r2,0
   8eee4:	10800004 	addi	r2,r2,0
   8eee8:	1000021e 	bne	r2,zero,8eef4 <__register_exitproc+0xfc>
   8eeec:	013fffc4 	movi	r4,-1
   8eef0:	003fdc06 	br	8ee64 <__register_exitproc+0x6c>
   8eef4:	01006404 	movi	r4,400
   8eef8:	103ee83a 	callr	r2
   8eefc:	1007883a 	mov	r3,r2
   8ef00:	103ffa26 	beq	r2,zero,8eeec <__register_exitproc+0xf4>
   8ef04:	80805217 	ldw	r2,328(r16)
   8ef08:	180b883a 	mov	r5,r3
   8ef0c:	18000115 	stw	zero,4(r3)
   8ef10:	18800015 	stw	r2,0(r3)
   8ef14:	80c05215 	stw	r3,328(r16)
   8ef18:	18006215 	stw	zero,392(r3)
   8ef1c:	18006315 	stw	zero,396(r3)
   8ef20:	0009883a 	mov	r4,zero
   8ef24:	883fc826 	beq	r17,zero,8ee48 <__register_exitproc+0x50>
   8ef28:	003fd706 	br	8ee88 <__register_exitproc+0x90>

0008ef2c <register_fini>:
   8ef2c:	f800283a 	ret

0008ef30 <__call_exitprocs>:
   8ef30:	00800274 	movhi	r2,9
   8ef34:	1084b004 	addi	r2,r2,4800
   8ef38:	10800017 	ldw	r2,0(r2)
   8ef3c:	defff304 	addi	sp,sp,-52
   8ef40:	df000b15 	stw	fp,44(sp)
   8ef44:	d8800115 	stw	r2,4(sp)
   8ef48:	00800034 	movhi	r2,0
   8ef4c:	10800004 	addi	r2,r2,0
   8ef50:	1005003a 	cmpeq	r2,r2,zero
   8ef54:	d8800215 	stw	r2,8(sp)
   8ef58:	d8800117 	ldw	r2,4(sp)
   8ef5c:	dd400815 	stw	r21,32(sp)
   8ef60:	dd000715 	stw	r20,28(sp)
   8ef64:	10805204 	addi	r2,r2,328
   8ef68:	dfc00c15 	stw	ra,48(sp)
   8ef6c:	ddc00a15 	stw	r23,40(sp)
   8ef70:	dd800915 	stw	r22,36(sp)
   8ef74:	dcc00615 	stw	r19,24(sp)
   8ef78:	dc800515 	stw	r18,20(sp)
   8ef7c:	dc400415 	stw	r17,16(sp)
   8ef80:	dc000315 	stw	r16,12(sp)
   8ef84:	282b883a 	mov	r21,r5
   8ef88:	2039883a 	mov	fp,r4
   8ef8c:	d8800015 	stw	r2,0(sp)
   8ef90:	2829003a 	cmpeq	r20,r5,zero
   8ef94:	d8800117 	ldw	r2,4(sp)
   8ef98:	14405217 	ldw	r17,328(r2)
   8ef9c:	88001026 	beq	r17,zero,8efe0 <__call_exitprocs+0xb0>
   8efa0:	ddc00017 	ldw	r23,0(sp)
   8efa4:	88800117 	ldw	r2,4(r17)
   8efa8:	8c802204 	addi	r18,r17,136
   8efac:	143fffc4 	addi	r16,r2,-1
   8efb0:	80000916 	blt	r16,zero,8efd8 <__call_exitprocs+0xa8>
   8efb4:	05bfffc4 	movi	r22,-1
   8efb8:	a000151e 	bne	r20,zero,8f010 <__call_exitprocs+0xe0>
   8efbc:	8409883a 	add	r4,r16,r16
   8efc0:	2105883a 	add	r2,r4,r4
   8efc4:	1485883a 	add	r2,r2,r18
   8efc8:	10c02017 	ldw	r3,128(r2)
   8efcc:	a8c01126 	beq	r21,r3,8f014 <__call_exitprocs+0xe4>
   8efd0:	843fffc4 	addi	r16,r16,-1
   8efd4:	85bff81e 	bne	r16,r22,8efb8 <__call_exitprocs+0x88>
   8efd8:	d8800217 	ldw	r2,8(sp)
   8efdc:	10003126 	beq	r2,zero,8f0a4 <__call_exitprocs+0x174>
   8efe0:	dfc00c17 	ldw	ra,48(sp)
   8efe4:	df000b17 	ldw	fp,44(sp)
   8efe8:	ddc00a17 	ldw	r23,40(sp)
   8efec:	dd800917 	ldw	r22,36(sp)
   8eff0:	dd400817 	ldw	r21,32(sp)
   8eff4:	dd000717 	ldw	r20,28(sp)
   8eff8:	dcc00617 	ldw	r19,24(sp)
   8effc:	dc800517 	ldw	r18,20(sp)
   8f000:	dc400417 	ldw	r17,16(sp)
   8f004:	dc000317 	ldw	r16,12(sp)
   8f008:	dec00d04 	addi	sp,sp,52
   8f00c:	f800283a 	ret
   8f010:	8409883a 	add	r4,r16,r16
   8f014:	88c00117 	ldw	r3,4(r17)
   8f018:	2105883a 	add	r2,r4,r4
   8f01c:	1445883a 	add	r2,r2,r17
   8f020:	18ffffc4 	addi	r3,r3,-1
   8f024:	11800217 	ldw	r6,8(r2)
   8f028:	1c001526 	beq	r3,r16,8f080 <__call_exitprocs+0x150>
   8f02c:	10000215 	stw	zero,8(r2)
   8f030:	303fe726 	beq	r6,zero,8efd0 <__call_exitprocs+0xa0>
   8f034:	00c00044 	movi	r3,1
   8f038:	1c06983a 	sll	r3,r3,r16
   8f03c:	90804017 	ldw	r2,256(r18)
   8f040:	8cc00117 	ldw	r19,4(r17)
   8f044:	1884703a 	and	r2,r3,r2
   8f048:	10001426 	beq	r2,zero,8f09c <__call_exitprocs+0x16c>
   8f04c:	90804117 	ldw	r2,260(r18)
   8f050:	1884703a 	and	r2,r3,r2
   8f054:	10000c1e 	bne	r2,zero,8f088 <__call_exitprocs+0x158>
   8f058:	2105883a 	add	r2,r4,r4
   8f05c:	1485883a 	add	r2,r2,r18
   8f060:	11400017 	ldw	r5,0(r2)
   8f064:	e009883a 	mov	r4,fp
   8f068:	303ee83a 	callr	r6
   8f06c:	88800117 	ldw	r2,4(r17)
   8f070:	98bfc81e 	bne	r19,r2,8ef94 <__call_exitprocs+0x64>
   8f074:	b8800017 	ldw	r2,0(r23)
   8f078:	147fd526 	beq	r2,r17,8efd0 <__call_exitprocs+0xa0>
   8f07c:	003fc506 	br	8ef94 <__call_exitprocs+0x64>
   8f080:	8c000115 	stw	r16,4(r17)
   8f084:	003fea06 	br	8f030 <__call_exitprocs+0x100>
   8f088:	2105883a 	add	r2,r4,r4
   8f08c:	1485883a 	add	r2,r2,r18
   8f090:	11000017 	ldw	r4,0(r2)
   8f094:	303ee83a 	callr	r6
   8f098:	003ff406 	br	8f06c <__call_exitprocs+0x13c>
   8f09c:	303ee83a 	callr	r6
   8f0a0:	003ff206 	br	8f06c <__call_exitprocs+0x13c>
   8f0a4:	88800117 	ldw	r2,4(r17)
   8f0a8:	1000081e 	bne	r2,zero,8f0cc <__call_exitprocs+0x19c>
   8f0ac:	89000017 	ldw	r4,0(r17)
   8f0b0:	20000726 	beq	r4,zero,8f0d0 <__call_exitprocs+0x1a0>
   8f0b4:	b9000015 	stw	r4,0(r23)
   8f0b8:	8809883a 	mov	r4,r17
   8f0bc:	00000000 	call	0 <__alt_mem_de2_sram_controller_0-0x80000>
   8f0c0:	bc400017 	ldw	r17,0(r23)
   8f0c4:	883fb71e 	bne	r17,zero,8efa4 <__call_exitprocs+0x74>
   8f0c8:	003fc506 	br	8efe0 <__call_exitprocs+0xb0>
   8f0cc:	89000017 	ldw	r4,0(r17)
   8f0d0:	882f883a 	mov	r23,r17
   8f0d4:	2023883a 	mov	r17,r4
   8f0d8:	883fb21e 	bne	r17,zero,8efa4 <__call_exitprocs+0x74>
   8f0dc:	003fc006 	br	8efe0 <__call_exitprocs+0xb0>

0008f0e0 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   8f0e0:	defffd04 	addi	sp,sp,-12
   8f0e4:	df000215 	stw	fp,8(sp)
   8f0e8:	df000204 	addi	fp,sp,8
   8f0ec:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   8f0f0:	e0bfff17 	ldw	r2,-4(fp)
   8f0f4:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8f0f8:	e0bffe17 	ldw	r2,-8(fp)
   8f0fc:	1005003a 	cmpeq	r2,r2,zero
   8f100:	1000021e 	bne	r2,zero,8f10c <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   8f104:	002af070 	cmpltui	zero,zero,43969
   8f108:	00000106 	br	8f110 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   8f10c:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   8f110:	e037883a 	mov	sp,fp
   8f114:	df000017 	ldw	fp,0(sp)
   8f118:	dec00104 	addi	sp,sp,4
   8f11c:	f800283a 	ret

0008f120 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8f120:	defffd04 	addi	sp,sp,-12
   8f124:	dfc00215 	stw	ra,8(sp)
   8f128:	df000115 	stw	fp,4(sp)
   8f12c:	df000104 	addi	fp,sp,4
   8f130:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   8f134:	e13fff17 	ldw	r4,-4(fp)
   8f138:	008f0e00 	call	8f0e0 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8f13c:	003fff06 	br	8f13c <_exit+0x1c>
   8f140:	0008ef2c 	andhi	zero,zero,9148
